2025-07-25 07:26:28,124 - DEBUG - Starte die Anwendung...
2025-07-25 07:26:28,125 - INFO - Verarbeite MP3-Datei...
2025-07-25 07:26:28,125 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 07:26:28,132 - DEBUG - Using proactor: IocpProactor
2025-07-25 07:26:28,138 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 07:26:28,287 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 07:26:28,348 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 07:26:28,552 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C1E0BD34D0>
2025-07-25 07:26:28,552 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001C1E07DAC30> server_hostname='api.gradio.app' timeout=3
2025-07-25 07:26:28,895 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001C1E0D4E910>
2025-07-25 07:26:28,896 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 07:26:28,897 - DEBUG - send_request_headers.complete
2025-07-25 07:26:28,897 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 07:26:28,897 - DEBUG - send_request_body.complete
2025-07-25 07:26:28,897 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 07:26:29,068 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 05:26:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 07:26:29,069 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 07:26:29,070 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 07:26:29,071 - DEBUG - receive_response_body.complete
2025-07-25 07:26:29,071 - DEBUG - response_closed.started
2025-07-25 07:26:29,072 - DEBUG - response_closed.complete
2025-07-25 07:26:29,073 - DEBUG - close.started
2025-07-25 07:26:29,073 - DEBUG - close.complete
2025-07-25 07:35:56,938 - DEBUG - Starte die Anwendung...
2025-07-25 07:35:56,938 - INFO - Verarbeite MP3-Datei...
2025-07-25 07:35:56,938 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 07:35:56,946 - DEBUG - Using proactor: IocpProactor
2025-07-25 07:35:56,971 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 07:35:57,105 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 07:35:57,277 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 07:35:57,291 - DEBUG - Using proactor: IocpProactor
2025-07-25 07:35:57,362 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002A3F977C9D0>
2025-07-25 07:35:57,362 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002A3F93D4680> server_hostname='api.gradio.app' timeout=3
2025-07-25 07:35:57,467 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=None socket_options=None
2025-07-25 07:35:57,468 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002A3F97CC110>
2025-07-25 07:35:57,468 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 07:35:57,469 - DEBUG - send_request_headers.complete
2025-07-25 07:35:57,471 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 07:35:57,471 - DEBUG - send_request_body.complete
2025-07-25 07:35:57,471 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 07:35:57,472 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 05:35:57 GMT'), (b'server', b'uvicorn'), (b'content-length', b'4'), (b'content-type', b'application/json')])
2025-07-25 07:35:57,472 - INFO - HTTP Request: GET http://127.0.0.1:7860/gradio_api/startup-events "HTTP/1.1 200 OK"
2025-07-25 07:35:57,473 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 07:35:57,473 - DEBUG - receive_response_body.complete
2025-07-25 07:35:57,473 - DEBUG - response_closed.started
2025-07-25 07:35:57,473 - DEBUG - response_closed.complete
2025-07-25 07:35:57,474 - DEBUG - close.started
2025-07-25 07:35:57,474 - DEBUG - close.complete
2025-07-25 07:35:57,475 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=3 socket_options=None
2025-07-25 07:35:57,476 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002A3F972D450>
2025-07-25 07:35:57,477 - DEBUG - send_request_headers.started request=<Request [b'HEAD']>
2025-07-25 07:35:57,477 - DEBUG - send_request_headers.complete
2025-07-25 07:35:57,478 - DEBUG - send_request_body.started request=<Request [b'HEAD']>
2025-07-25 07:35:57,478 - DEBUG - send_request_body.complete
2025-07-25 07:35:57,478 - DEBUG - receive_response_headers.started request=<Request [b'HEAD']>
2025-07-25 07:35:57,499 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 05:35:57 GMT'), (b'server', b'uvicorn'), (b'content-length', b'24430'), (b'content-type', b'text/html; charset=utf-8')])
2025-07-25 07:35:57,500 - INFO - HTTP Request: HEAD http://127.0.0.1:7860/ "HTTP/1.1 200 OK"
2025-07-25 07:35:57,501 - DEBUG - receive_response_body.started request=<Request [b'HEAD']>
2025-07-25 07:35:57,501 - DEBUG - receive_response_body.complete
2025-07-25 07:35:57,501 - DEBUG - response_closed.started
2025-07-25 07:35:57,501 - DEBUG - response_closed.complete
2025-07-25 07:35:57,502 - DEBUG - close.started
2025-07-25 07:35:57,502 - DEBUG - close.complete
2025-07-25 07:35:57,507 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 07:35:57,651 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/launched HTTP/1.1" 200 0
2025-07-25 07:35:57,711 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002A3F97547D0>
2025-07-25 07:35:57,711 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 07:35:57,712 - DEBUG - send_request_headers.complete
2025-07-25 07:35:57,712 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 07:35:57,712 - DEBUG - send_request_body.complete
2025-07-25 07:35:57,713 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 07:35:57,883 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 05:35:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 07:35:57,884 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 07:35:57,885 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 07:35:57,885 - DEBUG - receive_response_body.complete
2025-07-25 07:35:57,885 - DEBUG - response_closed.started
2025-07-25 07:35:57,885 - DEBUG - response_closed.complete
2025-07-25 07:35:57,886 - DEBUG - close.started
2025-07-25 07:35:57,886 - DEBUG - close.complete
2025-07-25 07:36:37,106 - DEBUG - matplotlib data path: z:\AI\software\miniconda3\envs\ace-data_env\Lib\site-packages\matplotlib\mpl-data
2025-07-25 07:36:37,115 - DEBUG - CONFIGDIR=C:\Users\methm\.matplotlib
2025-07-25 07:36:37,118 - DEBUG - interactive is False
2025-07-25 07:36:37,118 - DEBUG - platform is win32
2025-07-25 07:36:37,193 - DEBUG - CACHEDIR=C:\Users\methm\.matplotlib
2025-07-25 07:36:37,205 - DEBUG - Using fontManager instance from C:\Users\methm\.matplotlib\fontlist-v390.json
2025-07-25 07:36:37,470 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 07:36:37,470 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 07:36:37,472 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 07:36:37,472 - INFO - Verarbeite Datei: data\08. Die da.mp3
2025-07-25 07:36:37,473 - INFO - Beginne Verarbeitung der Datei: data\08. Die da.mp3
2025-07-25 07:36:37,477 - DEBUG - Metadaten geladen: Artist=Deine Lieblings Rapper, Title=Die da
2025-07-25 07:36:37,478 - INFO - Lade und speichere Lyrics für: Deine Lieblings Rapper - Die da
2025-07-25 07:36:37,481 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:38,029 - DEBUG - https://genius.com:443 "GET /deine-lieblings-rapper-die-da-lyrics HTTP/1.1" 404 None
2025-07-25 07:36:38,123 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:38,763 - DEBUG - https://genius.com:443 "GET /die-da-deine-lieblings-rapper-lyrics HTTP/1.1" 404 None
2025-07-25 07:36:40,348 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:40,904 - DEBUG - https://genius.com:443 "GET /search?q=Deine%20Lieblings%20Rapper%20Die%20da HTTP/1.1" 200 None
2025-07-25 07:36:41,098 - WARNING - Keine Lyrics gefunden für: data\08. Die da.mp3
2025-07-25 07:36:41,098 - INFO - Verarbeite Datei: data\09. Mein Schatz.mp3
2025-07-25 07:36:41,098 - INFO - Beginne Verarbeitung der Datei: data\09. Mein Schatz.mp3
2025-07-25 07:36:41,108 - DEBUG - Metadaten geladen: Artist=Deine Lieblings Rapper, Title=Mein Schatz
2025-07-25 07:36:41,108 - INFO - Lade und speichere Lyrics für: Deine Lieblings Rapper - Mein Schatz
2025-07-25 07:36:41,111 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:41,614 - DEBUG - https://genius.com:443 "GET /deine-lieblings-rapper-mein-schatz-lyrics HTTP/1.1" 404 None
2025-07-25 07:36:41,739 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:42,252 - DEBUG - https://genius.com:443 "GET /mein-schatz-deine-lieblings-rapper-lyrics HTTP/1.1" 404 None
2025-07-25 07:36:43,869 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:44,343 - DEBUG - https://genius.com:443 "GET /search?q=Deine%20Lieblings%20Rapper%20Mein%20Schatz HTTP/1.1" 200 None
2025-07-25 07:36:44,527 - WARNING - Keine Lyrics gefunden für: data\09. Mein Schatz.mp3
2025-07-25 07:36:44,527 - INFO - Verarbeite Datei: data\10. Sommer in meinem Block (Feat. Bintia).mp3
2025-07-25 07:36:44,527 - INFO - Beginne Verarbeitung der Datei: data\10. Sommer in meinem Block (Feat. Bintia).mp3
2025-07-25 07:36:44,535 - DEBUG - Metadaten geladen: Artist=Deine Lieblings Rapper, Title=Sommer in meinem Block (Feat. Bintia)
2025-07-25 07:36:44,536 - INFO - Lade und speichere Lyrics für: Deine Lieblings Rapper - Sommer in meinem Block (Feat. Bintia)
2025-07-25 07:36:44,539 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:45,056 - DEBUG - https://genius.com:443 "GET /deine-lieblings-rapper-sommer-in-meinem-block-lyrics HTTP/1.1" 404 None
2025-07-25 07:36:45,173 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:45,718 - DEBUG - https://genius.com:443 "GET /sommer-in-meinem-block-deine-lieblings-rapper-lyrics HTTP/1.1" 404 None
2025-07-25 07:36:47,336 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:47,722 - DEBUG - https://genius.com:443 "GET /search?q=Deine%20Lieblings%20Rapper%20Sommer%20in%20meinem%20Block%20%28Feat.%20Bintia%29 HTTP/1.1" 200 None
2025-07-25 07:36:47,893 - WARNING - Keine Lyrics gefunden für: data\10. Sommer in meinem Block (Feat. Bintia).mp3
2025-07-25 07:36:47,893 - INFO - Verarbeite Datei: data\11. Drecksau (Feat. J-Luv).mp3
2025-07-25 07:36:47,893 - INFO - Beginne Verarbeitung der Datei: data\11. Drecksau (Feat. J-Luv).mp3
2025-07-25 07:36:47,901 - DEBUG - Metadaten geladen: Artist=Deine Lieblings Rapper, Title=Drecksau (Feat. J-Luv)
2025-07-25 07:36:47,902 - INFO - Lade und speichere Lyrics für: Deine Lieblings Rapper - Drecksau (Feat. J-Luv)
2025-07-25 07:36:47,905 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:48,431 - DEBUG - https://genius.com:443 "GET /deine-lieblings-rapper-drecksau-lyrics HTTP/1.1" 404 None
2025-07-25 07:36:48,557 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:49,085 - DEBUG - https://genius.com:443 "GET /drecksau-deine-lieblings-rapper-lyrics HTTP/1.1" 404 None
2025-07-25 07:36:50,704 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:51,306 - DEBUG - https://genius.com:443 "GET /search?q=Deine%20Lieblings%20Rapper%20Drecksau%20%28Feat.%20J-Luv%29 HTTP/1.1" 200 None
2025-07-25 07:36:51,485 - WARNING - Keine Lyrics gefunden für: data\11. Drecksau (Feat. J-Luv).mp3
2025-07-25 07:36:51,486 - INFO - Verarbeite Datei: data\12. Kling wie du (Feat. Nino Garris).mp3
2025-07-25 07:36:51,486 - INFO - Beginne Verarbeitung der Datei: data\12. Kling wie du (Feat. Nino Garris).mp3
2025-07-25 07:36:51,493 - DEBUG - Metadaten geladen: Artist=Deine Lieblings Rapper, Title=Kling wie du (Feat. Nino Garris)
2025-07-25 07:36:51,494 - INFO - Lade und speichere Lyrics für: Deine Lieblings Rapper - Kling wie du (Feat. Nino Garris)
2025-07-25 07:36:51,498 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:52,065 - DEBUG - https://genius.com:443 "GET /deine-lieblings-rapper-kling-wie-du-lyrics HTTP/1.1" 404 None
2025-07-25 07:36:52,181 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:52,686 - DEBUG - https://genius.com:443 "GET /kling-wie-du-deine-lieblings-rapper-lyrics HTTP/1.1" 404 None
2025-07-25 07:36:54,306 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:54,894 - DEBUG - https://genius.com:443 "GET /search?q=Deine%20Lieblings%20Rapper%20Kling%20wie%20du%20%28Feat.%20Nino%20Garris%29 HTTP/1.1" 200 None
2025-07-25 07:36:55,080 - WARNING - Keine Lyrics gefunden für: data\12. Kling wie du (Feat. Nino Garris).mp3
2025-07-25 07:36:55,080 - INFO - Verarbeite Datei: data\13. Der Shit.mp3
2025-07-25 07:36:55,081 - INFO - Beginne Verarbeitung der Datei: data\13. Der Shit.mp3
2025-07-25 07:36:55,089 - DEBUG - Metadaten geladen: Artist=Deine Lieblings Rapper, Title=Der Shit
2025-07-25 07:36:55,089 - INFO - Lade und speichere Lyrics für: Deine Lieblings Rapper - Der Shit
2025-07-25 07:36:55,092 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:55,645 - DEBUG - https://genius.com:443 "GET /deine-lieblings-rapper-der-shit-lyrics HTTP/1.1" 404 None
2025-07-25 07:36:55,760 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:56,241 - DEBUG - https://genius.com:443 "GET /der-shit-deine-lieblings-rapper-lyrics HTTP/1.1" 404 None
2025-07-25 07:36:57,859 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:36:58,441 - DEBUG - https://genius.com:443 "GET /search?q=Deine%20Lieblings%20Rapper%20Der%20Shit HTTP/1.1" 200 None
2025-07-25 07:36:58,621 - WARNING - Keine Lyrics gefunden für: data\13. Der Shit.mp3
2025-07-25 07:36:58,621 - INFO - Verarbeitung abgeschlossen.
2025-07-25 07:36:58,622 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 07:56:29,392 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 07:56:29,393 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 07:56:29,393 - INFO - Verarbeite Datei: data\01. Vorwort.mp3
2025-07-25 07:56:29,394 - INFO - Beginne Verarbeitung der Datei: data\01. Vorwort.mp3
2025-07-25 07:56:29,401 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Vorwort
2025-07-25 07:56:29,401 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Vorwort
2025-07-25 07:56:29,404 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:56:29,947 - DEBUG - https://genius.com:443 "GET /samy-deluxe-vorwort-lyrics HTTP/1.1" 301 None
2025-07-25 07:56:30,877 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-vorwort-lyrics HTTP/1.1" 200 None
2025-07-25 07:56:31,160 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
2025-07-25 07:56:31,161 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 07:56:31,162 - DEBUG - stack: []
2025-07-25 07:56:31,162 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 07:56:31,162 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-07-25 07:56:31,162 - DEBUG - stack []
2025-07-25 07:56:31,162 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
2025-07-25 07:56:31,162 - DEBUG - stack []
2025-07-25 07:56:31,163 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
2025-07-25 07:56:31,163 - DEBUG - stack []
2025-07-25 07:56:31,163 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
2025-07-25 07:56:31,163 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 07:56:31,163 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
2025-07-25 07:56:31,163 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2025-07-25 07:56:31,163 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
2025-07-25 07:56:31,164 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
2025-07-25 07:56:31,164 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
2025-07-25 07:56:31,164 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
2025-07-25 07:56:31,165 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
2025-07-25 07:56:31,165 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
2025-07-25 07:56:31,165 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
2025-07-25 07:56:31,165 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
2025-07-25 07:56:31,166 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
2025-07-25 07:56:31,166 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
2025-07-25 07:56:31,166 - DEBUG - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
2025-07-25 07:56:31,167 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 07:56:31,167 - DEBUG - dispatch pc=34, inst=CALL(arg=7, lineno=86)
2025-07-25 07:56:31,167 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 07:56:31,167 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
2025-07-25 07:56:31,167 - DEBUG - stack ['$34call.9']
2025-07-25 07:56:31,168 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
2025-07-25 07:56:31,168 - DEBUG - stack []
2025-07-25 07:56:31,168 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
2025-07-25 07:56:31,168 - DEBUG - stack ['$const46.10.0']
2025-07-25 07:56:31,168 - DEBUG - end state. edges=[]
2025-07-25 07:56:31,168 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 07:56:31,169 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-25 07:56:31,169 - DEBUG - defmap: {}
2025-07-25 07:56:31,169 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 07:56:31,169 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 07:56:31,170 - DEBUG - keep phismap: {}
2025-07-25 07:56:31,170 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 07:56:31,170 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 07:56:31,170 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10.0'}), (48, {'retval': '$const46.10.0', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 07:56:31,171 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000002A3FB765580>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10.0 = const(NoneType, None)    ['$const46.10.0']
    $48return_value.11 = cast(value=$const46.10.0) ['$48return_value.11', '$const46.10.0']
    return $48return_value.11                ['$48return_value.11']

2025-07-25 07:56:31,175 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 07:56:31,175 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002A3FB8E04D0>
2025-07-25 07:56:31,176 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,176 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,176 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,176 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,177 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,177 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,177 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,177 - DEBUG - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000002A3FB765580>))
2025-07-25 07:56:31,177 - DEBUG - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,177 - DEBUG - on stmt: $const46.10.0 = const(NoneType, None)
2025-07-25 07:56:31,177 - DEBUG - on stmt: $48return_value.11 = cast(value=$const46.10.0)
2025-07-25 07:56:31,178 - DEBUG - on stmt: return $48return_value.11
2025-07-25 07:56:31,178 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x000002A3FB8F8E50>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x000002A3FB8F91D0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002A3FB8F81D0>,
                                  0)],
             '$const46.10.0': [(<numba.core.ir.Assign object at 0x000002A3FB8F8FD0>,
                                0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000002A3FB8E7C10>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000002A3FB8E7B10>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000002A3FB8E7D10>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x000002A3FB8E7E50>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x000002A3FB8E75D0>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x000002A3FB78B2D0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002A3FB8E7F50>, 0)]})
2025-07-25 07:56:31,179 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002A3FB6A29D0>
2025-07-25 07:56:31,187 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
2025-07-25 07:56:31,193 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 07:56:31,193 - DEBUG - stack: []
2025-07-25 07:56:31,193 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 07:56:31,193 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-07-25 07:56:31,194 - DEBUG - stack []
2025-07-25 07:56:31,194 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
2025-07-25 07:56:31,194 - DEBUG - stack []
2025-07-25 07:56:31,194 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
2025-07-25 07:56:31,194 - DEBUG - stack []
2025-07-25 07:56:31,195 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
2025-07-25 07:56:31,195 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 07:56:31,195 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
2025-07-25 07:56:31,195 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
2025-07-25 07:56:31,196 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
2025-07-25 07:56:31,196 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
2025-07-25 07:56:31,196 - DEBUG - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
2025-07-25 07:56:31,196 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 07:56:31,197 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=9)
2025-07-25 07:56:31,197 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 07:56:31,197 - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
2025-07-25 07:56:31,197 - DEBUG - stack ['$28call.5']
2025-07-25 07:56:31,197 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
2025-07-25 07:56:31,198 - DEBUG - stack []
2025-07-25 07:56:31,198 - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
2025-07-25 07:56:31,198 - DEBUG - stack ['$const40.6.1']
2025-07-25 07:56:31,198 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
2025-07-25 07:56:31,198 - DEBUG - stack []
2025-07-25 07:56:31,198 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
2025-07-25 07:56:31,199 - DEBUG - stack ['$const44.7.2']
2025-07-25 07:56:31,199 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
2025-07-25 07:56:31,199 - DEBUG - stack []
2025-07-25 07:56:31,199 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
2025-07-25 07:56:31,200 - DEBUG - stack ['$const48.8.1']
2025-07-25 07:56:31,200 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
2025-07-25 07:56:31,200 - DEBUG - stack []
2025-07-25 07:56:31,200 - DEBUG - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
2025-07-25 07:56:31,200 - DEBUG - stack ['$const52.9.1']
2025-07-25 07:56:31,201 - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
2025-07-25 07:56:31,201 - DEBUG - stack []
2025-07-25 07:56:31,201 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
2025-07-25 07:56:31,201 - DEBUG - stack ['$const56.10.2']
2025-07-25 07:56:31,201 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
2025-07-25 07:56:31,201 - DEBUG - stack []
2025-07-25 07:56:31,202 - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
2025-07-25 07:56:31,202 - DEBUG - stack ['$const60.11.1']
2025-07-25 07:56:31,202 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
2025-07-25 07:56:31,202 - DEBUG - stack []
2025-07-25 07:56:31,202 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
2025-07-25 07:56:31,202 - DEBUG - stack ['$const64.12.1']
2025-07-25 07:56:31,203 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
2025-07-25 07:56:31,203 - DEBUG - stack []
2025-07-25 07:56:31,203 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
2025-07-25 07:56:31,203 - DEBUG - stack ['$interp_win68.13']
2025-07-25 07:56:31,203 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
2025-07-25 07:56:31,204 - DEBUG - stack ['$70load_attr.14']
2025-07-25 07:56:31,204 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-07-25 07:56:31,204 - DEBUG - stack ['$70load_attr.14', '$const80.15.2']
2025-07-25 07:56:31,204 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
2025-07-25 07:56:31,204 - DEBUG - stack ['$82binary_subscr.16']
2025-07-25 07:56:31,205 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
2025-07-25 07:56:31,205 - DEBUG - stack []
2025-07-25 07:56:31,205 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
2025-07-25 07:56:31,205 - DEBUG - stack ['$x94.17']
2025-07-25 07:56:31,205 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
2025-07-25 07:56:31,206 - DEBUG - stack ['$96load_attr.18']
2025-07-25 07:56:31,206 - DEBUG - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-07-25 07:56:31,206 - DEBUG - stack ['$96load_attr.18', '$const106.19.2']
2025-07-25 07:56:31,206 - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
2025-07-25 07:56:31,206 - DEBUG - stack ['$108binary_subscr.20']
2025-07-25 07:56:31,206 - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
2025-07-25 07:56:31,206 - DEBUG - stack []
2025-07-25 07:56:31,206 - DEBUG - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
2025-07-25 07:56:31,206 - DEBUG - stack ['$t_out120.21']
2025-07-25 07:56:31,207 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
2025-07-25 07:56:31,207 - DEBUG - stack ['$122load_attr.22']
2025-07-25 07:56:31,207 - DEBUG - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-07-25 07:56:31,207 - DEBUG - stack ['$122load_attr.22', '$const132.23.2']
2025-07-25 07:56:31,207 - DEBUG - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
2025-07-25 07:56:31,207 - DEBUG - stack ['$134binary_subscr.24']
2025-07-25 07:56:31,207 - DEBUG - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
2025-07-25 07:56:31,207 - DEBUG - stack []
2025-07-25 07:56:31,208 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
2025-07-25 07:56:31,208 - DEBUG - stack ['$null$146.26', '$146load_global.25']
2025-07-25 07:56:31,208 - DEBUG - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
2025-07-25 07:56:31,209 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 07:56:31,209 - DEBUG - dispatch pc=164, inst=CALL(arg=1, lineno=23)
2025-07-25 07:56:31,209 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 07:56:31,209 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
2025-07-25 07:56:31,209 - DEBUG - stack ['$164call.28']
2025-07-25 07:56:31,209 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
2025-07-25 07:56:31,210 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2025-07-25 07:56:31,210 - DEBUG - stack: ['$phi176.0']
2025-07-25 07:56:31,210 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2025-07-25 07:56:31,210 - DEBUG - dispatch pc=176, inst=NOP(arg=1, lineno=23)
2025-07-25 07:56:31,210 - DEBUG - stack ['$phi176.0']
2025-07-25 07:56:31,210 - DEBUG - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
2025-07-25 07:56:31,210 - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=1)])
2025-07-25 07:56:31,210 - DEBUG - stack: ['$phi178.0']
2025-07-25 07:56:31,211 - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=1)
2025-07-25 07:56:31,211 - DEBUG - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
2025-07-25 07:56:31,211 - DEBUG - stack ['$phi178.0']
2025-07-25 07:56:31,211 - DEBUG - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
2025-07-25 07:56:31,211 - DEBUG - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
2025-07-25 07:56:31,211 - DEBUG - stack: []
2025-07-25 07:56:31,211 - DEBUG - state.pc_initial: State(pc_initial=782 nstack_initial=0)
2025-07-25 07:56:31,211 - DEBUG - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
2025-07-25 07:56:31,212 - DEBUG - stack []
2025-07-25 07:56:31,212 - DEBUG - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
2025-07-25 07:56:31,212 - DEBUG - stack ['$const782.0.0']
2025-07-25 07:56:31,212 - DEBUG - end state. edges=[]
2025-07-25 07:56:31,212 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2025-07-25 07:56:31,212 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2025-07-25 07:56:31,213 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2025-07-25 07:56:31,213 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
2025-07-25 07:56:31,213 - DEBUG - stack ['$phi180.0', '$phi180.1']
2025-07-25 07:56:31,213 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
2025-07-25 07:56:31,213 - DEBUG - stack ['$phi180.0']
2025-07-25 07:56:31,213 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
2025-07-25 07:56:31,214 - DEBUG - stack ['$phi180.0', '$t_out182.2']
2025-07-25 07:56:31,214 - DEBUG - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-07-25 07:56:31,214 - DEBUG - stack ['$phi180.0', '$t_out182.2', '$t184.3']
2025-07-25 07:56:31,214 - DEBUG - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
2025-07-25 07:56:31,214 - DEBUG - stack ['$phi180.0', '$186binary_subscr.4']
2025-07-25 07:56:31,214 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
2025-07-25 07:56:31,214 - DEBUG - stack ['$phi180.0']
2025-07-25 07:56:31,214 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
2025-07-25 07:56:31,215 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
2025-07-25 07:56:31,215 - DEBUG - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
2025-07-25 07:56:31,215 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 07:56:31,215 - DEBUG - dispatch pc=216, inst=CALL(arg=1, lineno=27)
2025-07-25 07:56:31,215 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 07:56:31,215 - DEBUG - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
2025-07-25 07:56:31,215 - DEBUG - stack ['$phi180.0', '$216call.8']
2025-07-25 07:56:31,215 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
2025-07-25 07:56:31,215 - DEBUG - stack ['$phi180.0']
2025-07-25 07:56:31,216 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
2025-07-25 07:56:31,216 - DEBUG - stack ['$phi180.0', '$scale228.9']
2025-07-25 07:56:31,216 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
2025-07-25 07:56:31,216 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
2025-07-25 07:56:31,216 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
2025-07-25 07:56:31,216 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
2025-07-25 07:56:31,217 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
2025-07-25 07:56:31,217 - DEBUG - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
2025-07-25 07:56:31,217 - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
2025-07-25 07:56:31,217 - DEBUG - stack ['$phi180.0', '$binop_mul238.13']
2025-07-25 07:56:31,217 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
2025-07-25 07:56:31,217 - DEBUG - stack ['$phi180.0']
2025-07-25 07:56:31,217 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
2025-07-25 07:56:31,218 - DEBUG - stack ['$phi180.0', '$frac244.14']
2025-07-25 07:56:31,218 - DEBUG - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
2025-07-25 07:56:31,218 - DEBUG - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
2025-07-25 07:56:31,218 - DEBUG - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
2025-07-25 07:56:31,218 - DEBUG - stack ['$phi180.0', '$binop_mul248.16']
2025-07-25 07:56:31,218 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
2025-07-25 07:56:31,218 - DEBUG - stack ['$phi180.0']
2025-07-25 07:56:31,218 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
2025-07-25 07:56:31,218 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
2025-07-25 07:56:31,219 - DEBUG - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
2025-07-25 07:56:31,219 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 07:56:31,219 - DEBUG - dispatch pc=272, inst=CALL(arg=1, lineno=34)
2025-07-25 07:56:31,219 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 07:56:31,219 - DEBUG - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
2025-07-25 07:56:31,220 - DEBUG - stack ['$phi180.0', '$272call.20']
2025-07-25 07:56:31,220 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
2025-07-25 07:56:31,220 - DEBUG - stack ['$phi180.0']
2025-07-25 07:56:31,220 - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
2025-07-25 07:56:31,220 - DEBUG - stack ['$phi180.0', '$index_frac284.21']
2025-07-25 07:56:31,220 - DEBUG - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
2025-07-25 07:56:31,220 - DEBUG - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
2025-07-25 07:56:31,221 - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
2025-07-25 07:56:31,221 - DEBUG - stack ['$phi180.0', '$binop_sub288.23']
2025-07-25 07:56:31,221 - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
2025-07-25 07:56:31,221 - DEBUG - stack ['$phi180.0']
2025-07-25 07:56:31,221 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
2025-07-25 07:56:31,221 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
2025-07-25 07:56:31,221 - DEBUG - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
2025-07-25 07:56:31,222 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
2025-07-25 07:56:31,222 - DEBUG - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
2025-07-25 07:56:31,222 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27.3']
2025-07-25 07:56:31,222 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
2025-07-25 07:56:31,222 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
2025-07-25 07:56:31,222 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
2025-07-25 07:56:31,222 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
2025-07-25 07:56:31,222 - DEBUG - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
2025-07-25 07:56:31,222 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
2025-07-25 07:56:31,223 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
2025-07-25 07:56:31,223 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
2025-07-25 07:56:31,223 - DEBUG - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
2025-07-25 07:56:31,223 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
2025-07-25 07:56:31,223 - DEBUG - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
2025-07-25 07:56:31,223 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 07:56:31,224 - DEBUG - dispatch pc=332, inst=CALL(arg=2, lineno=40)
2025-07-25 07:56:31,224 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 07:56:31,224 - DEBUG - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
2025-07-25 07:56:31,224 - DEBUG - stack ['$phi180.0', '$332call.34']
2025-07-25 07:56:31,224 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
2025-07-25 07:56:31,224 - DEBUG - stack ['$phi180.0']
2025-07-25 07:56:31,225 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
2025-07-25 07:56:31,225 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
2025-07-25 07:56:31,225 - DEBUG - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
2025-07-25 07:56:31,225 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 07:56:31,225 - DEBUG - dispatch pc=362, inst=CALL(arg=1, lineno=41)
2025-07-25 07:56:31,225 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 07:56:31,226 - DEBUG - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
2025-07-25 07:56:31,226 - DEBUG - stack ['$phi180.0', '$362call.38']
2025-07-25 07:56:31,226 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
2025-07-25 07:56:31,226 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2)])
2025-07-25 07:56:31,226 - DEBUG - stack: ['$phi374.0', '$phi374.1']
2025-07-25 07:56:31,226 - DEBUG - state.pc_initial: State(pc_initial=374 nstack_initial=2)
2025-07-25 07:56:31,226 - DEBUG - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
2025-07-25 07:56:31,226 - DEBUG - stack ['$phi374.0', '$phi374.1']
2025-07-25 07:56:31,227 - DEBUG - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
2025-07-25 07:56:31,227 - DEBUG - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
2025-07-25 07:56:31,227 - DEBUG - stack: ['$phi500.0']
2025-07-25 07:56:31,227 - DEBUG - state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-07-25 07:56:31,227 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
2025-07-25 07:56:31,228 - DEBUG - stack ['$phi500.0']
2025-07-25 07:56:31,228 - DEBUG - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
2025-07-25 07:56:31,228 - DEBUG - stack ['$phi500.0', '$scale500.1']
2025-07-25 07:56:31,228 - DEBUG - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
2025-07-25 07:56:31,228 - DEBUG - stack ['$phi500.0', '$scale500.1', '$frac502.2']
2025-07-25 07:56:31,228 - DEBUG - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
2025-07-25 07:56:31,229 - DEBUG - stack ['$phi500.0', '$binop_sub504.3']
2025-07-25 07:56:31,229 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
2025-07-25 07:56:31,229 - DEBUG - stack ['$phi500.0']
2025-07-25 07:56:31,229 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
2025-07-25 07:56:31,229 - DEBUG - stack ['$phi500.0', '$frac510.4']
2025-07-25 07:56:31,230 - DEBUG - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
2025-07-25 07:56:31,230 - DEBUG - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
2025-07-25 07:56:31,230 - DEBUG - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
2025-07-25 07:56:31,230 - DEBUG - stack ['$phi500.0', '$binop_mul514.6']
2025-07-25 07:56:31,230 - DEBUG - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
2025-07-25 07:56:31,231 - DEBUG - stack ['$phi500.0']
2025-07-25 07:56:31,231 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
2025-07-25 07:56:31,231 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
2025-07-25 07:56:31,231 - DEBUG - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
2025-07-25 07:56:31,231 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 07:56:31,231 - DEBUG - dispatch pc=538, inst=CALL(arg=1, lineno=54)
2025-07-25 07:56:31,232 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 07:56:31,232 - DEBUG - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
2025-07-25 07:56:31,232 - DEBUG - stack ['$phi500.0', '$538call.10']
2025-07-25 07:56:31,232 - DEBUG - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
2025-07-25 07:56:31,232 - DEBUG - stack ['$phi500.0']
2025-07-25 07:56:31,232 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
2025-07-25 07:56:31,232 - DEBUG - stack ['$phi500.0', '$index_frac550.11']
2025-07-25 07:56:31,232 - DEBUG - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
2025-07-25 07:56:31,233 - DEBUG - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
2025-07-25 07:56:31,233 - DEBUG - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
2025-07-25 07:56:31,233 - DEBUG - stack ['$phi500.0', '$binop_sub554.13']
2025-07-25 07:56:31,233 - DEBUG - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
2025-07-25 07:56:31,233 - DEBUG - stack ['$phi500.0']
2025-07-25 07:56:31,234 - DEBUG - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
2025-07-25 07:56:31,234 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
2025-07-25 07:56:31,234 - DEBUG - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
2025-07-25 07:56:31,234 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
2025-07-25 07:56:31,234 - DEBUG - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 07:56:31,234 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
2025-07-25 07:56:31,234 - DEBUG - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
2025-07-25 07:56:31,235 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
2025-07-25 07:56:31,235 - DEBUG - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 07:56:31,235 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19.3']
2025-07-25 07:56:31,235 - DEBUG - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
2025-07-25 07:56:31,235 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
2025-07-25 07:56:31,235 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
2025-07-25 07:56:31,235 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
2025-07-25 07:56:31,235 - DEBUG - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 07:56:31,236 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
2025-07-25 07:56:31,236 - DEBUG - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
2025-07-25 07:56:31,236 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
2025-07-25 07:56:31,236 - DEBUG - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
2025-07-25 07:56:31,236 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
2025-07-25 07:56:31,236 - DEBUG - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
2025-07-25 07:56:31,236 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 07:56:31,236 - DEBUG - dispatch pc=604, inst=CALL(arg=2, lineno=60)
2025-07-25 07:56:31,236 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 07:56:31,237 - DEBUG - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
2025-07-25 07:56:31,237 - DEBUG - stack ['$phi500.0', '$604call.26']
2025-07-25 07:56:31,237 - DEBUG - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
2025-07-25 07:56:31,237 - DEBUG - stack ['$phi500.0']
2025-07-25 07:56:31,237 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
2025-07-25 07:56:31,237 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
2025-07-25 07:56:31,238 - DEBUG - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
2025-07-25 07:56:31,238 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 07:56:31,238 - DEBUG - dispatch pc=634, inst=CALL(arg=1, lineno=61)
2025-07-25 07:56:31,238 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 07:56:31,238 - DEBUG - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
2025-07-25 07:56:31,238 - DEBUG - stack ['$phi500.0', '$634call.30']
2025-07-25 07:56:31,238 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
2025-07-25 07:56:31,239 - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
2025-07-25 07:56:31,239 - DEBUG - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 07:56:31,239 - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=3)
2025-07-25 07:56:31,239 - DEBUG - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
2025-07-25 07:56:31,239 - DEBUG - stack ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 07:56:31,239 - DEBUG - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
2025-07-25 07:56:31,239 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 07:56:31,239 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
2025-07-25 07:56:31,239 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
2025-07-25 07:56:31,240 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
2025-07-25 07:56:31,240 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
2025-07-25 07:56:31,240 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
2025-07-25 07:56:31,240 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
2025-07-25 07:56:31,240 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
2025-07-25 07:56:31,240 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
2025-07-25 07:56:31,240 - DEBUG - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 07:56:31,240 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
2025-07-25 07:56:31,240 - DEBUG - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-07-25 07:56:31,241 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
2025-07-25 07:56:31,241 - DEBUG - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
2025-07-25 07:56:31,241 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
2025-07-25 07:56:31,241 - DEBUG - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
2025-07-25 07:56:31,241 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
2025-07-25 07:56:31,241 - DEBUG - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
2025-07-25 07:56:31,242 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
2025-07-25 07:56:31,242 - DEBUG - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
2025-07-25 07:56:31,242 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
2025-07-25 07:56:31,242 - DEBUG - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
2025-07-25 07:56:31,242 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
2025-07-25 07:56:31,243 - DEBUG - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 07:56:31,243 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
2025-07-25 07:56:31,243 - DEBUG - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
2025-07-25 07:56:31,243 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
2025-07-25 07:56:31,243 - DEBUG - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-07-25 07:56:31,243 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
2025-07-25 07:56:31,243 - DEBUG - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 07:56:31,244 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
2025-07-25 07:56:31,244 - DEBUG - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 07:56:31,244 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
2025-07-25 07:56:31,244 - DEBUG - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
2025-07-25 07:56:31,244 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
2025-07-25 07:56:31,244 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
2025-07-25 07:56:31,244 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 07:56:31,244 - DEBUG - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
2025-07-25 07:56:31,244 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20']
2025-07-25 07:56:31,245 - DEBUG - dispatch pc=446, inst=COPY(arg=2, lineno=47)
2025-07-25 07:56:31,245 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
2025-07-25 07:56:31,245 - DEBUG - dispatch pc=448, inst=COPY(arg=2, lineno=47)
2025-07-25 07:56:31,245 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
2025-07-25 07:56:31,245 - DEBUG - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 07:56:31,245 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
2025-07-25 07:56:31,246 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
2025-07-25 07:56:31,246 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
2025-07-25 07:56:31,246 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
2025-07-25 07:56:31,246 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
2025-07-25 07:56:31,246 - DEBUG - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
2025-07-25 07:56:31,247 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
2025-07-25 07:56:31,247 - DEBUG - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
2025-07-25 07:56:31,247 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
2025-07-25 07:56:31,247 - DEBUG - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
2025-07-25 07:56:31,248 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
2025-07-25 07:56:31,248 - DEBUG - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 07:56:31,248 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
2025-07-25 07:56:31,248 - DEBUG - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
2025-07-25 07:56:31,248 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
2025-07-25 07:56:31,248 - DEBUG - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
2025-07-25 07:56:31,248 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
2025-07-25 07:56:31,249 - DEBUG - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
2025-07-25 07:56:31,249 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
2025-07-25 07:56:31,249 - DEBUG - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
2025-07-25 07:56:31,249 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
2025-07-25 07:56:31,249 - DEBUG - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-07-25 07:56:31,249 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
2025-07-25 07:56:31,249 - DEBUG - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
2025-07-25 07:56:31,250 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 07:56:31,250 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
2025-07-25 07:56:31,250 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
2025-07-25 07:56:31,250 - DEBUG - stack: ['$phi646.0', '$phi646.1']
2025-07-25 07:56:31,250 - DEBUG - state.pc_initial: State(pc_initial=646 nstack_initial=2)
2025-07-25 07:56:31,250 - DEBUG - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
2025-07-25 07:56:31,251 - DEBUG - stack ['$phi646.0', '$phi646.1']
2025-07-25 07:56:31,251 - DEBUG - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
2025-07-25 07:56:31,251 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 07:56:31,251 - DEBUG - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 07:56:31,251 - DEBUG - stack: ['$phi778.0']
2025-07-25 07:56:31,251 - DEBUG - state.pc_initial: State(pc_initial=778 nstack_initial=1)
2025-07-25 07:56:31,251 - DEBUG - dispatch pc=778, inst=NOP(arg=1, lineno=61)
2025-07-25 07:56:31,251 - DEBUG - stack ['$phi778.0']
2025-07-25 07:56:31,251 - DEBUG - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
2025-07-25 07:56:31,252 - DEBUG - stack ['$phi778.0']
2025-07-25 07:56:31,252 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
2025-07-25 07:56:31,252 - DEBUG - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
2025-07-25 07:56:31,252 - DEBUG - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 07:56:31,252 - DEBUG - state.pc_initial: State(pc_initial=648 nstack_initial=3)
2025-07-25 07:56:31,252 - DEBUG - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
2025-07-25 07:56:31,252 - DEBUG - stack ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 07:56:31,252 - DEBUG - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
2025-07-25 07:56:31,253 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 07:56:31,253 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
2025-07-25 07:56:31,253 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
2025-07-25 07:56:31,253 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
2025-07-25 07:56:31,253 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
2025-07-25 07:56:31,253 - DEBUG - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
2025-07-25 07:56:31,253 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
2025-07-25 07:56:31,254 - DEBUG - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
2025-07-25 07:56:31,254 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
2025-07-25 07:56:31,254 - DEBUG - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 07:56:31,254 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
2025-07-25 07:56:31,255 - DEBUG - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-07-25 07:56:31,255 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
2025-07-25 07:56:31,255 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
2025-07-25 07:56:31,255 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
2025-07-25 07:56:31,255 - DEBUG - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
2025-07-25 07:56:31,255 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
2025-07-25 07:56:31,255 - DEBUG - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
2025-07-25 07:56:31,255 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
2025-07-25 07:56:31,255 - DEBUG - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
2025-07-25 07:56:31,256 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
2025-07-25 07:56:31,256 - DEBUG - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
2025-07-25 07:56:31,256 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
2025-07-25 07:56:31,256 - DEBUG - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 07:56:31,256 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
2025-07-25 07:56:31,256 - DEBUG - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
2025-07-25 07:56:31,256 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
2025-07-25 07:56:31,256 - DEBUG - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-07-25 07:56:31,256 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
2025-07-25 07:56:31,257 - DEBUG - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 07:56:31,257 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
2025-07-25 07:56:31,257 - DEBUG - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 07:56:31,257 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
2025-07-25 07:56:31,257 - DEBUG - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
2025-07-25 07:56:31,257 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
2025-07-25 07:56:31,257 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
2025-07-25 07:56:31,257 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 07:56:31,258 - DEBUG - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
2025-07-25 07:56:31,258 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20']
2025-07-25 07:56:31,258 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=66)
2025-07-25 07:56:31,258 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
2025-07-25 07:56:31,258 - DEBUG - dispatch pc=720, inst=COPY(arg=2, lineno=66)
2025-07-25 07:56:31,259 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
2025-07-25 07:56:31,259 - DEBUG - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 07:56:31,259 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
2025-07-25 07:56:31,259 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
2025-07-25 07:56:31,259 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
2025-07-25 07:56:31,259 - DEBUG - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
2025-07-25 07:56:31,259 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
2025-07-25 07:56:31,259 - DEBUG - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
2025-07-25 07:56:31,260 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
2025-07-25 07:56:31,260 - DEBUG - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
2025-07-25 07:56:31,260 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
2025-07-25 07:56:31,260 - DEBUG - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 07:56:31,260 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
2025-07-25 07:56:31,260 - DEBUG - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
2025-07-25 07:56:31,260 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
2025-07-25 07:56:31,260 - DEBUG - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 07:56:31,260 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28.3']
2025-07-25 07:56:31,261 - DEBUG - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 07:56:31,261 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
2025-07-25 07:56:31,261 - DEBUG - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
2025-07-25 07:56:31,261 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
2025-07-25 07:56:31,261 - DEBUG - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
2025-07-25 07:56:31,261 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
2025-07-25 07:56:31,261 - DEBUG - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
2025-07-25 07:56:31,262 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
2025-07-25 07:56:31,262 - DEBUG - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
2025-07-25 07:56:31,262 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
2025-07-25 07:56:31,262 - DEBUG - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-07-25 07:56:31,262 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
2025-07-25 07:56:31,263 - DEBUG - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
2025-07-25 07:56:31,263 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 07:56:31,263 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
2025-07-25 07:56:31,263 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
2025-07-25 07:56:31,263 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2)])
2025-07-25 07:56:31,263 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 07:56:31,263 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
2025-07-25 07:56:31,264 - DEBUG - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
2025-07-25 07:56:31,265 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
2025-07-25 07:56:31,267 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 07:56:31,270 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 07:56:31,272 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 07:56:31,274 - DEBUG - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
2025-07-25 07:56:31,274 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
2025-07-25 07:56:31,275 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 07:56:31,275 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6.1'}), (42, {'value': '$const40.6.1'}), (44, {'res': '$const44.7.2'}), (46, {'value': '$const44.7.2'}), (48, {'res': '$const48.8.1'}), (50, {'value': '$const48.8.1'}), (52, {'res': '$const52.9.1'}), (54, {'value': '$const52.9.1'}), (56, {'res': '$const56.10.2'}), (58, {'value': '$const56.10.2'}), (60, {'res': '$const60.11.1'}), (62, {'value': '$const60.11.1'}), (64, {'res': '$const64.12.1'}), (66, {'value': '$const64.12.1'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15.2'}), (82, {'index': '$const80.15.2', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19.2'}), (108, {'index': '$const106.19.2', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23.2'}), (134, {'index': '$const132.23.2', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
2025-07-25 07:56:31,276 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
2025-07-25 07:56:31,276 - DEBUG - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
2025-07-25 07:56:31,276 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27.3'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27.3', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
2025-07-25 07:56:31,277 - DEBUG - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
2025-07-25 07:56:31,277 - DEBUG - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
2025-07-25 07:56:31,278 - DEBUG - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19.3'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19.3', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
2025-07-25 07:56:31,279 - DEBUG - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
2025-07-25 07:56:31,279 - DEBUG - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28.3'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28.3', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
2025-07-25 07:56:31,280 - DEBUG - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
2025-07-25 07:56:31,280 - DEBUG - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0.0'}), (784, {'retval': '$const782.0.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 07:56:31,286 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15.2 = const(int, 0)            ['$const80.15.2']
    nwin = getitem(value=$70load_attr.14, index=$const80.15.2, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15.2', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19.2 = const(int, 0)           ['$const106.19.2']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19.2, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19.2', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23.2 = const(int, 0)           ['$const132.23.2']
    n_out = getitem(value=$122load_attr.22, index=$const132.23.2, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23.2', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27.3 = const(int, 1)           ['$const308.27.3']
    $binop_add310.28 = n + $const308.27.3    ['$binop_add310.28', '$const308.27.3', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19.3 = const(int, 1)           ['$const580.19.3']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19.3 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19.3']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28.3 = const(int, 1)           ['$const744.28.3']
    $binop_add746.29 = $binop_add740.27 + $const744.28.3 ['$binop_add740.27', '$binop_add746.29', '$const744.28.3']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0.0 = const(NoneType, None)    ['$const782.0.0']
    $784return_value.1 = cast(value=$const782.0.0) ['$784return_value.1', '$const782.0.0']
    return $784return_value.1                ['$784return_value.1']

2025-07-25 07:56:31,319 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 07:56:31,319 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002A3FB8E17D0>
2025-07-25 07:56:31,319 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,320 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,320 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,320 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,320 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,320 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,320 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,320 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,321 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,321 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,321 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,321 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,321 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,321 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,321 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,321 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,322 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,322 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,322 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,322 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,322 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,322 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,322 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,322 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,322 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,323 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,323 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,323 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,323 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,323 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,323 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,323 - DEBUG - ==== SSA block analysis pass on 176
2025-07-25 07:56:31,323 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002A3FB8E17D0>
2025-07-25 07:56:31,324 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,324 - DEBUG - ==== SSA block analysis pass on 178
2025-07-25 07:56:31,324 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002A3FB8E17D0>
2025-07-25 07:56:31,324 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,324 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,324 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,324 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,324 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,325 - DEBUG - ==== SSA block analysis pass on 180
2025-07-25 07:56:31,325 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002A3FB8E17D0>
2025-07-25 07:56:31,325 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,325 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,325 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,326 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,326 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 07:56:31,326 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 07:56:31,326 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,326 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,327 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,327 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,327 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,327 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,327 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 07:56:31,327 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 07:56:31,327 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,328 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,328 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,328 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,328 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,328 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,328 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,328 - DEBUG - ==== SSA block analysis pass on 374
2025-07-25 07:56:31,328 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002A3FB8E17D0>
2025-07-25 07:56:31,329 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,329 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,329 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,329 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,329 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,330 - DEBUG - ==== SSA block analysis pass on 376
2025-07-25 07:56:31,330 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002A3FB8E17D0>
2025-07-25 07:56:31,330 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,330 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,330 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 07:56:31,330 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,331 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,331 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 07:56:31,331 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,331 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,331 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,331 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,331 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 07:56:31,331 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,332 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,332 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,332 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,332 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,332 - DEBUG - ==== SSA block analysis pass on 500
2025-07-25 07:56:31,332 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002A3FB8E17D0>
2025-07-25 07:56:31,333 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 07:56:31,333 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 07:56:31,333 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,333 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,333 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,334 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,334 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,334 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 07:56:31,334 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,334 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,335 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 07:56:31,335 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,335 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,335 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,335 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,335 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,336 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,336 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,336 - DEBUG - ==== SSA block analysis pass on 646
2025-07-25 07:56:31,336 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002A3FB8E17D0>
2025-07-25 07:56:31,336 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,336 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,336 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,336 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,336 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,337 - DEBUG - ==== SSA block analysis pass on 648
2025-07-25 07:56:31,337 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002A3FB8E17D0>
2025-07-25 07:56:31,337 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,337 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,337 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 07:56:31,337 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,337 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,338 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 07:56:31,338 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,338 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,338 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,338 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,339 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 07:56:31,339 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,339 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,339 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,339 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,339 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,340 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,340 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,340 - DEBUG - ==== SSA block analysis pass on 778
2025-07-25 07:56:31,340 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002A3FB8E17D0>
2025-07-25 07:56:31,340 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,340 - DEBUG - ==== SSA block analysis pass on 782
2025-07-25 07:56:31,340 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002A3FB8E17D0>
2025-07-25 07:56:31,340 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,341 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,341 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,341 - DEBUG - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x000002A3FB866790>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x000002A3FB79BA90>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x000002A3FB79B650>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x000002A3FB79B450>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x000002A3FB79B490>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x000002A3FB79B110>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x000002A3FB79AF10>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x000002A3FB799990>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x000002A3FB8C7610>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x000002A3FB8C6A50>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x000002A3FB914090>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x000002A3FB914450>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x000002A3FB914850>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x000002A3FB799390>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x000002A3FB8C47D0>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x000002A3FB8C5390>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x000002A3FB915750>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x000002A3FB916950>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x000002A3FB87FFD0>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x000002A3FB87F550>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002A3FB8D3450>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x000002A3FB87E690>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x000002A3FB87D910>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x000002A3FB8CE010>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x000002A3FB8CC1D0>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x000002A3FB8CCC10>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x000002A3FB87D7D0>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x000002A3FB87CE50>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x000002A3FB916B50>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x000002A3FB8CD910>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x000002A3FB8CE6D0>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x000002A3FB867010>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x000002A3FB8CF3D0>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x000002A3FB646A50>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x000002A3FB8CF090>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x000002A3FB867810>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x000002A3FB8C7F50>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x000002A3FB915190>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x000002A3FB915FD0>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x000002A3FB8CD5D0>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x000002A3FB8CE410>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x000002A3FB8CFD90>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x000002A3FB8CFC50>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x000002A3FB8C5310>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x000002A3FB87C310>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x000002A3FB87F010>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x000002A3FB8F55D0>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x000002A3FB886890>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x000002A3FB915710>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x000002A3FB915E50>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x000002A3FB916310>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x000002A3FB87F3D0>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x000002A3FB8CD610>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x000002A3FB8CE390>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x000002A3FB8CE950>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x000002A3FB8F6350>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x000002A3FB79B2D0>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x000002A3FB8C5C10>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x000002A3FB87F750>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x000002A3FB87FB90>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x000002A3FB87D3D0>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x000002A3FB87D1D0>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x000002A3FB87C950>,
                                   500)],
             '$const106.19.2': [(<numba.core.ir.Assign object at 0x000002A3FB867E90>,
                                 0)],
             '$const132.23.2': [(<numba.core.ir.Assign object at 0x000002A3FB79A490>,
                                 0)],
             '$const308.27.3': [(<numba.core.ir.Assign object at 0x000002A3FB8C7310>,
                                 180)],
             '$const580.19.3': [(<numba.core.ir.Assign object at 0x000002A3FB87D150>,
                                 500)],
             '$const744.28.3': [(<numba.core.ir.Assign object at 0x000002A3FB8CFF90>,
                                 648)],
             '$const782.0.0': [(<numba.core.ir.Assign object at 0x000002A3FB8CD090>,
                                782)],
             '$const80.15.2': [(<numba.core.ir.Assign object at 0x000002A3FB8641D0>,
                                0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x000002A3FB8B5F90>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x000002A3FB6CE110>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x000002A3FB8D2290>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x000002A3FB798250>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x000002A3FB87ED90>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x000002A3FB8CC9D0>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x000002A3FB866410>, 0),
                     (<numba.core.ir.Assign object at 0x000002A3FB8C7690>, 180),
                     (<numba.core.ir.Assign object at 0x000002A3FB87DCD0>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x000002A3FB8655D0>, 0),
                      (<numba.core.ir.Assign object at 0x000002A3FB8C4310>,
                       180),
                      (<numba.core.ir.Assign object at 0x000002A3FB916550>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x000002A3FB8C4D50>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x000002A3FB917610>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x000002A3FB8654D0>,
                             0),
                            (<numba.core.ir.Assign object at 0x000002A3FB8C6B90>,
                             180),
                            (<numba.core.ir.Assign object at 0x000002A3FB87E910>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x000002A3FB885050>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000002A3FB8945D0>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000002A3FB895790>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x000002A3FB8CCA50>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x000002A3FB87C390>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x000002A3FB864A10>, 0),
                   (<numba.core.ir.Assign object at 0x000002A3FB799550>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x000002A3FB8D0D50>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x000002A3FB8D0F50>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000002A3FB8E6590>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x000002A3FB8D0C50>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x000002A3FB866810>,
                         0),
                        (<numba.core.ir.Assign object at 0x000002A3FB8C4650>,
                         180),
                        (<numba.core.ir.Assign object at 0x000002A3FB87E1D0>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x000002A3FB8D2F10>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x000002A3FB79AB10>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x000002A3FB895B50>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x000002A3FB8B5FD0>,
                                0),
                               (<numba.core.ir.Assign object at 0x000002A3FB799D10>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x000002A3FB866B50>,
                         0),
                        (<numba.core.ir.Assign object at 0x000002A3FB916750>,
                         376),
                        (<numba.core.ir.Assign object at 0x000002A3FB8CE7D0>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x000002A3FB8952D0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002A3FB8D3050>, 0)]})
2025-07-25 07:56:31,353 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002A3FB7AA2D0>
2025-07-25 07:56:31,353 - DEBUG - Fix SSA violator on var time_register
2025-07-25 07:56:31,354 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,354 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7235D0>
2025-07-25 07:56:31,354 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,355 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,355 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,355 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,355 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,355 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,355 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,355 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,356 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,356 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,356 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,356 - DEBUG - first assign: time_register
2025-07-25 07:56:31,356 - DEBUG - replaced with: time_register = const(float, 0.0)
2025-07-25 07:56:31,356 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,356 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,356 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,357 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,357 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,357 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,357 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,357 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,357 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,358 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,358 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,358 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,358 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,358 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,359 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,359 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,359 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,359 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,359 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,360 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,360 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,360 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7235D0>
2025-07-25 07:56:31,360 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,360 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,360 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7235D0>
2025-07-25 07:56:31,360 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,360 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,360 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,360 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,361 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,361 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,361 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7235D0>
2025-07-25 07:56:31,361 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,361 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,361 - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,361 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,361 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,362 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 07:56:31,362 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 07:56:31,362 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,362 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,362 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,362 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,363 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,363 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,363 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 07:56:31,363 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 07:56:31,363 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,363 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,364 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,364 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,364 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,364 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,364 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,364 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,364 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7235D0>
2025-07-25 07:56:31,365 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,365 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,365 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,365 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,365 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,365 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,365 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7235D0>
2025-07-25 07:56:31,365 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,366 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,366 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 07:56:31,366 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,366 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,366 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 07:56:31,367 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,367 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,367 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,367 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,367 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 07:56:31,368 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,368 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,368 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,368 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,368 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,368 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,368 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7235D0>
2025-07-25 07:56:31,368 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 07:56:31,369 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 07:56:31,369 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,369 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,369 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,369 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,369 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,370 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 07:56:31,370 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,370 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,370 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 07:56:31,370 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,370 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,371 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,371 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,371 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,371 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,371 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,371 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,372 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7235D0>
2025-07-25 07:56:31,372 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,372 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,372 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,372 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,372 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,372 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,372 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7235D0>
2025-07-25 07:56:31,372 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,373 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,373 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 07:56:31,373 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,373 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,373 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 07:56:31,373 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,373 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,374 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,374 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,374 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 07:56:31,374 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,374 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,374 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,374 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,374 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,375 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,375 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,375 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,375 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7235D0>
2025-07-25 07:56:31,375 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,375 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,376 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7235D0>
2025-07-25 07:56:31,376 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,376 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,376 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,376 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002A3FB8962D0>],
             180: [<numba.core.ir.Assign object at 0x000002A3FB8E4490>]})
2025-07-25 07:56:31,376 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,377 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB8E6450>
2025-07-25 07:56:31,377 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,377 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,377 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,377 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,378 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,378 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,378 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,378 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,378 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,378 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,378 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,379 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,379 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,379 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,379 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,379 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,379 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,380 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,380 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,380 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,380 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,380 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,380 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,380 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,381 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,381 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,381 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,381 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,381 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,381 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,381 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,381 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,382 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB8E6450>
2025-07-25 07:56:31,382 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,382 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,382 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB8E6450>
2025-07-25 07:56:31,382 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,382 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,382 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,382 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,382 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,383 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,383 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB8E6450>
2025-07-25 07:56:31,383 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,383 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,383 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,384 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,384 - DEBUG - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,384 - DEBUG - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,384 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 07:56:31,384 - DEBUG - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
2025-07-25 07:56:31,385 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n
2025-07-25 07:56:31,385 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 07:56:31,385 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,385 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,385 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,385 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,385 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,385 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,386 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 07:56:31,386 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 07:56:31,386 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,386 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,386 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,386 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,386 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,386 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,387 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,387 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,387 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB8E6450>
2025-07-25 07:56:31,387 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,387 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,387 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,387 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,388 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,388 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,388 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB8E6450>
2025-07-25 07:56:31,388 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,388 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,388 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 07:56:31,389 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,389 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,389 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 07:56:31,389 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,389 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,390 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,390 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,390 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 07:56:31,390 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,390 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,390 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,390 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,390 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,391 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,391 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB8E6450>
2025-07-25 07:56:31,391 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 07:56:31,391 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 07:56:31,391 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,391 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,391 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,392 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,392 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,392 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 07:56:31,392 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,392 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,392 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 07:56:31,393 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,393 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,393 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,393 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,393 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,393 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,393 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,394 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,394 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB8E6450>
2025-07-25 07:56:31,394 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,394 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,394 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,394 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,394 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,394 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,395 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB8E6450>
2025-07-25 07:56:31,395 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,395 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,395 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 07:56:31,395 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,395 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,395 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 07:56:31,395 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,396 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,396 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,396 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,396 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 07:56:31,397 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,397 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,397 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,397 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,397 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,397 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,397 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,398 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,398 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB8E6450>
2025-07-25 07:56:31,398 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,398 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,398 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB8E6450>
2025-07-25 07:56:31,398 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,398 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,398 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,399 - DEBUG - Fix SSA violator on var n
2025-07-25 07:56:31,399 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,399 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB896490>
2025-07-25 07:56:31,399 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,399 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,399 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,400 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,400 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,400 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,400 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,400 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,400 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,401 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,401 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,401 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,401 - DEBUG - first assign: n
2025-07-25 07:56:31,401 - DEBUG - replaced with: n = const(int, 0)
2025-07-25 07:56:31,401 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,401 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,401 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,402 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,402 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,402 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,402 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,402 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,402 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,402 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,402 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,402 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,403 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,403 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,403 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,403 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,403 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,403 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,403 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,403 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,403 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB896490>
2025-07-25 07:56:31,404 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,404 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,404 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB896490>
2025-07-25 07:56:31,404 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,404 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,405 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,405 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,405 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,406 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,406 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB896490>
2025-07-25 07:56:31,406 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,406 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,406 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,406 - DEBUG - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,406 - DEBUG - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,407 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 07:56:31,407 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 07:56:31,407 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,407 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,407 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,407 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,407 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,407 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,408 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 07:56:31,408 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 07:56:31,408 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,408 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,408 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,409 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,409 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,409 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,409 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,409 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,409 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB896490>
2025-07-25 07:56:31,409 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,410 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,410 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,410 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,410 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,410 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,410 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB896490>
2025-07-25 07:56:31,410 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,410 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,410 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 07:56:31,411 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,411 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,411 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 07:56:31,411 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,411 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,411 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,411 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,411 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 07:56:31,411 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,412 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,412 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,412 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,412 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,412 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,412 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB896490>
2025-07-25 07:56:31,413 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 07:56:31,413 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 07:56:31,413 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,413 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,413 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,413 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,413 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,413 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 07:56:31,414 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,414 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,414 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 07:56:31,414 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,414 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,414 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,414 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,414 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,414 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,415 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,415 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,415 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB896490>
2025-07-25 07:56:31,415 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,415 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,415 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,416 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,416 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,416 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,416 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB896490>
2025-07-25 07:56:31,416 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,417 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,417 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 07:56:31,417 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,417 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,417 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 07:56:31,417 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,417 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,418 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,418 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,418 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 07:56:31,418 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,418 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,418 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,418 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,418 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,419 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,419 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,419 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,419 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB896490>
2025-07-25 07:56:31,419 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,420 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,420 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB896490>
2025-07-25 07:56:31,420 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,420 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,420 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,420 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002A3FB7A9890>],
             180: [<numba.core.ir.Assign object at 0x000002A3FB8E6450>]})
2025-07-25 07:56:31,421 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,421 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB914F50>
2025-07-25 07:56:31,421 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,421 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,422 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,422 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,422 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,422 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,422 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,422 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,422 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,422 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,423 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,423 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,423 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,423 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,423 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,423 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,423 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,423 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,423 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,424 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,424 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,424 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,424 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,424 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,424 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,424 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,424 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,425 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,425 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,425 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,425 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,425 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,425 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB914F50>
2025-07-25 07:56:31,426 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,426 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,426 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB914F50>
2025-07-25 07:56:31,426 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,426 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,426 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,426 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,426 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,426 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,427 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB914F50>
2025-07-25 07:56:31,427 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,427 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,427 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,427 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,427 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 07:56:31,427 - DEBUG - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
2025-07-25 07:56:31,427 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 07:56:31,428 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 07:56:31,428 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,428 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,428 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,428 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,428 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,428 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,428 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 07:56:31,429 - DEBUG - find_def var='n' stmt=$binop_add310.28 = n + $const308.27.3
2025-07-25 07:56:31,429 - DEBUG - replaced with: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 07:56:31,429 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 07:56:31,429 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,429 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,430 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,430 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,430 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,430 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,430 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,430 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,431 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB914F50>
2025-07-25 07:56:31,431 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,431 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,431 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,431 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,431 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,431 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,431 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB914F50>
2025-07-25 07:56:31,431 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,431 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,432 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 07:56:31,432 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,432 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,432 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 07:56:31,432 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,432 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,432 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,432 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,433 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 07:56:31,433 - DEBUG - find_def var='n' stmt=$binop_sub468.27 = n - i
2025-07-25 07:56:31,433 - DEBUG - find_def_from_top label 376
2025-07-25 07:56:31,433 - DEBUG - idom 374 from label 376
2025-07-25 07:56:31,433 - DEBUG - find_def_from_bottom label 374
2025-07-25 07:56:31,434 - DEBUG - find_def_from_top label 374
2025-07-25 07:56:31,434 - DEBUG - idom 180 from label 374
2025-07-25 07:56:31,434 - DEBUG - find_def_from_bottom label 180
2025-07-25 07:56:31,434 - DEBUG - replaced with: $binop_sub468.27 = n.1 - i
2025-07-25 07:56:31,434 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,434 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,434 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,435 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,435 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,435 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,435 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB914F50>
2025-07-25 07:56:31,435 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 07:56:31,435 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 07:56:31,435 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,435 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,436 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,436 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,436 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,436 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 07:56:31,436 - DEBUG - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
2025-07-25 07:56:31,436 - DEBUG - find_def_from_top label 500
2025-07-25 07:56:31,436 - DEBUG - idom 374 from label 500
2025-07-25 07:56:31,436 - DEBUG - find_def_from_bottom label 374
2025-07-25 07:56:31,436 - DEBUG - find_def_from_top label 374
2025-07-25 07:56:31,436 - DEBUG - idom 180 from label 374
2025-07-25 07:56:31,437 - DEBUG - find_def_from_bottom label 180
2025-07-25 07:56:31,437 - DEBUG - replaced with: $binop_sub576.18 = n_orig - n.1
2025-07-25 07:56:31,437 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,437 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,437 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 07:56:31,438 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,438 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,438 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,438 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,438 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,438 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,439 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,439 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,439 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB914F50>
2025-07-25 07:56:31,439 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,439 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,439 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,439 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,439 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,439 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,440 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB914F50>
2025-07-25 07:56:31,440 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,440 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,440 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 07:56:31,440 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,440 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,440 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 07:56:31,440 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,440 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,441 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,441 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,441 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 07:56:31,441 - DEBUG - find_def var='n' stmt=$binop_add740.27 = n + k
2025-07-25 07:56:31,441 - DEBUG - find_def_from_top label 648
2025-07-25 07:56:31,441 - DEBUG - idom 646 from label 648
2025-07-25 07:56:31,442 - DEBUG - find_def_from_bottom label 646
2025-07-25 07:56:31,442 - DEBUG - find_def_from_top label 646
2025-07-25 07:56:31,442 - DEBUG - idom 500 from label 646
2025-07-25 07:56:31,442 - DEBUG - find_def_from_bottom label 500
2025-07-25 07:56:31,442 - DEBUG - find_def_from_top label 500
2025-07-25 07:56:31,442 - DEBUG - idom 374 from label 500
2025-07-25 07:56:31,442 - DEBUG - find_def_from_bottom label 374
2025-07-25 07:56:31,443 - DEBUG - find_def_from_top label 374
2025-07-25 07:56:31,443 - DEBUG - idom 180 from label 374
2025-07-25 07:56:31,443 - DEBUG - find_def_from_bottom label 180
2025-07-25 07:56:31,443 - DEBUG - replaced with: $binop_add740.27 = n.1 + k
2025-07-25 07:56:31,443 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,443 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,443 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,443 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,444 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,444 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,444 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,444 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,444 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB914F50>
2025-07-25 07:56:31,444 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,444 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,444 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB914F50>
2025-07-25 07:56:31,444 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,445 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,445 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,445 - DEBUG - Fix SSA violator on var frac
2025-07-25 07:56:31,445 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,445 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83F210>
2025-07-25 07:56:31,445 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,445 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,446 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,446 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,446 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,446 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,446 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,446 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,446 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,447 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,447 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,447 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,447 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,447 - DEBUG - first assign: frac
2025-07-25 07:56:31,447 - DEBUG - replaced with: frac = const(float, 0.0)
2025-07-25 07:56:31,447 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,447 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,447 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,448 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,448 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,448 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,448 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,448 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,448 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,448 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,448 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,449 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,449 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,449 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,449 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,449 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,449 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,450 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,450 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,450 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83F210>
2025-07-25 07:56:31,450 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,450 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,450 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83F210>
2025-07-25 07:56:31,451 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,451 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,451 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,451 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,451 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,452 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,452 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83F210>
2025-07-25 07:56:31,452 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,452 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,452 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,453 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,453 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 07:56:31,453 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 07:56:31,453 - DEBUG - replaced with: frac.1 = scale * $binop_sub234.12
2025-07-25 07:56:31,454 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,454 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,454 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,455 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,455 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,455 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,456 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 07:56:31,456 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 07:56:31,456 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,456 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,456 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,457 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,457 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,457 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,457 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,457 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,457 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83F210>
2025-07-25 07:56:31,457 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,457 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,458 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,458 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,458 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,458 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,458 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83F210>
2025-07-25 07:56:31,458 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,459 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,459 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 07:56:31,459 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,459 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,459 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 07:56:31,459 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,459 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,460 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,460 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,460 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 07:56:31,460 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,460 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,460 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,460 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,460 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,460 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,461 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83F210>
2025-07-25 07:56:31,461 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 07:56:31,461 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 07:56:31,461 - DEBUG - replaced with: frac.2 = $binop_sub504.3
2025-07-25 07:56:31,461 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,461 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,461 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,461 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,462 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,462 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 07:56:31,462 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,462 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,462 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 07:56:31,462 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,463 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,463 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,463 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,463 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,463 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,463 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,464 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,464 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83F210>
2025-07-25 07:56:31,464 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,464 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,464 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,464 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,464 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,464 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,465 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83F210>
2025-07-25 07:56:31,465 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,465 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,465 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 07:56:31,465 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,465 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,465 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 07:56:31,465 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,465 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,466 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,466 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,466 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 07:56:31,466 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,466 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,466 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,466 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,466 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,467 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,467 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,467 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,467 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83F210>
2025-07-25 07:56:31,467 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,467 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,467 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83F210>
2025-07-25 07:56:31,468 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,468 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,468 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,468 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002A3FB87EDD0>],
             180: [<numba.core.ir.Assign object at 0x000002A3FB8E6C50>],
             500: [<numba.core.ir.Assign object at 0x000002A3FB8F6610>]})
2025-07-25 07:56:31,468 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,468 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB895910>
2025-07-25 07:56:31,469 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,469 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,469 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,469 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,469 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,469 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,470 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,470 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,470 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,470 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,470 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,470 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,470 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,470 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,471 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,471 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,471 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,471 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,471 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,471 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,471 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,472 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,472 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,472 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,472 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,472 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,472 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,472 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,472 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,473 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,473 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,473 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,473 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB895910>
2025-07-25 07:56:31,473 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,473 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,473 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB895910>
2025-07-25 07:56:31,473 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,473 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,473 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,474 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,474 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,474 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,474 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB895910>
2025-07-25 07:56:31,474 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,474 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,474 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,475 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,475 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 07:56:31,475 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 07:56:31,475 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,475 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 07:56:31,475 - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-07-25 07:56:31,476 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,476 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,476 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,476 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,476 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,476 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 07:56:31,476 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 07:56:31,476 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,477 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,477 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,477 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,477 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,477 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,477 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,477 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,477 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB895910>
2025-07-25 07:56:31,478 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,478 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,478 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,478 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,478 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,478 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,478 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB895910>
2025-07-25 07:56:31,478 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,478 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,479 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 07:56:31,479 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,479 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,479 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 07:56:31,479 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,479 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,479 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,480 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,480 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 07:56:31,480 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,480 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,480 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,480 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,480 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,480 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,481 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB895910>
2025-07-25 07:56:31,481 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 07:56:31,481 - DEBUG - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
2025-07-25 07:56:31,481 - DEBUG - find_def_from_top label 500
2025-07-25 07:56:31,481 - DEBUG - idom 374 from label 500
2025-07-25 07:56:31,481 - DEBUG - find_def_from_bottom label 374
2025-07-25 07:56:31,481 - DEBUG - find_def_from_top label 374
2025-07-25 07:56:31,481 - DEBUG - idom 180 from label 374
2025-07-25 07:56:31,481 - DEBUG - find_def_from_bottom label 180
2025-07-25 07:56:31,482 - DEBUG - replaced with: $binop_sub504.3 = scale - frac.1
2025-07-25 07:56:31,482 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 07:56:31,482 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 07:56:31,482 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 07:56:31,482 - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-07-25 07:56:31,482 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,482 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,482 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,482 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,483 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 07:56:31,483 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,483 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,483 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 07:56:31,483 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,483 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,484 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,484 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,484 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,484 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,484 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,484 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,484 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB895910>
2025-07-25 07:56:31,484 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,485 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,485 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,485 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,485 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,485 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,485 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB895910>
2025-07-25 07:56:31,485 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,485 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,485 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 07:56:31,486 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,486 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,486 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 07:56:31,486 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,486 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,486 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,486 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,486 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 07:56:31,487 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,487 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,487 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,487 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,487 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,487 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,487 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,488 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,488 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB895910>
2025-07-25 07:56:31,488 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,488 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,488 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB895910>
2025-07-25 07:56:31,488 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,488 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,488 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,489 - DEBUG - Fix SSA violator on var index_frac
2025-07-25 07:56:31,489 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,489 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7A9710>
2025-07-25 07:56:31,489 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,489 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,489 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,489 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,489 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,490 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,490 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,490 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,490 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,490 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,490 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,490 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,490 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,490 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,491 - DEBUG - first assign: index_frac
2025-07-25 07:56:31,491 - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-07-25 07:56:31,491 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,491 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,491 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,491 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,491 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,491 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,491 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,492 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,492 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,492 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,492 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,492 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,492 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,492 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,493 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,493 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,493 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,493 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,493 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7A9710>
2025-07-25 07:56:31,493 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,493 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,493 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7A9710>
2025-07-25 07:56:31,493 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,494 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,494 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,494 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,494 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,494 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,494 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7A9710>
2025-07-25 07:56:31,494 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,494 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,494 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,495 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,495 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 07:56:31,495 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 07:56:31,495 - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-07-25 07:56:31,495 - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-07-25 07:56:31,495 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,496 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,496 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,496 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,496 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,496 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 07:56:31,496 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 07:56:31,496 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,497 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,497 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,497 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,497 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,497 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,497 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,498 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,498 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7A9710>
2025-07-25 07:56:31,498 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,498 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,498 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,498 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,498 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,498 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,498 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7A9710>
2025-07-25 07:56:31,499 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,499 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,499 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 07:56:31,499 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,499 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,499 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 07:56:31,499 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,500 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,500 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,500 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,500 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 07:56:31,500 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,500 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,500 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,501 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,501 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,501 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,501 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7A9710>
2025-07-25 07:56:31,501 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 07:56:31,501 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 07:56:31,501 - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-07-25 07:56:31,502 - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-07-25 07:56:31,502 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,502 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,502 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,502 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,502 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 07:56:31,502 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,502 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,502 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 07:56:31,503 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,503 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,503 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,503 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,503 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,503 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,504 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,504 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,504 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7A9710>
2025-07-25 07:56:31,504 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,504 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,504 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,505 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,505 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,505 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,505 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7A9710>
2025-07-25 07:56:31,505 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,505 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,505 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 07:56:31,505 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,505 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,506 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 07:56:31,506 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,506 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,506 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,506 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,506 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 07:56:31,506 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,506 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,506 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,506 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,507 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,507 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,507 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,507 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,507 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7A9710>
2025-07-25 07:56:31,507 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,507 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,507 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB7A9710>
2025-07-25 07:56:31,508 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,508 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,508 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,508 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002A3FB8E5290>],
             180: [<numba.core.ir.Assign object at 0x000002A3FB8F6A90>],
             500: [<numba.core.ir.Assign object at 0x000002A3FB8F6ED0>]})
2025-07-25 07:56:31,508 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,509 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83F450>
2025-07-25 07:56:31,509 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,509 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,509 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,509 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,509 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,509 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,510 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,510 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,510 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,510 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,510 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,510 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,510 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,510 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,511 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,511 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,511 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,511 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,511 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,511 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,511 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,511 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,511 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,512 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,512 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,512 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,512 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,512 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,512 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,513 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,513 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,513 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,513 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83F450>
2025-07-25 07:56:31,513 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,513 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,513 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83F450>
2025-07-25 07:56:31,513 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,514 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,514 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,514 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,514 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,514 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,514 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83F450>
2025-07-25 07:56:31,514 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,514 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,514 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,515 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,515 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 07:56:31,515 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 07:56:31,515 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 07:56:31,515 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,515 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,515 - DEBUG - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,516 - DEBUG - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,516 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,516 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 07:56:31,516 - DEBUG - replaced with: eta = index_frac.1 - offset
2025-07-25 07:56:31,516 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,516 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,517 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 07:56:31,517 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 07:56:31,517 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,518 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,518 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,518 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,518 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,518 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,518 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,518 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,518 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83F450>
2025-07-25 07:56:31,519 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,519 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,519 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,519 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,519 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,519 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,519 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83F450>
2025-07-25 07:56:31,519 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,520 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,520 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 07:56:31,520 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,520 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,520 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 07:56:31,520 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,520 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,521 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,521 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,521 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 07:56:31,521 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,521 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,521 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,522 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,522 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,522 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,522 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83F450>
2025-07-25 07:56:31,522 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 07:56:31,522 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 07:56:31,522 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 07:56:31,523 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,523 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,523 - DEBUG - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,523 - DEBUG - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,523 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 07:56:31,523 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 07:56:31,523 - DEBUG - replaced with: eta = index_frac.2 - offset
2025-07-25 07:56:31,524 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,524 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 07:56:31,524 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,524 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,524 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 07:56:31,524 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,525 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,525 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,525 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,525 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,526 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,526 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,526 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,526 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83F450>
2025-07-25 07:56:31,526 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,526 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,526 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,526 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,526 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,527 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,527 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83F450>
2025-07-25 07:56:31,527 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,527 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,527 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 07:56:31,527 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,527 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,527 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 07:56:31,528 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,528 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,528 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,528 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,528 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 07:56:31,528 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,528 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,528 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,529 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,529 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,529 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,529 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,529 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,530 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83F450>
2025-07-25 07:56:31,530 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,530 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,530 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83F450>
2025-07-25 07:56:31,530 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,530 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,530 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,531 - DEBUG - Fix SSA violator on var offset
2025-07-25 07:56:31,531 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,531 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8E4210>
2025-07-25 07:56:31,531 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,531 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,531 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,531 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,531 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,531 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,531 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,532 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,532 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,532 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,532 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,532 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,532 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,532 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,532 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,532 - DEBUG - first assign: offset
2025-07-25 07:56:31,533 - DEBUG - replaced with: offset = const(int, 0)
2025-07-25 07:56:31,533 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,533 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,533 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,533 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,534 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,534 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,534 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,534 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,534 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,534 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,535 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,535 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,535 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,535 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,535 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,535 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,535 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,535 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8E4210>
2025-07-25 07:56:31,535 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,536 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,536 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8E4210>
2025-07-25 07:56:31,536 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,536 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,536 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,536 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,536 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,536 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,536 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8E4210>
2025-07-25 07:56:31,536 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,537 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,537 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,537 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,537 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 07:56:31,537 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 07:56:31,537 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 07:56:31,538 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,538 - DEBUG - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,538 - DEBUG - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,538 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 07:56:31,538 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,539 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,539 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 07:56:31,539 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 07:56:31,539 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,539 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,539 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,539 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,540 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,540 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,540 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,540 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,540 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8E4210>
2025-07-25 07:56:31,540 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,540 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,540 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,540 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,541 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,541 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,541 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8E4210>
2025-07-25 07:56:31,541 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,541 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,542 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 07:56:31,542 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,542 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,542 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 07:56:31,542 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,542 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,543 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,543 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,543 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 07:56:31,543 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,543 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,543 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,543 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,543 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,544 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,544 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8E4210>
2025-07-25 07:56:31,544 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 07:56:31,544 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 07:56:31,544 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 07:56:31,544 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,544 - DEBUG - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,545 - DEBUG - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,545 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 07:56:31,545 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,545 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 07:56:31,545 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,545 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,545 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 07:56:31,546 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,546 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,546 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,546 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,546 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,547 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,547 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,547 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,547 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8E4210>
2025-07-25 07:56:31,547 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,547 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,547 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,547 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,548 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,548 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,548 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8E4210>
2025-07-25 07:56:31,548 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,548 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,548 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 07:56:31,548 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,548 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,548 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 07:56:31,548 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,549 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,549 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,549 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,549 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 07:56:31,549 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,550 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,550 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,550 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,550 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,550 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,550 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,550 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,551 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8E4210>
2025-07-25 07:56:31,551 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,551 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,551 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8E4210>
2025-07-25 07:56:31,551 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,551 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,551 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,551 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002A3FB83EFD0>],
             180: [<numba.core.ir.Assign object at 0x000002A3FB8F6910>],
             500: [<numba.core.ir.Assign object at 0x000002A3FB8F7250>]})
2025-07-25 07:56:31,552 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,552 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB927650>
2025-07-25 07:56:31,552 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,552 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,552 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,552 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,552 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,552 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,553 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,553 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,553 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,553 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,553 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,553 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,553 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,553 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,554 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,554 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,554 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,554 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,554 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,554 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,555 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,555 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,555 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,555 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,555 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,555 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,555 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,556 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,556 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,556 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,556 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,556 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,556 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB927650>
2025-07-25 07:56:31,556 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,556 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,556 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB927650>
2025-07-25 07:56:31,557 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,557 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,557 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,557 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,557 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,557 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,557 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB927650>
2025-07-25 07:56:31,557 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,557 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,557 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,558 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,558 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 07:56:31,558 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 07:56:31,558 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 07:56:31,558 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,559 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,559 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 07:56:31,559 - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-07-25 07:56:31,559 - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-07-25 07:56:31,559 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,559 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,560 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 07:56:31,560 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 07:56:31,560 - DEBUG - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
2025-07-25 07:56:31,560 - DEBUG - replaced with: $binop_sub318.31 = nwin - offset.1
2025-07-25 07:56:31,560 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,560 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,560 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,560 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,561 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,561 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,561 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,561 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,561 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB927650>
2025-07-25 07:56:31,561 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,561 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,561 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,561 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,561 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,562 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,562 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB927650>
2025-07-25 07:56:31,562 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,562 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,562 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 07:56:31,562 - DEBUG - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
2025-07-25 07:56:31,563 - DEBUG - find_def_from_top label 376
2025-07-25 07:56:31,563 - DEBUG - idom 374 from label 376
2025-07-25 07:56:31,563 - DEBUG - find_def_from_bottom label 374
2025-07-25 07:56:31,563 - DEBUG - find_def_from_top label 374
2025-07-25 07:56:31,563 - DEBUG - idom 180 from label 374
2025-07-25 07:56:31,563 - DEBUG - find_def_from_bottom label 180
2025-07-25 07:56:31,564 - DEBUG - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 07:56:31,564 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,564 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,564 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 07:56:31,564 - DEBUG - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
2025-07-25 07:56:31,564 - DEBUG - find_def_from_top label 376
2025-07-25 07:56:31,564 - DEBUG - idom 374 from label 376
2025-07-25 07:56:31,565 - DEBUG - find_def_from_bottom label 374
2025-07-25 07:56:31,565 - DEBUG - find_def_from_top label 374
2025-07-25 07:56:31,565 - DEBUG - idom 180 from label 374
2025-07-25 07:56:31,565 - DEBUG - find_def_from_bottom label 180
2025-07-25 07:56:31,565 - DEBUG - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 07:56:31,565 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,565 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,565 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,565 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,566 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 07:56:31,566 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,566 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,566 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,566 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,567 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,567 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,567 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB927650>
2025-07-25 07:56:31,567 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 07:56:31,567 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 07:56:31,567 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 07:56:31,568 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,568 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,568 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 07:56:31,568 - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-07-25 07:56:31,568 - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-07-25 07:56:31,568 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,568 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 07:56:31,569 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,569 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,569 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 07:56:31,569 - DEBUG - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
2025-07-25 07:56:31,569 - DEBUG - replaced with: $binop_sub590.23 = nwin - offset.2
2025-07-25 07:56:31,569 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,569 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,570 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,570 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,570 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,570 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,570 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,570 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,570 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB927650>
2025-07-25 07:56:31,571 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,571 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,571 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,571 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,571 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,571 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,571 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB927650>
2025-07-25 07:56:31,572 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,572 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,572 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 07:56:31,572 - DEBUG - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
2025-07-25 07:56:31,572 - DEBUG - find_def_from_top label 648
2025-07-25 07:56:31,572 - DEBUG - idom 646 from label 648
2025-07-25 07:56:31,572 - DEBUG - find_def_from_bottom label 646
2025-07-25 07:56:31,572 - DEBUG - find_def_from_top label 646
2025-07-25 07:56:31,572 - DEBUG - idom 500 from label 646
2025-07-25 07:56:31,573 - DEBUG - find_def_from_bottom label 500
2025-07-25 07:56:31,573 - DEBUG - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 07:56:31,573 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,573 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,573 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 07:56:31,573 - DEBUG - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
2025-07-25 07:56:31,573 - DEBUG - find_def_from_top label 648
2025-07-25 07:56:31,573 - DEBUG - idom 646 from label 648
2025-07-25 07:56:31,573 - DEBUG - find_def_from_bottom label 646
2025-07-25 07:56:31,574 - DEBUG - find_def_from_top label 646
2025-07-25 07:56:31,574 - DEBUG - idom 500 from label 646
2025-07-25 07:56:31,574 - DEBUG - find_def_from_bottom label 500
2025-07-25 07:56:31,574 - DEBUG - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 07:56:31,574 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,574 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,574 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,575 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,575 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 07:56:31,575 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,575 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,575 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,576 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,576 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,576 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,576 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,576 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,576 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB927650>
2025-07-25 07:56:31,576 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,577 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,577 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB927650>
2025-07-25 07:56:31,577 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,577 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,577 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,577 - DEBUG - Fix SSA violator on var eta
2025-07-25 07:56:31,577 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,577 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83E990>
2025-07-25 07:56:31,577 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,577 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,578 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,578 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,578 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,578 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,578 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,578 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,578 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,578 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,579 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,579 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,579 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,579 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,579 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,580 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,580 - DEBUG - first assign: eta
2025-07-25 07:56:31,580 - DEBUG - replaced with: eta = const(float, 0.0)
2025-07-25 07:56:31,580 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,580 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,580 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,580 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,580 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,581 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,581 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,581 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,581 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,581 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,581 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,582 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,582 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,582 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,582 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,582 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,582 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83E990>
2025-07-25 07:56:31,582 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,582 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,582 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83E990>
2025-07-25 07:56:31,583 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,583 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,583 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,583 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,583 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,583 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,584 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83E990>
2025-07-25 07:56:31,584 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,584 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,584 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,584 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,584 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 07:56:31,584 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 07:56:31,585 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 07:56:31,585 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,585 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,585 - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-07-25 07:56:31,585 - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-07-25 07:56:31,585 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,585 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,585 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 07:56:31,585 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 07:56:31,586 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,586 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,586 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,586 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,586 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,586 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,586 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,586 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,586 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83E990>
2025-07-25 07:56:31,587 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,587 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,587 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,587 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,587 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,587 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,588 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83E990>
2025-07-25 07:56:31,588 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,588 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,588 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 07:56:31,588 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,588 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,589 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 07:56:31,589 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,589 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,589 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,589 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,589 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 07:56:31,590 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,590 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,590 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,590 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,590 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,590 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,590 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83E990>
2025-07-25 07:56:31,590 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 07:56:31,590 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 07:56:31,590 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 07:56:31,591 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,591 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,591 - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-07-25 07:56:31,591 - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-07-25 07:56:31,591 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,591 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 07:56:31,591 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,592 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,592 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 07:56:31,592 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,592 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,592 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,592 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,593 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,593 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,593 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,593 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83E990>
2025-07-25 07:56:31,593 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,593 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,593 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,593 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,594 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,594 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,594 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83E990>
2025-07-25 07:56:31,594 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,594 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,594 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 07:56:31,594 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,594 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,595 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 07:56:31,595 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,595 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,595 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,595 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,595 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 07:56:31,595 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,596 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,596 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,596 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,597 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,597 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,597 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,597 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83E990>
2025-07-25 07:56:31,597 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,597 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,598 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB83E990>
2025-07-25 07:56:31,598 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,598 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,598 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,598 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002A3FB8F7810>],
             180: [<numba.core.ir.Assign object at 0x000002A3FB8F69D0>],
             500: [<numba.core.ir.Assign object at 0x000002A3FB8F7D10>]})
2025-07-25 07:56:31,598 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,599 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB864B50>
2025-07-25 07:56:31,599 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,599 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,599 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,599 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,599 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,599 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,599 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,600 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,600 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,600 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,600 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,600 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,601 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,601 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,601 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,601 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,601 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,601 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,601 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,601 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,601 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,602 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,602 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,602 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,602 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,602 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,602 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,602 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,602 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,603 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,603 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,603 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,603 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB864B50>
2025-07-25 07:56:31,603 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,603 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,603 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB864B50>
2025-07-25 07:56:31,603 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,604 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,604 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,604 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,604 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,604 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,604 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB864B50>
2025-07-25 07:56:31,605 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,605 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,605 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,605 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,605 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 07:56:31,605 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 07:56:31,605 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 07:56:31,606 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,606 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,606 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 07:56:31,606 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,606 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,606 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 07:56:31,606 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 07:56:31,606 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,607 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,607 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,607 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,607 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,607 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,607 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,607 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,608 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB864B50>
2025-07-25 07:56:31,608 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,608 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,608 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,608 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,608 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,608 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,609 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB864B50>
2025-07-25 07:56:31,609 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,609 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,609 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 07:56:31,609 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,609 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,609 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 07:56:31,610 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,610 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,610 - DEBUG - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 07:56:31,610 - DEBUG - find_def_from_top label 376
2025-07-25 07:56:31,610 - DEBUG - idom 374 from label 376
2025-07-25 07:56:31,610 - DEBUG - find_def_from_bottom label 374
2025-07-25 07:56:31,610 - DEBUG - find_def_from_top label 374
2025-07-25 07:56:31,610 - DEBUG - idom 180 from label 374
2025-07-25 07:56:31,610 - DEBUG - find_def_from_bottom label 180
2025-07-25 07:56:31,611 - DEBUG - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 07:56:31,611 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,611 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,611 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 07:56:31,611 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,611 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,611 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,611 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,612 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,612 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,612 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB864B50>
2025-07-25 07:56:31,612 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 07:56:31,612 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 07:56:31,612 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 07:56:31,613 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,613 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,613 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 07:56:31,613 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,613 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 07:56:31,614 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,614 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,614 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 07:56:31,614 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,614 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,614 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,614 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,615 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,615 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,615 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,615 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,615 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB864B50>
2025-07-25 07:56:31,615 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,615 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,615 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,616 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,616 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,616 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,616 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB864B50>
2025-07-25 07:56:31,616 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,616 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,616 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 07:56:31,617 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,617 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,617 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 07:56:31,617 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,617 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,618 - DEBUG - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 07:56:31,618 - DEBUG - find_def_from_top label 648
2025-07-25 07:56:31,618 - DEBUG - idom 646 from label 648
2025-07-25 07:56:31,618 - DEBUG - find_def_from_bottom label 646
2025-07-25 07:56:31,618 - DEBUG - find_def_from_top label 646
2025-07-25 07:56:31,618 - DEBUG - idom 500 from label 646
2025-07-25 07:56:31,618 - DEBUG - find_def_from_bottom label 500
2025-07-25 07:56:31,618 - DEBUG - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 07:56:31,619 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,619 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,619 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 07:56:31,619 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,620 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,621 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,621 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,621 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,622 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,622 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,622 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB864B50>
2025-07-25 07:56:31,623 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,623 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,623 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB864B50>
2025-07-25 07:56:31,623 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,624 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,624 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,624 - DEBUG - Fix SSA violator on var weight
2025-07-25 07:56:31,624 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,625 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8F7D90>
2025-07-25 07:56:31,625 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,625 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,626 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,626 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,626 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,626 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,627 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,627 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,627 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,627 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,628 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,628 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,628 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,628 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,629 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,629 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,630 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,630 - DEBUG - first assign: weight
2025-07-25 07:56:31,630 - DEBUG - replaced with: weight = const(float, 0.0)
2025-07-25 07:56:31,631 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,631 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,631 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,631 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,631 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,632 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,632 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,632 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,632 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,633 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,633 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,633 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,633 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,634 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,634 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,634 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8F7D90>
2025-07-25 07:56:31,635 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,635 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8F7D90>
2025-07-25 07:56:31,635 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,636 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,636 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,636 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,636 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,637 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,637 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8F7D90>
2025-07-25 07:56:31,637 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,637 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,638 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,638 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,638 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 07:56:31,638 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 07:56:31,639 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 07:56:31,639 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,639 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,640 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 07:56:31,640 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,640 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,640 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 07:56:31,640 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 07:56:31,640 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,640 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,641 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,641 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,641 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,641 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,641 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,642 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,642 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8F7D90>
2025-07-25 07:56:31,642 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,642 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,642 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,642 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,642 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,642 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,643 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8F7D90>
2025-07-25 07:56:31,643 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,643 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,643 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 07:56:31,643 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,643 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,643 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 07:56:31,643 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,644 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 07:56:31,644 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,644 - DEBUG - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,644 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,644 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 07:56:31,644 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,644 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,645 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,645 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,645 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,645 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,645 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8F7D90>
2025-07-25 07:56:31,646 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 07:56:31,646 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 07:56:31,646 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 07:56:31,646 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,646 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,647 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 07:56:31,647 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,647 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 07:56:31,647 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,647 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,648 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 07:56:31,648 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,648 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,648 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,649 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,649 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,649 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,649 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,649 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,650 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8F7D90>
2025-07-25 07:56:31,650 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,650 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,650 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,650 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,650 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,650 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,650 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8F7D90>
2025-07-25 07:56:31,651 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,651 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,651 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 07:56:31,651 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,651 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,651 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 07:56:31,651 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,651 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 07:56:31,652 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,652 - DEBUG - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,652 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,652 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 07:56:31,652 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,652 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,652 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,653 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,653 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,653 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,653 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,653 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,653 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8F7D90>
2025-07-25 07:56:31,653 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,654 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,654 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002A3FB8F7D90>
2025-07-25 07:56:31,654 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,654 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,654 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:31,654 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002A3FB8E1990>],
             376: [<numba.core.ir.Assign object at 0x000002A3FB85A550>],
             648: [<numba.core.ir.Assign object at 0x000002A3FB85A710>]})
2025-07-25 07:56:31,655 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 07:56:31,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83E990>
2025-07-25 07:56:31,655 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 07:56:31,655 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 07:56:31,655 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 07:56:31,655 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 07:56:31,655 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 07:56:31,655 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 07:56:31,656 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 07:56:31,656 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 07:56:31,656 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 07:56:31,656 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,656 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 07:56:31,656 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 07:56:31,656 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 07:56:31,656 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 07:56:31,657 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 07:56:31,657 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 07:56:31,657 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 07:56:31,657 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 07:56:31,657 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 07:56:31,657 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,657 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 07:56:31,657 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 07:56:31,657 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,658 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 07:56:31,658 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 07:56:31,658 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 07:56:31,658 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 07:56:31,658 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,658 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 07:56:31,658 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 07:56:31,658 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,659 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 07:56:31,659 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83E990>
2025-07-25 07:56:31,659 - DEBUG - on stmt: jump 178
2025-07-25 07:56:31,659 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 07:56:31,659 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83E990>
2025-07-25 07:56:31,659 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 07:56:31,659 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 07:56:31,659 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 07:56:31,660 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 07:56:31,660 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 07:56:31,660 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 07:56:31,660 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83E990>
2025-07-25 07:56:31,660 - DEBUG - on stmt: t = $phi180.1
2025-07-25 07:56:31,660 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,660 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 07:56:31,660 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,661 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 07:56:31,661 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 07:56:31,661 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 07:56:31,661 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 07:56:31,661 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,661 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 07:56:31,661 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 07:56:31,661 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 07:56:31,662 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 07:56:31,662 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 07:56:31,662 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 07:56:31,662 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,662 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 07:56:31,662 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,663 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 07:56:31,663 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 07:56:31,663 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,663 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 07:56:31,663 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83E990>
2025-07-25 07:56:31,663 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 07:56:31,663 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 07:56:31,664 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 07:56:31,664 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 07:56:31,664 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 07:56:31,664 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 07:56:31,664 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83E990>
2025-07-25 07:56:31,664 - DEBUG - on stmt: i = $phi376.2
2025-07-25 07:56:31,664 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 07:56:31,664 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 07:56:31,664 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,665 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 07:56:31,665 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 07:56:31,665 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,665 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 07:56:31,665 - DEBUG - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 07:56:31,665 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,666 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 07:56:31,666 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 07:56:31,666 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,666 - DEBUG - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 07:56:31,666 - DEBUG - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
2025-07-25 07:56:31,666 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,667 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 07:56:31,667 - DEBUG - on stmt: jump 374
2025-07-25 07:56:31,667 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 07:56:31,667 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83E990>
2025-07-25 07:56:31,667 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 07:56:31,667 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 07:56:31,667 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 07:56:31,667 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 07:56:31,668 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,668 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 07:56:31,668 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 07:56:31,668 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 07:56:31,668 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 07:56:31,668 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 07:56:31,668 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 07:56:31,669 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 07:56:31,669 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,669 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 07:56:31,669 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 07:56:31,669 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 07:56:31,669 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 07:56:31,669 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,669 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 07:56:31,670 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83E990>
2025-07-25 07:56:31,670 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 07:56:31,670 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 07:56:31,670 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 07:56:31,670 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 07:56:31,670 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 07:56:31,670 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 07:56:31,671 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83E990>
2025-07-25 07:56:31,671 - DEBUG - on stmt: k = $phi648.2
2025-07-25 07:56:31,671 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 07:56:31,671 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 07:56:31,671 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 07:56:31,671 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 07:56:31,671 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 07:56:31,671 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 07:56:31,672 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 07:56:31,672 - DEBUG - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 07:56:31,672 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 07:56:31,672 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 07:56:31,672 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 07:56:31,672 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 07:56:31,672 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 07:56:31,672 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,672 - DEBUG - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 07:56:31,673 - DEBUG - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
2025-07-25 07:56:31,673 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 07:56:31,673 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 07:56:31,673 - DEBUG - on stmt: jump 646
2025-07-25 07:56:31,673 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 07:56:31,673 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83E990>
2025-07-25 07:56:31,673 - DEBUG - on stmt: jump 176
2025-07-25 07:56:31,674 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 07:56:31,674 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002A3FB83E990>
2025-07-25 07:56:31,674 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 07:56:31,674 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 07:56:31,674 - DEBUG - on stmt: return $784return_value.1
2025-07-25 07:56:32,223 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-07-25 07:56:32,225 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 07:56:32,225 - DEBUG - stack: []
2025-07-25 07:56:32,225 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 07:56:32,225 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-07-25 07:56:32,226 - DEBUG - stack []
2025-07-25 07:56:32,226 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-07-25 07:56:32,226 - DEBUG - stack []
2025-07-25 07:56:32,226 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 07:56:32,226 - DEBUG - stack []
2025-07-25 07:56:32,226 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-07-25 07:56:32,227 - DEBUG - stack ['$x4.0']
2025-07-25 07:56:32,227 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 07:56:32,227 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-07-25 07:56:32,227 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 07:56:32,227 - DEBUG - stack ['$8binary_subscr.2']
2025-07-25 07:56:32,227 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-07-25 07:56:32,228 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-07-25 07:56:32,228 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 07:56:32,228 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-07-25 07:56:32,228 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-07-25 07:56:32,228 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-07-25 07:56:32,228 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-07-25 07:56:32,229 - DEBUG - stack ['$binop_add32.6']
2025-07-25 07:56:32,229 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 07:56:32,229 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-07-25 07:56:32,229 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-07-25 07:56:32,230 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-07-25 07:56:32,230 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 07:56:32,230 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-07-25 07:56:32,230 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-07-25 07:56:32,231 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-07-25 07:56:32,231 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-07-25 07:56:32,231 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-07-25 07:56:32,231 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-07-25 07:56:32,231 - DEBUG - stack ['$binop_sub56.12']
2025-07-25 07:56:32,231 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 07:56:32,232 - DEBUG - stack []
2025-07-25 07:56:32,232 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-07-25 07:56:32,232 - DEBUG - stack ['$x62.13']
2025-07-25 07:56:32,232 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 07:56:32,232 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-07-25 07:56:32,232 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 07:56:32,233 - DEBUG - stack ['$66binary_subscr.15']
2025-07-25 07:56:32,233 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-07-25 07:56:32,233 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-07-25 07:56:32,233 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 07:56:32,233 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-07-25 07:56:32,234 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-07-25 07:56:32,234 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-07-25 07:56:32,234 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-07-25 07:56:32,234 - DEBUG - stack ['$binop_sub90.19']
2025-07-25 07:56:32,234 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-07-25 07:56:32,235 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-07-25 07:56:32,235 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-07-25 07:56:32,235 - DEBUG - stack ['$binop_truediv96.21']
2025-07-25 07:56:32,235 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 07:56:32,235 - DEBUG - stack []
2025-07-25 07:56:32,235 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 07:56:32,235 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-07-25 07:56:32,236 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-07-25 07:56:32,236 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-07-25 07:56:32,236 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-07-25 07:56:32,236 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 07:56:32,236 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-07-25 07:56:32,236 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 07:56:32,236 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 07:56:32,237 - DEBUG - stack ['$130call.26']
2025-07-25 07:56:32,237 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 07:56:32,237 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-07-25 07:56:32,237 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-07-25 07:56:32,238 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-07-25 07:56:32,238 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-07-25 07:56:32,238 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 07:56:32,238 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-07-25 07:56:32,238 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 07:56:32,239 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-07-25 07:56:32,239 - DEBUG - stack ['$130call.26', '$168call.31']
2025-07-25 07:56:32,239 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-07-25 07:56:32,239 - DEBUG - stack ['$178compare_op.32']
2025-07-25 07:56:32,240 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-25 07:56:32,240 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-25 07:56:32,240 - DEBUG - stack: []
2025-07-25 07:56:32,240 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-07-25 07:56:32,240 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-07-25 07:56:32,240 - DEBUG - stack []
2025-07-25 07:56:32,240 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-07-25 07:56:32,240 - DEBUG - stack ['$const186.0.4']
2025-07-25 07:56:32,241 - DEBUG - end state. edges=[]
2025-07-25 07:56:32,241 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-07-25 07:56:32,241 - DEBUG - stack: []
2025-07-25 07:56:32,241 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-25 07:56:32,241 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-07-25 07:56:32,241 - DEBUG - stack []
2025-07-25 07:56:32,242 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-07-25 07:56:32,242 - DEBUG - stack ['$b190.0']
2025-07-25 07:56:32,242 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-07-25 07:56:32,242 - DEBUG - stack ['$192unary_negative.1']
2025-07-25 07:56:32,242 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-07-25 07:56:32,242 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-07-25 07:56:32,243 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-07-25 07:56:32,243 - DEBUG - stack ['$binop_truediv196.3']
2025-07-25 07:56:32,243 - DEBUG - end state. edges=[]
2025-07-25 07:56:32,243 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 07:56:32,243 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-25 07:56:32,244 - DEBUG - defmap: {}
2025-07-25 07:56:32,244 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 07:56:32,244 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 07:56:32,244 - DEBUG - keep phismap: {}
2025-07-25 07:56:32,244 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 07:56:32,244 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 07:56:32,245 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-07-25 07:56:32,245 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 07:56:32,246 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 07:56:32,248 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-07-25 07:56:32,322 - DEBUG - BPM-Wert ermittelt: 161
2025-07-25 07:56:34,046 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 07:56:53,179 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 07:56:53,181 - INFO - Tags gespeichert für: data\01. Vorwort.mp3
2025-07-25 07:56:53,182 - INFO - Verarbeite Datei: data\02. Haus am Mehr.mp3
2025-07-25 07:56:53,182 - INFO - Beginne Verarbeitung der Datei: data\02. Haus am Mehr.mp3
2025-07-25 07:56:53,191 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Haus am Mehr
2025-07-25 07:56:53,191 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Haus am Mehr
2025-07-25 07:56:53,193 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:56:53,629 - DEBUG - https://genius.com:443 "GET /samy-deluxe-haus-am-mehr-lyrics HTTP/1.1" 301 None
2025-07-25 07:56:54,802 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-haus-am-mehr-lyrics HTTP/1.1" 200 None
2025-07-25 07:56:55,239 - DEBUG - BPM-Wert ermittelt: 86
2025-07-25 07:56:56,961 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 07:57:12,025 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 07:57:12,026 - INFO - Tags gespeichert für: data\02. Haus am Mehr.mp3
2025-07-25 07:57:12,027 - INFO - Verarbeite Datei: data\03. Countdown.mp3
2025-07-25 07:57:12,028 - INFO - Beginne Verarbeitung der Datei: data\03. Countdown.mp3
2025-07-25 07:57:12,036 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Countdown
2025-07-25 07:57:12,036 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Countdown
2025-07-25 07:57:12,040 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 07:57:12,282 - DEBUG - https://genius.com:443 "GET /samy-deluxe-countdown-lyrics HTTP/1.1" 301 None
2025-07-25 07:57:13,506 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-countdown-lyrics HTTP/1.1" 200 None
2025-07-25 07:57:13,947 - DEBUG - BPM-Wert ermittelt: 70
2025-07-25 07:57:15,669 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:00:20,915 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:03:27,653 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:06:06,165 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 08:06:06,172 - INFO - Tags gespeichert für: data\03. Countdown.mp3
2025-07-25 08:06:06,172 - INFO - Verarbeite Datei: data\04. Klopapier.mp3
2025-07-25 08:06:06,172 - INFO - Beginne Verarbeitung der Datei: data\04. Klopapier.mp3
2025-07-25 08:06:06,180 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Klopapier
2025-07-25 08:06:06,181 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Klopapier
2025-07-25 08:06:06,183 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:06:06,497 - DEBUG - https://genius.com:443 "GET /samy-deluxe-klopapier-lyrics HTTP/1.1" 301 None
2025-07-25 08:06:07,848 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-klopapier-lyrics HTTP/1.1" 200 None
2025-07-25 08:06:08,267 - DEBUG - BPM-Wert ermittelt: 144
2025-07-25 08:06:09,988 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:09:15,230 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:12:21,986 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:15:30,245 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:16:50,035 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 08:16:50,038 - INFO - Tags gespeichert für: data\04. Klopapier.mp3
2025-07-25 08:16:50,038 - INFO - Verarbeite Datei: data\05. Epochalität (Feat. Megaloh).mp3
2025-07-25 08:16:50,039 - INFO - Beginne Verarbeitung der Datei: data\05. Epochalität (Feat. Megaloh).mp3
2025-07-25 08:16:50,043 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Epochalität (Feat. Megaloh)
2025-07-25 08:16:50,043 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Epochalität (Feat. Megaloh)
2025-07-25 08:16:50,046 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:16:50,477 - DEBUG - https://genius.com:443 "GET /samy-deluxe-epochalitat-lyrics HTTP/1.1" 301 None
2025-07-25 08:16:51,902 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-epochalitat-lyrics HTTP/1.1" 200 None
2025-07-25 08:16:52,311 - DEBUG - BPM-Wert ermittelt: 161
2025-07-25 08:16:54,029 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:16:55,060 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 08:16:55,066 - INFO - Tags gespeichert für: data\05. Epochalität (Feat. Megaloh).mp3
2025-07-25 08:16:55,066 - INFO - Verarbeite Datei: data\06. Tellerrand.mp3
2025-07-25 08:16:55,067 - INFO - Beginne Verarbeitung der Datei: data\06. Tellerrand.mp3
2025-07-25 08:16:55,075 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Tellerrand
2025-07-25 08:16:55,075 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Tellerrand
2025-07-25 08:16:55,078 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:16:55,336 - DEBUG - https://genius.com:443 "GET /samy-deluxe-tellerrand-lyrics HTTP/1.1" 301 None
2025-07-25 08:16:56,138 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-tellerrand-lyrics HTTP/1.1" 200 None
2025-07-25 08:16:56,483 - DEBUG - BPM-Wert ermittelt: 112
2025-07-25 08:16:58,204 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:16:59,237 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 08:16:59,238 - INFO - Tags gespeichert für: data\06. Tellerrand.mp3
2025-07-25 08:16:59,238 - INFO - Verarbeite Datei: data\08. Mittendrin.mp3
2025-07-25 08:16:59,238 - INFO - Beginne Verarbeitung der Datei: data\08. Mittendrin.mp3
2025-07-25 08:16:59,246 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Mittendrin
2025-07-25 08:16:59,246 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Mittendrin
2025-07-25 08:16:59,249 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:16:59,490 - DEBUG - https://genius.com:443 "GET /samy-deluxe-mittendrin-lyrics HTTP/1.1" 301 None
2025-07-25 08:17:00,618 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-mittendrin-lyrics HTTP/1.1" 200 None
2025-07-25 08:17:01,021 - DEBUG - BPM-Wert ermittelt: 144
2025-07-25 08:17:02,749 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:17:03,665 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 08:17:03,671 - INFO - Tags gespeichert für: data\08. Mittendrin.mp3
2025-07-25 08:17:03,671 - INFO - Verarbeite Datei: data\09. So Good.mp3
2025-07-25 08:17:03,671 - INFO - Beginne Verarbeitung der Datei: data\09. So Good.mp3
2025-07-25 08:17:03,680 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=So Good
2025-07-25 08:17:03,680 - INFO - Lade und speichere Lyrics für: Samy Deluxe - So Good
2025-07-25 08:17:03,683 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:17:04,107 - DEBUG - https://genius.com:443 "GET /samy-deluxe-so-good-lyrics HTTP/1.1" 301 None
2025-07-25 08:17:05,116 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-so-good-lyrics HTTP/1.1" 200 None
2025-07-25 08:17:05,512 - DEBUG - BPM-Wert ermittelt: 161
2025-07-25 08:17:07,226 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:17:08,080 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 130
2025-07-25 08:17:08,082 - INFO - Tags gespeichert für: data\09. So Good.mp3
2025-07-25 08:17:08,082 - INFO - Verarbeite Datei: data\10. Bisschen mein Ding.mp3
2025-07-25 08:17:08,082 - INFO - Beginne Verarbeitung der Datei: data\10. Bisschen mein Ding.mp3
2025-07-25 08:17:08,090 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Bisschen mein Ding
2025-07-25 08:17:08,091 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Bisschen mein Ding
2025-07-25 08:17:08,093 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:17:08,342 - DEBUG - https://genius.com:443 "GET /samy-deluxe-bisschen-mein-ding-lyrics HTTP/1.1" 301 None
2025-07-25 08:17:09,531 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-bisschen-mein-ding-lyrics HTTP/1.1" 200 None
2025-07-25 08:17:10,035 - DEBUG - BPM-Wert ermittelt: 99
2025-07-25 08:17:11,757 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:17:12,691 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 08:17:12,696 - INFO - Tags gespeichert für: data\10. Bisschen mein Ding.mp3
2025-07-25 08:17:12,697 - INFO - Verarbeite Datei: data\11. Mimimi.mp3
2025-07-25 08:17:12,697 - INFO - Beginne Verarbeitung der Datei: data\11. Mimimi.mp3
2025-07-25 08:17:12,708 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Mimimi
2025-07-25 08:17:12,709 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Mimimi
2025-07-25 08:17:12,711 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:17:13,143 - DEBUG - https://genius.com:443 "GET /samy-deluxe-mimimi-lyrics HTTP/1.1" 301 None
2025-07-25 08:17:14,428 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-mimimi-lyrics HTTP/1.1" 200 None
2025-07-25 08:17:14,840 - DEBUG - BPM-Wert ermittelt: 83
2025-07-25 08:17:16,562 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:17:17,471 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 08:17:17,472 - INFO - Tags gespeichert für: data\11. Mimimi.mp3
2025-07-25 08:17:17,472 - INFO - Verarbeite Datei: data\13. Was ich fühl.mp3
2025-07-25 08:17:17,472 - INFO - Beginne Verarbeitung der Datei: data\13. Was ich fühl.mp3
2025-07-25 08:17:17,482 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Was ich fühl
2025-07-25 08:17:17,482 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Was ich fühl
2025-07-25 08:17:17,484 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:17:17,720 - DEBUG - https://genius.com:443 "GET /samy-deluxe-was-ich-fuhl-lyrics HTTP/1.1" 301 None
2025-07-25 08:17:19,019 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-was-ich-fuhl-lyrics HTTP/1.1" 200 None
2025-07-25 08:17:19,450 - DEBUG - BPM-Wert ermittelt: 161
2025-07-25 08:17:21,171 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:17:22,257 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 08:17:22,263 - INFO - Tags gespeichert für: data\13. Was ich fühl.mp3
2025-07-25 08:17:22,264 - INFO - Verarbeite Datei: data\14. Papa weint nicht.mp3
2025-07-25 08:17:22,264 - INFO - Beginne Verarbeitung der Datei: data\14. Papa weint nicht.mp3
2025-07-25 08:17:22,276 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Papa weint nicht
2025-07-25 08:17:22,277 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Papa weint nicht
2025-07-25 08:17:22,280 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:17:22,569 - DEBUG - https://genius.com:443 "GET /samy-deluxe-papa-weint-nicht-lyrics HTTP/1.1" 301 None
2025-07-25 08:17:24,116 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-papa-weint-nicht-lyrics HTTP/1.1" 200 None
2025-07-25 08:17:24,511 - DEBUG - BPM-Wert ermittelt: 99
2025-07-25 08:17:26,233 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:17:27,288 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 08:17:27,289 - INFO - Tags gespeichert für: data\14. Papa weint nicht.mp3
2025-07-25 08:17:27,289 - INFO - Verarbeite Datei: data\15. Von dir Mama.mp3
2025-07-25 08:17:27,290 - INFO - Beginne Verarbeitung der Datei: data\15. Von dir Mama.mp3
2025-07-25 08:17:27,299 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Von dir Mama
2025-07-25 08:17:27,299 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Von dir Mama
2025-07-25 08:17:27,301 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:17:27,633 - DEBUG - https://genius.com:443 "GET /samy-deluxe-von-dir-mama-lyrics HTTP/1.1" 301 None
2025-07-25 08:17:28,938 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-von-dir-mama-lyrics HTTP/1.1" 200 None
2025-07-25 08:17:29,328 - DEBUG - BPM-Wert ermittelt: 152
2025-07-25 08:17:31,051 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:17:32,079 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 08:17:32,084 - INFO - Tags gespeichert für: data\15. Von dir Mama.mp3
2025-07-25 08:17:32,084 - INFO - Verarbeite Datei: data\16. Berühmte letzte Worte.mp3
2025-07-25 08:17:32,085 - INFO - Beginne Verarbeitung der Datei: data\16. Berühmte letzte Worte.mp3
2025-07-25 08:17:32,094 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Berühmte letzte Worte
2025-07-25 08:17:32,094 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Berühmte letzte Worte
2025-07-25 08:17:32,097 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:17:32,572 - DEBUG - https://genius.com:443 "GET /samy-deluxe-beruhmte-letzte-worte-lyrics HTTP/1.1" 301 None
2025-07-25 08:17:34,035 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-beruhmte-letzte-worte-lyrics HTTP/1.1" 200 None
2025-07-25 08:17:34,454 - DEBUG - BPM-Wert ermittelt: 185
2025-07-25 08:17:36,176 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:17:37,239 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 08:17:37,240 - INFO - Tags gespeichert für: data\16. Berühmte letzte Worte.mp3
2025-07-25 08:17:37,240 - INFO - Verarbeitung abgeschlossen.
2025-07-25 08:17:37,241 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 08:35:48,462 - DEBUG - Starte die Anwendung...
2025-07-25 08:35:48,463 - INFO - Verarbeite MP3-Datei...
2025-07-25 08:35:48,463 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 08:35:48,470 - DEBUG - Using proactor: IocpProactor
2025-07-25 08:35:48,549 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 08:35:48,631 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 08:35:48,777 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 08:35:48,868 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001A11DE72710>
2025-07-25 08:35:48,868 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001A11D9E45F0> server_hostname='api.gradio.app' timeout=3
2025-07-25 08:35:49,214 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001A11DD8DFD0>
2025-07-25 08:35:49,215 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 08:35:49,216 - DEBUG - send_request_headers.complete
2025-07-25 08:35:49,217 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 08:35:49,217 - DEBUG - send_request_body.complete
2025-07-25 08:35:49,217 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 08:35:49,389 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 06:35:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 08:35:49,391 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 08:35:49,392 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 08:35:49,392 - DEBUG - receive_response_body.complete
2025-07-25 08:35:49,392 - DEBUG - response_closed.started
2025-07-25 08:35:49,392 - DEBUG - response_closed.complete
2025-07-25 08:35:49,393 - DEBUG - close.started
2025-07-25 08:35:49,393 - DEBUG - close.complete
2025-07-25 08:36:17,972 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 08:36:17,973 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 08:36:17,974 - INFO - Verarbeite Datei: data\02. Universal Soldier.mp3
2025-07-25 08:36:17,974 - INFO - Beginne Verarbeitung der Datei: data\02. Universal Soldier.mp3
2025-07-25 08:36:17,982 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Universal Soldier
2025-07-25 08:36:17,982 - INFO - Lade und speichere Lyrics für: Bushido - Universal Soldier
2025-07-25 08:36:17,985 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:36:18,482 - DEBUG - https://genius.com:443 "GET /bushido-universal-soldier-lyrics HTTP/1.1" 301 None
2025-07-25 08:36:18,976 - DEBUG - https://genius.com:443 "GET /Bushido-universal-soldier-lyrics HTTP/1.1" 200 None
2025-07-25 08:36:19,408 - DEBUG - BPM-Wert ermittelt: 185
2025-07-25 08:36:21,124 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:36:42,284 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 08:36:42,285 - INFO - Tags gespeichert für: data\02. Universal Soldier.mp3
2025-07-25 08:36:42,285 - INFO - Verarbeite Datei: data\02. Waffendealer.mp3
2025-07-25 08:36:42,285 - INFO - Beginne Verarbeitung der Datei: data\02. Waffendealer.mp3
2025-07-25 08:36:42,293 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Waffendealer
2025-07-25 08:36:42,293 - INFO - Lade und speichere Lyrics für: Bushido - Waffendealer
2025-07-25 08:36:42,296 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:36:42,557 - DEBUG - https://genius.com:443 "GET /bushido-waffendealer-lyrics HTTP/1.1" 301 None
2025-07-25 08:36:44,013 - DEBUG - https://genius.com:443 "GET /Bushido-waffendealer-lyrics HTTP/1.1" 200 None
2025-07-25 08:36:44,427 - DEBUG - BPM-Wert ermittelt: 86
2025-07-25 08:36:46,152 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:37:03,035 - DEBUG - Starte die Anwendung...
2025-07-25 08:37:03,036 - INFO - Verarbeite MP3-Datei...
2025-07-25 08:37:03,036 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 08:37:03,044 - DEBUG - Using proactor: IocpProactor
2025-07-25 08:37:03,052 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 08:37:03,205 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 08:37:03,346 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 08:37:03,460 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001EC42745650>
2025-07-25 08:37:03,460 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001EC45804680> server_hostname='api.gradio.app' timeout=3
2025-07-25 08:37:03,684 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 08:37:03,686 - INFO - Tags gespeichert für: data\02. Waffendealer.mp3
2025-07-25 08:37:03,686 - INFO - Verarbeite Datei: data\03. Der Sandmann (Feat. Chakuza & Saad).mp3
2025-07-25 08:37:03,687 - INFO - Beginne Verarbeitung der Datei: data\03. Der Sandmann (Feat. Chakuza & Saad).mp3
2025-07-25 08:37:03,696 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Der Sandmann (Feat. Chakuza & Saad)
2025-07-25 08:37:03,696 - INFO - Lade und speichere Lyrics für: Bushido - Der Sandmann (Feat. Chakuza & Saad)
2025-07-25 08:37:03,699 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:37:03,806 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001EC45BB2810>
2025-07-25 08:37:03,807 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 08:37:03,808 - DEBUG - send_request_headers.complete
2025-07-25 08:37:03,808 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 08:37:03,809 - DEBUG - send_request_body.complete
2025-07-25 08:37:03,809 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 08:37:03,967 - DEBUG - https://genius.com:443 "GET /bushido-der-sandmann-lyrics HTTP/1.1" 301 None
2025-07-25 08:37:03,980 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 06:37:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 08:37:03,983 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 08:37:03,984 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 08:37:03,985 - DEBUG - receive_response_body.complete
2025-07-25 08:37:03,985 - DEBUG - response_closed.started
2025-07-25 08:37:03,986 - DEBUG - response_closed.complete
2025-07-25 08:37:03,987 - DEBUG - close.started
2025-07-25 08:37:03,987 - DEBUG - close.complete
2025-07-25 08:37:05,970 - DEBUG - https://genius.com:443 "GET /Bushido-der-sandmann-lyrics HTTP/1.1" 200 None
2025-07-25 08:37:06,389 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 08:37:08,106 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:37:21,089 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:37:31,852 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:37:44,183 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:37:48,242 - INFO - Tags gespeichert für: data\03. Der Sandmann (Feat. Chakuza & Saad).mp3
2025-07-25 08:37:48,243 - ERROR - Fehler bei der Verarbeitung von data\03. Der Sandmann (Feat. Chakuza & Saad).mp3: 'NoneType' object is not subscriptable
2025-07-25 08:37:48,243 - INFO - Verarbeite Datei: data\03. Weisst Du .mp3
2025-07-25 08:37:48,243 - INFO - Beginne Verarbeitung der Datei: data\03. Weisst Du .mp3
2025-07-25 08:37:48,252 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Weisst Du?
2025-07-25 08:37:48,252 - INFO - Lade und speichere Lyrics für: Bushido - Weisst Du?
2025-07-25 08:37:48,255 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:37:48,805 - DEBUG - https://genius.com:443 "GET /bushido-weisst-du-lyrics HTTP/1.1" 404 None
2025-07-25 08:37:48,921 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:37:49,370 - DEBUG - https://genius.com:443 "GET /weisst-du-bushido-lyrics HTTP/1.1" 404 None
2025-07-25 08:37:50,905 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:37:51,330 - DEBUG - https://genius.com:443 "GET /search?q=Bushido%20Weisst%20Du%3F HTTP/1.1" 200 None
2025-07-25 08:37:51,445 - WARNING - Keine Lyrics gefunden für: data\03. Weisst Du .mp3
2025-07-25 08:37:51,445 - INFO - Verarbeite Datei: data\04. Die Stimme der Nation (Feat. Godsilla).mp3
2025-07-25 08:37:51,446 - INFO - Beginne Verarbeitung der Datei: data\04. Die Stimme der Nation (Feat. Godsilla).mp3
2025-07-25 08:37:51,455 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Die Stimme der Nation (Feat. Godsilla)
2025-07-25 08:37:51,455 - INFO - Lade und speichere Lyrics für: Bushido - Die Stimme der Nation (Feat. Godsilla)
2025-07-25 08:37:51,457 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:37:51,982 - DEBUG - https://genius.com:443 "GET /bushido-die-stimme-der-nation-lyrics HTTP/1.1" 301 None
2025-07-25 08:37:53,364 - DEBUG - https://genius.com:443 "GET /Bushido-die-stimme-der-nation-lyrics HTTP/1.1" 200 None
2025-07-25 08:37:53,750 - DEBUG - BPM-Wert ermittelt: 96
2025-07-25 08:37:55,461 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:38:04,744 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:38:15,515 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:38:27,760 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:38:31,831 - INFO - Tags gespeichert für: data\04. Die Stimme der Nation (Feat. Godsilla).mp3
2025-07-25 08:38:31,832 - ERROR - Fehler bei der Verarbeitung von data\04. Die Stimme der Nation (Feat. Godsilla).mp3: 'NoneType' object is not subscriptable
2025-07-25 08:38:31,832 - INFO - Verarbeite Datei: data\04. Goldrapper.mp3
2025-07-25 08:38:31,832 - INFO - Beginne Verarbeitung der Datei: data\04. Goldrapper.mp3
2025-07-25 08:38:31,841 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Goldrapper
2025-07-25 08:38:31,841 - INFO - Lade und speichere Lyrics für: Bushido - Goldrapper
2025-07-25 08:38:31,845 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:38:32,299 - DEBUG - https://genius.com:443 "GET /bushido-goldrapper-lyrics HTTP/1.1" 301 None
2025-07-25 08:38:33,553 - DEBUG - https://genius.com:443 "GET /Bushido-goldrapper-lyrics HTTP/1.1" 200 None
2025-07-25 08:38:33,981 - DEBUG - BPM-Wert ermittelt: 96
2025-07-25 08:38:35,701 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:38:41,666 - DEBUG - Starte die Anwendung...
2025-07-25 08:38:41,666 - INFO - Verarbeite MP3-Datei...
2025-07-25 08:38:41,666 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 08:38:41,674 - DEBUG - Using proactor: IocpProactor
2025-07-25 08:38:41,680 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 08:38:41,835 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 08:38:41,974 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 08:38:42,076 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000023D7C4AA3D0>
2025-07-25 08:38:42,077 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000023D7C4A45F0> server_hostname='api.gradio.app' timeout=3
2025-07-25 08:38:42,426 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000023D7C851590>
2025-07-25 08:38:42,428 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 08:38:42,428 - DEBUG - send_request_headers.complete
2025-07-25 08:38:42,429 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 08:38:42,429 - DEBUG - send_request_body.complete
2025-07-25 08:38:42,429 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 08:38:42,601 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 06:38:43 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 08:38:42,605 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 08:38:42,607 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 08:38:42,608 - DEBUG - receive_response_body.complete
2025-07-25 08:38:42,608 - DEBUG - response_closed.started
2025-07-25 08:38:42,608 - DEBUG - response_closed.complete
2025-07-25 08:38:42,610 - DEBUG - close.started
2025-07-25 08:38:42,610 - DEBUG - close.complete
2025-07-25 08:38:45,013 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:38:52,143 - DEBUG - Starte die Anwendung...
2025-07-25 08:38:52,143 - INFO - Verarbeite MP3-Datei...
2025-07-25 08:38:52,143 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 08:38:52,150 - DEBUG - Using proactor: IocpProactor
2025-07-25 08:38:52,159 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 08:38:52,305 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 08:38:52,368 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 08:38:52,512 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001402A7F2590>
2025-07-25 08:38:52,512 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001402A4F05F0> server_hostname='api.gradio.app' timeout=3
2025-07-25 08:38:52,855 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001402A7D0250>
2025-07-25 08:38:52,856 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 08:38:52,857 - DEBUG - send_request_headers.complete
2025-07-25 08:38:52,857 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 08:38:52,857 - DEBUG - send_request_body.complete
2025-07-25 08:38:52,858 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 08:38:53,031 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 06:38:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 08:38:53,033 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 08:38:53,035 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 08:38:53,036 - DEBUG - receive_response_body.complete
2025-07-25 08:38:53,036 - DEBUG - response_closed.started
2025-07-25 08:38:53,036 - DEBUG - response_closed.complete
2025-07-25 08:38:53,037 - DEBUG - close.started
2025-07-25 08:38:53,038 - DEBUG - close.complete
2025-07-25 08:38:55,828 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:39:08,105 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:39:12,189 - INFO - Tags gespeichert für: data\04. Goldrapper.mp3
2025-07-25 08:39:12,189 - ERROR - Fehler bei der Verarbeitung von data\04. Goldrapper.mp3: 'NoneType' object is not subscriptable
2025-07-25 08:39:12,190 - INFO - Verarbeite Datei: data\05. Sonnenbank Flavour.mp3
2025-07-25 08:39:12,190 - INFO - Beginne Verarbeitung der Datei: data\05. Sonnenbank Flavour.mp3
2025-07-25 08:39:12,201 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Sonnenbank Flavour
2025-07-25 08:39:12,201 - INFO - Lade und speichere Lyrics für: Bushido - Sonnenbank Flavour
2025-07-25 08:39:12,204 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:39:12,479 - DEBUG - https://genius.com:443 "GET /bushido-sonnenbank-flavour-lyrics HTTP/1.1" 301 None
2025-07-25 08:39:15,140 - DEBUG - https://genius.com:443 "GET /Bushido-sonnenbank-flavour-lyrics HTTP/1.1" 200 None
2025-07-25 08:39:15,652 - DEBUG - BPM-Wert ermittelt: 96
2025-07-25 08:39:17,375 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:39:26,673 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:39:37,431 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:39:49,691 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:39:53,778 - INFO - Tags gespeichert für: data\05. Sonnenbank Flavour.mp3
2025-07-25 08:39:53,779 - ERROR - Fehler bei der Verarbeitung von data\05. Sonnenbank Flavour.mp3: 'NoneType' object is not subscriptable
2025-07-25 08:39:53,779 - INFO - Verarbeite Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 08:39:53,779 - INFO - Beginne Verarbeitung der Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 08:39:53,787 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Untergrund (Feat. Eko Fresh)
2025-07-25 08:39:53,788 - INFO - Lade und speichere Lyrics für: Bushido - Untergrund (Feat. Eko Fresh)
2025-07-25 08:39:53,791 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:39:54,071 - DEBUG - https://genius.com:443 "GET /bushido-untergrund-lyrics HTTP/1.1" 301 None
2025-07-25 08:39:54,393 - DEBUG - Starte die Anwendung...
2025-07-25 08:39:54,393 - INFO - Verarbeite MP3-Datei...
2025-07-25 08:39:54,394 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 08:39:54,401 - DEBUG - Using proactor: IocpProactor
2025-07-25 08:39:54,409 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 08:39:54,567 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 08:39:54,617 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 08:39:54,790 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000017A418A79D0>
2025-07-25 08:39:54,790 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000017A415C05F0> server_hostname='api.gradio.app' timeout=3
2025-07-25 08:39:55,145 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000017A418C5590>
2025-07-25 08:39:55,146 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 08:39:55,147 - DEBUG - send_request_headers.complete
2025-07-25 08:39:55,147 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 08:39:55,147 - DEBUG - send_request_body.complete
2025-07-25 08:39:55,147 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 08:39:55,317 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 06:39:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 08:39:55,319 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 08:39:55,321 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 08:39:55,322 - DEBUG - receive_response_body.complete
2025-07-25 08:39:55,322 - DEBUG - response_closed.started
2025-07-25 08:39:55,323 - DEBUG - response_closed.complete
2025-07-25 08:39:55,324 - DEBUG - close.started
2025-07-25 08:39:55,324 - DEBUG - close.complete
2025-07-25 08:39:55,787 - DEBUG - https://genius.com:443 "GET /Bushido-untergrund-lyrics HTTP/1.1" 200 None
2025-07-25 08:39:56,192 - DEBUG - BPM-Wert ermittelt: 172
2025-07-25 08:39:57,903 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:40:07,162 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:40:17,933 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:40:30,190 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:40:34,236 - INFO - Tags gespeichert für: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 08:40:34,237 - ERROR - Fehler bei der Verarbeitung von data\05. Untergrund (Feat. Eko Fresh).mp3: 'NoneType' object is not subscriptable
2025-07-25 08:40:34,237 - INFO - Verarbeite Datei: data\06. Engel.mp3
2025-07-25 08:40:34,237 - INFO - Beginne Verarbeitung der Datei: data\06. Engel.mp3
2025-07-25 08:40:34,249 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Engel
2025-07-25 08:40:34,249 - INFO - Lade und speichere Lyrics für: Bushido - Engel
2025-07-25 08:40:34,252 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:40:34,764 - DEBUG - https://genius.com:443 "GET /bushido-engel-lyrics HTTP/1.1" 301 None
2025-07-25 08:40:36,183 - DEBUG - https://genius.com:443 "GET /Bushido-engel-lyrics HTTP/1.1" 200 None
2025-07-25 08:40:36,586 - DEBUG - BPM-Wert ermittelt: 89
2025-07-25 08:40:38,299 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:40:47,559 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:40:58,318 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:41:10,554 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:41:14,593 - INFO - Tags gespeichert für: data\06. Engel.mp3
2025-07-25 08:41:14,594 - ERROR - Fehler bei der Verarbeitung von data\06. Engel.mp3: 'NoneType' object is not subscriptable
2025-07-25 08:41:14,594 - INFO - Verarbeite Datei: data\06. Kurt Cobain.mp3
2025-07-25 08:41:14,594 - INFO - Beginne Verarbeitung der Datei: data\06. Kurt Cobain.mp3
2025-07-25 08:41:14,603 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Kurt Cobain
2025-07-25 08:41:14,604 - INFO - Lade und speichere Lyrics für: Bushido - Kurt Cobain
2025-07-25 08:41:14,606 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:41:14,881 - DEBUG - https://genius.com:443 "GET /bushido-kurt-cobain-lyrics HTTP/1.1" 301 None
2025-07-25 08:41:18,258 - DEBUG - https://genius.com:443 "GET /Bushido-kurt-cobain-lyrics HTTP/1.1" 200 None
2025-07-25 08:41:18,568 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 08:41:20,287 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:41:29,544 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:41:40,329 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:41:52,594 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:41:56,666 - INFO - Tags gespeichert für: data\06. Kurt Cobain.mp3
2025-07-25 08:41:56,667 - ERROR - Fehler bei der Verarbeitung von data\06. Kurt Cobain.mp3: 'NoneType' object is not subscriptable
2025-07-25 08:41:56,667 - INFO - Verarbeite Datei: data\07. Ab 18 (Feat. Saad).mp3
2025-07-25 08:41:56,667 - INFO - Beginne Verarbeitung der Datei: data\07. Ab 18 (Feat. Saad).mp3
2025-07-25 08:41:56,676 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Ab 18 (Feat. Saad)
2025-07-25 08:41:56,676 - INFO - Lade und speichere Lyrics für: Bushido - Ab 18 (Feat. Saad)
2025-07-25 08:41:56,678 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:41:57,234 - DEBUG - https://genius.com:443 "GET /bushido-ab-18-lyrics HTTP/1.1" 301 None
2025-07-25 08:41:58,494 - DEBUG - https://genius.com:443 "GET /Bushido-ab-18-lyrics HTTP/1.1" 200 None
2025-07-25 08:41:58,884 - DEBUG - BPM-Wert ermittelt: 172
2025-07-25 08:42:00,607 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:42:09,898 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:42:20,702 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:42:32,982 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 08:42:37,026 - INFO - Tags gespeichert für: data\07. Ab 18 (Feat. Saad).mp3
2025-07-25 08:42:37,027 - ERROR - Fehler bei der Verarbeitung von data\07. Ab 18 (Feat. Saad).mp3: 'NoneType' object is not subscriptable
2025-07-25 08:42:37,027 - INFO - Verarbeite Datei: data\07. Wenn ein Gangster weint.mp3
2025-07-25 08:42:37,027 - INFO - Beginne Verarbeitung der Datei: data\07. Wenn ein Gangster weint.mp3
2025-07-25 08:42:37,039 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Wenn ein Gangster weint
2025-07-25 08:42:37,039 - INFO - Lade und speichere Lyrics für: Bushido - Wenn ein Gangster weint
2025-07-25 08:42:37,042 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 08:42:37,465 - DEBUG - https://genius.com:443 "GET /bushido-wenn-ein-gangster-weint-lyrics HTTP/1.1" 301 None
2025-07-25 08:42:38,703 - DEBUG - https://genius.com:443 "GET /Bushido-wenn-ein-gangster-weint-lyrics HTTP/1.1" 200 None
2025-07-25 08:42:38,982 - DEBUG - BPM-Wert ermittelt: 185
2025-07-25 09:40:54,227 - DEBUG - Starte die Anwendung...
2025-07-25 09:40:54,227 - INFO - Verarbeite MP3-Datei...
2025-07-25 09:40:54,228 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 09:40:54,232 - DEBUG - Using proactor: IocpProactor
2025-07-25 09:40:54,263 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 09:40:54,389 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 09:40:54,398 - DEBUG - Using proactor: IocpProactor
2025-07-25 09:40:54,498 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 09:40:54,568 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=None socket_options=None
2025-07-25 09:40:54,569 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E0B3030B10>
2025-07-25 09:40:54,569 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 09:40:54,570 - DEBUG - send_request_headers.complete
2025-07-25 09:40:54,570 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 09:40:54,571 - DEBUG - send_request_body.complete
2025-07-25 09:40:54,571 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 09:40:54,571 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 07:40:54 GMT'), (b'server', b'uvicorn'), (b'content-length', b'4'), (b'content-type', b'application/json')])
2025-07-25 09:40:54,571 - INFO - HTTP Request: GET http://127.0.0.1:7860/gradio_api/startup-events "HTTP/1.1 200 OK"
2025-07-25 09:40:54,571 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 09:40:54,571 - DEBUG - receive_response_body.complete
2025-07-25 09:40:54,572 - DEBUG - response_closed.started
2025-07-25 09:40:54,572 - DEBUG - response_closed.complete
2025-07-25 09:40:54,572 - DEBUG - close.started
2025-07-25 09:40:54,572 - DEBUG - close.complete
2025-07-25 09:40:54,573 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=3 socket_options=None
2025-07-25 09:40:54,592 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E0B3032D10>
2025-07-25 09:40:54,592 - DEBUG - send_request_headers.started request=<Request [b'HEAD']>
2025-07-25 09:40:54,592 - DEBUG - send_request_headers.complete
2025-07-25 09:40:54,593 - DEBUG - send_request_body.started request=<Request [b'HEAD']>
2025-07-25 09:40:54,593 - DEBUG - send_request_body.complete
2025-07-25 09:40:54,593 - DEBUG - receive_response_headers.started request=<Request [b'HEAD']>
2025-07-25 09:40:54,640 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E0B2FD8150>
2025-07-25 09:40:54,640 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E0B2D67920> server_hostname='api.gradio.app' timeout=3
2025-07-25 09:40:54,658 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 07:40:54 GMT'), (b'server', b'uvicorn'), (b'content-length', b'34020'), (b'content-type', b'text/html; charset=utf-8')])
2025-07-25 09:40:54,658 - INFO - HTTP Request: HEAD http://127.0.0.1:7860/ "HTTP/1.1 200 OK"
2025-07-25 09:40:54,658 - DEBUG - receive_response_body.started request=<Request [b'HEAD']>
2025-07-25 09:40:54,659 - DEBUG - receive_response_body.complete
2025-07-25 09:40:54,659 - DEBUG - response_closed.started
2025-07-25 09:40:54,659 - DEBUG - response_closed.complete
2025-07-25 09:40:54,659 - DEBUG - close.started
2025-07-25 09:40:54,659 - DEBUG - close.complete
2025-07-25 09:40:54,661 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 09:40:54,807 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/launched HTTP/1.1" 200 0
2025-07-25 09:40:54,981 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E0B31AC6D0>
2025-07-25 09:40:54,981 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 09:40:54,982 - DEBUG - send_request_headers.complete
2025-07-25 09:40:54,982 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 09:40:54,983 - DEBUG - send_request_body.complete
2025-07-25 09:40:54,983 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 09:40:55,154 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 07:40:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 09:40:55,154 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 09:40:55,155 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 09:40:55,155 - DEBUG - receive_response_body.complete
2025-07-25 09:40:55,155 - DEBUG - response_closed.started
2025-07-25 09:40:55,155 - DEBUG - response_closed.complete
2025-07-25 09:40:55,156 - DEBUG - close.started
2025-07-25 09:40:55,156 - DEBUG - close.complete
2025-07-25 09:42:12,038 - DEBUG - matplotlib data path: Z:\AI\software\miniconda3\envs\ace-data_env\Lib\site-packages\matplotlib\mpl-data
2025-07-25 09:42:12,048 - DEBUG - CONFIGDIR=C:\Users\methm\.matplotlib
2025-07-25 09:42:12,050 - DEBUG - interactive is False
2025-07-25 09:42:12,050 - DEBUG - platform is win32
2025-07-25 09:42:12,095 - DEBUG - CACHEDIR=C:\Users\methm\.matplotlib
2025-07-25 09:42:12,110 - DEBUG - Using fontManager instance from C:\Users\methm\.matplotlib\fontlist-v390.json
2025-07-25 09:42:12,407 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 09:42:12,407 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 09:42:12,408 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 09:42:12,409 - INFO - Verarbeite Datei: data\03. Der Sandmann (Feat. Chakuza & Saad).mp3
2025-07-25 09:42:12,409 - INFO - Beginne Verarbeitung der Datei: data\03. Der Sandmann (Feat. Chakuza & Saad).mp3
2025-07-25 09:42:12,436 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Der Sandmann (Feat. Chakuza & Saad)
2025-07-25 09:42:12,436 - INFO - Lade und speichere Lyrics für: Bushido - Der Sandmann (Feat. Chakuza & Saad)
2025-07-25 09:42:12,438 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 09:42:12,886 - DEBUG - https://genius.com:443 "GET /bushido-der-sandmann-lyrics HTTP/1.1" 301 None
2025-07-25 09:42:13,074 - DEBUG - https://genius.com:443 "GET /Bushido-der-sandmann-lyrics HTTP/1.1" 200 None
2025-07-25 09:42:13,431 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
2025-07-25 09:42:13,432 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 09:42:13,432 - DEBUG - stack: []
2025-07-25 09:42:13,432 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 09:42:13,432 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-07-25 09:42:13,432 - DEBUG - stack []
2025-07-25 09:42:13,433 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
2025-07-25 09:42:13,433 - DEBUG - stack []
2025-07-25 09:42:13,433 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
2025-07-25 09:42:13,433 - DEBUG - stack []
2025-07-25 09:42:13,433 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
2025-07-25 09:42:13,433 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 09:42:13,433 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
2025-07-25 09:42:13,434 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2025-07-25 09:42:13,434 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
2025-07-25 09:42:13,434 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
2025-07-25 09:42:13,434 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
2025-07-25 09:42:13,434 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
2025-07-25 09:42:13,434 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
2025-07-25 09:42:13,434 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
2025-07-25 09:42:13,435 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
2025-07-25 09:42:13,435 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
2025-07-25 09:42:13,435 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
2025-07-25 09:42:13,435 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
2025-07-25 09:42:13,435 - DEBUG - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
2025-07-25 09:42:13,436 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 09:42:13,436 - DEBUG - dispatch pc=34, inst=CALL(arg=7, lineno=86)
2025-07-25 09:42:13,436 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 09:42:13,436 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
2025-07-25 09:42:13,436 - DEBUG - stack ['$34call.9']
2025-07-25 09:42:13,436 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
2025-07-25 09:42:13,437 - DEBUG - stack []
2025-07-25 09:42:13,437 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
2025-07-25 09:42:13,437 - DEBUG - stack ['$const46.10.0']
2025-07-25 09:42:13,437 - DEBUG - end state. edges=[]
2025-07-25 09:42:13,437 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 09:42:13,437 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-25 09:42:13,438 - DEBUG - defmap: {}
2025-07-25 09:42:13,438 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 09:42:13,438 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 09:42:13,438 - DEBUG - keep phismap: {}
2025-07-25 09:42:13,438 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 09:42:13,438 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 09:42:13,438 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10.0'}), (48, {'retval': '$const46.10.0', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 09:42:13,439 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000001E0B501A480>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10.0 = const(NoneType, None)    ['$const46.10.0']
    $48return_value.11 = cast(value=$const46.10.0) ['$48return_value.11', '$const46.10.0']
    return $48return_value.11                ['$48return_value.11']

2025-07-25 09:42:13,441 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 09:42:13,441 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E0B5307D10>
2025-07-25 09:42:13,442 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,442 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,442 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,442 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,442 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,443 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,443 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,443 - DEBUG - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000001E0B501A480>))
2025-07-25 09:42:13,443 - DEBUG - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,443 - DEBUG - on stmt: $const46.10.0 = const(NoneType, None)
2025-07-25 09:42:13,444 - DEBUG - on stmt: $48return_value.11 = cast(value=$const46.10.0)
2025-07-25 09:42:13,444 - DEBUG - on stmt: return $48return_value.11
2025-07-25 09:42:13,444 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x000001E0B5307050>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x000001E0B5307A10>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001E0AE477710>,
                                  0)],
             '$const46.10.0': [(<numba.core.ir.Assign object at 0x000001E0B5307810>,
                                0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000001E0B5306250>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000001E0B5306150>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000001E0B5306350>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x000001E0B5306490>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x000001E0B5306010>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x000001E0B5305290>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001E0B5306590>, 0)]})
2025-07-25 09:42:13,445 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001E0B5307D10>
2025-07-25 09:42:13,448 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
2025-07-25 09:42:13,453 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 09:42:13,453 - DEBUG - stack: []
2025-07-25 09:42:13,453 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 09:42:13,453 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-07-25 09:42:13,453 - DEBUG - stack []
2025-07-25 09:42:13,453 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
2025-07-25 09:42:13,454 - DEBUG - stack []
2025-07-25 09:42:13,454 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
2025-07-25 09:42:13,454 - DEBUG - stack []
2025-07-25 09:42:13,454 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
2025-07-25 09:42:13,454 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 09:42:13,454 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
2025-07-25 09:42:13,454 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
2025-07-25 09:42:13,455 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
2025-07-25 09:42:13,455 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
2025-07-25 09:42:13,455 - DEBUG - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
2025-07-25 09:42:13,455 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 09:42:13,455 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=9)
2025-07-25 09:42:13,456 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 09:42:13,456 - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
2025-07-25 09:42:13,456 - DEBUG - stack ['$28call.5']
2025-07-25 09:42:13,456 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
2025-07-25 09:42:13,456 - DEBUG - stack []
2025-07-25 09:42:13,457 - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
2025-07-25 09:42:13,457 - DEBUG - stack ['$const40.6.1']
2025-07-25 09:42:13,457 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
2025-07-25 09:42:13,457 - DEBUG - stack []
2025-07-25 09:42:13,457 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
2025-07-25 09:42:13,457 - DEBUG - stack ['$const44.7.2']
2025-07-25 09:42:13,457 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
2025-07-25 09:42:13,457 - DEBUG - stack []
2025-07-25 09:42:13,457 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
2025-07-25 09:42:13,458 - DEBUG - stack ['$const48.8.1']
2025-07-25 09:42:13,458 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
2025-07-25 09:42:13,458 - DEBUG - stack []
2025-07-25 09:42:13,458 - DEBUG - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
2025-07-25 09:42:13,458 - DEBUG - stack ['$const52.9.1']
2025-07-25 09:42:13,458 - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
2025-07-25 09:42:13,458 - DEBUG - stack []
2025-07-25 09:42:13,458 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
2025-07-25 09:42:13,458 - DEBUG - stack ['$const56.10.2']
2025-07-25 09:42:13,459 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
2025-07-25 09:42:13,459 - DEBUG - stack []
2025-07-25 09:42:13,459 - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
2025-07-25 09:42:13,459 - DEBUG - stack ['$const60.11.1']
2025-07-25 09:42:13,459 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
2025-07-25 09:42:13,459 - DEBUG - stack []
2025-07-25 09:42:13,459 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
2025-07-25 09:42:13,460 - DEBUG - stack ['$const64.12.1']
2025-07-25 09:42:13,460 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
2025-07-25 09:42:13,460 - DEBUG - stack []
2025-07-25 09:42:13,460 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
2025-07-25 09:42:13,460 - DEBUG - stack ['$interp_win68.13']
2025-07-25 09:42:13,460 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
2025-07-25 09:42:13,460 - DEBUG - stack ['$70load_attr.14']
2025-07-25 09:42:13,461 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-07-25 09:42:13,461 - DEBUG - stack ['$70load_attr.14', '$const80.15.2']
2025-07-25 09:42:13,461 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
2025-07-25 09:42:13,461 - DEBUG - stack ['$82binary_subscr.16']
2025-07-25 09:42:13,461 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
2025-07-25 09:42:13,461 - DEBUG - stack []
2025-07-25 09:42:13,461 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
2025-07-25 09:42:13,461 - DEBUG - stack ['$x94.17']
2025-07-25 09:42:13,461 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
2025-07-25 09:42:13,461 - DEBUG - stack ['$96load_attr.18']
2025-07-25 09:42:13,461 - DEBUG - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-07-25 09:42:13,461 - DEBUG - stack ['$96load_attr.18', '$const106.19.2']
2025-07-25 09:42:13,461 - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
2025-07-25 09:42:13,462 - DEBUG - stack ['$108binary_subscr.20']
2025-07-25 09:42:13,462 - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
2025-07-25 09:42:13,462 - DEBUG - stack []
2025-07-25 09:42:13,462 - DEBUG - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
2025-07-25 09:42:13,462 - DEBUG - stack ['$t_out120.21']
2025-07-25 09:42:13,462 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
2025-07-25 09:42:13,462 - DEBUG - stack ['$122load_attr.22']
2025-07-25 09:42:13,462 - DEBUG - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-07-25 09:42:13,462 - DEBUG - stack ['$122load_attr.22', '$const132.23.2']
2025-07-25 09:42:13,462 - DEBUG - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
2025-07-25 09:42:13,462 - DEBUG - stack ['$134binary_subscr.24']
2025-07-25 09:42:13,462 - DEBUG - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
2025-07-25 09:42:13,463 - DEBUG - stack []
2025-07-25 09:42:13,463 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
2025-07-25 09:42:13,463 - DEBUG - stack ['$null$146.26', '$146load_global.25']
2025-07-25 09:42:13,463 - DEBUG - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
2025-07-25 09:42:13,463 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 09:42:13,463 - DEBUG - dispatch pc=164, inst=CALL(arg=1, lineno=23)
2025-07-25 09:42:13,463 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 09:42:13,463 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
2025-07-25 09:42:13,463 - DEBUG - stack ['$164call.28']
2025-07-25 09:42:13,464 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
2025-07-25 09:42:13,464 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2025-07-25 09:42:13,464 - DEBUG - stack: ['$phi176.0']
2025-07-25 09:42:13,464 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2025-07-25 09:42:13,464 - DEBUG - dispatch pc=176, inst=NOP(arg=1, lineno=23)
2025-07-25 09:42:13,464 - DEBUG - stack ['$phi176.0']
2025-07-25 09:42:13,464 - DEBUG - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
2025-07-25 09:42:13,464 - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=1)])
2025-07-25 09:42:13,464 - DEBUG - stack: ['$phi178.0']
2025-07-25 09:42:13,465 - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=1)
2025-07-25 09:42:13,465 - DEBUG - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
2025-07-25 09:42:13,465 - DEBUG - stack ['$phi178.0']
2025-07-25 09:42:13,465 - DEBUG - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
2025-07-25 09:42:13,465 - DEBUG - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
2025-07-25 09:42:13,465 - DEBUG - stack: []
2025-07-25 09:42:13,465 - DEBUG - state.pc_initial: State(pc_initial=782 nstack_initial=0)
2025-07-25 09:42:13,465 - DEBUG - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
2025-07-25 09:42:13,465 - DEBUG - stack []
2025-07-25 09:42:13,465 - DEBUG - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
2025-07-25 09:42:13,466 - DEBUG - stack ['$const782.0.0']
2025-07-25 09:42:13,466 - DEBUG - end state. edges=[]
2025-07-25 09:42:13,466 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2025-07-25 09:42:13,466 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2025-07-25 09:42:13,466 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2025-07-25 09:42:13,466 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
2025-07-25 09:42:13,466 - DEBUG - stack ['$phi180.0', '$phi180.1']
2025-07-25 09:42:13,466 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
2025-07-25 09:42:13,466 - DEBUG - stack ['$phi180.0']
2025-07-25 09:42:13,467 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
2025-07-25 09:42:13,467 - DEBUG - stack ['$phi180.0', '$t_out182.2']
2025-07-25 09:42:13,467 - DEBUG - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-07-25 09:42:13,467 - DEBUG - stack ['$phi180.0', '$t_out182.2', '$t184.3']
2025-07-25 09:42:13,467 - DEBUG - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
2025-07-25 09:42:13,467 - DEBUG - stack ['$phi180.0', '$186binary_subscr.4']
2025-07-25 09:42:13,467 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
2025-07-25 09:42:13,467 - DEBUG - stack ['$phi180.0']
2025-07-25 09:42:13,468 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
2025-07-25 09:42:13,468 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
2025-07-25 09:42:13,468 - DEBUG - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
2025-07-25 09:42:13,468 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 09:42:13,468 - DEBUG - dispatch pc=216, inst=CALL(arg=1, lineno=27)
2025-07-25 09:42:13,468 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 09:42:13,468 - DEBUG - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
2025-07-25 09:42:13,469 - DEBUG - stack ['$phi180.0', '$216call.8']
2025-07-25 09:42:13,469 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
2025-07-25 09:42:13,469 - DEBUG - stack ['$phi180.0']
2025-07-25 09:42:13,469 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
2025-07-25 09:42:13,469 - DEBUG - stack ['$phi180.0', '$scale228.9']
2025-07-25 09:42:13,469 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
2025-07-25 09:42:13,469 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
2025-07-25 09:42:13,469 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
2025-07-25 09:42:13,469 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
2025-07-25 09:42:13,469 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
2025-07-25 09:42:13,470 - DEBUG - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
2025-07-25 09:42:13,470 - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
2025-07-25 09:42:13,470 - DEBUG - stack ['$phi180.0', '$binop_mul238.13']
2025-07-25 09:42:13,470 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
2025-07-25 09:42:13,470 - DEBUG - stack ['$phi180.0']
2025-07-25 09:42:13,470 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
2025-07-25 09:42:13,470 - DEBUG - stack ['$phi180.0', '$frac244.14']
2025-07-25 09:42:13,470 - DEBUG - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
2025-07-25 09:42:13,471 - DEBUG - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
2025-07-25 09:42:13,471 - DEBUG - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
2025-07-25 09:42:13,471 - DEBUG - stack ['$phi180.0', '$binop_mul248.16']
2025-07-25 09:42:13,471 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
2025-07-25 09:42:13,471 - DEBUG - stack ['$phi180.0']
2025-07-25 09:42:13,471 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
2025-07-25 09:42:13,471 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
2025-07-25 09:42:13,471 - DEBUG - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
2025-07-25 09:42:13,471 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 09:42:13,471 - DEBUG - dispatch pc=272, inst=CALL(arg=1, lineno=34)
2025-07-25 09:42:13,472 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 09:42:13,472 - DEBUG - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
2025-07-25 09:42:13,472 - DEBUG - stack ['$phi180.0', '$272call.20']
2025-07-25 09:42:13,472 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
2025-07-25 09:42:13,472 - DEBUG - stack ['$phi180.0']
2025-07-25 09:42:13,472 - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
2025-07-25 09:42:13,472 - DEBUG - stack ['$phi180.0', '$index_frac284.21']
2025-07-25 09:42:13,472 - DEBUG - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
2025-07-25 09:42:13,472 - DEBUG - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
2025-07-25 09:42:13,472 - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
2025-07-25 09:42:13,472 - DEBUG - stack ['$phi180.0', '$binop_sub288.23']
2025-07-25 09:42:13,472 - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
2025-07-25 09:42:13,473 - DEBUG - stack ['$phi180.0']
2025-07-25 09:42:13,473 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
2025-07-25 09:42:13,473 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
2025-07-25 09:42:13,473 - DEBUG - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
2025-07-25 09:42:13,473 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
2025-07-25 09:42:13,473 - DEBUG - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
2025-07-25 09:42:13,473 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27.3']
2025-07-25 09:42:13,473 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
2025-07-25 09:42:13,473 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
2025-07-25 09:42:13,473 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
2025-07-25 09:42:13,474 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
2025-07-25 09:42:13,474 - DEBUG - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
2025-07-25 09:42:13,474 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
2025-07-25 09:42:13,474 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
2025-07-25 09:42:13,474 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
2025-07-25 09:42:13,474 - DEBUG - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
2025-07-25 09:42:13,474 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
2025-07-25 09:42:13,474 - DEBUG - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
2025-07-25 09:42:13,474 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 09:42:13,474 - DEBUG - dispatch pc=332, inst=CALL(arg=2, lineno=40)
2025-07-25 09:42:13,475 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 09:42:13,475 - DEBUG - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
2025-07-25 09:42:13,475 - DEBUG - stack ['$phi180.0', '$332call.34']
2025-07-25 09:42:13,475 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
2025-07-25 09:42:13,475 - DEBUG - stack ['$phi180.0']
2025-07-25 09:42:13,475 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
2025-07-25 09:42:13,475 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
2025-07-25 09:42:13,475 - DEBUG - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
2025-07-25 09:42:13,475 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 09:42:13,475 - DEBUG - dispatch pc=362, inst=CALL(arg=1, lineno=41)
2025-07-25 09:42:13,475 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 09:42:13,475 - DEBUG - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
2025-07-25 09:42:13,476 - DEBUG - stack ['$phi180.0', '$362call.38']
2025-07-25 09:42:13,476 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
2025-07-25 09:42:13,476 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2)])
2025-07-25 09:42:13,476 - DEBUG - stack: ['$phi374.0', '$phi374.1']
2025-07-25 09:42:13,476 - DEBUG - state.pc_initial: State(pc_initial=374 nstack_initial=2)
2025-07-25 09:42:13,476 - DEBUG - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
2025-07-25 09:42:13,476 - DEBUG - stack ['$phi374.0', '$phi374.1']
2025-07-25 09:42:13,476 - DEBUG - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
2025-07-25 09:42:13,476 - DEBUG - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
2025-07-25 09:42:13,476 - DEBUG - stack: ['$phi500.0']
2025-07-25 09:42:13,477 - DEBUG - state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-07-25 09:42:13,477 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
2025-07-25 09:42:13,477 - DEBUG - stack ['$phi500.0']
2025-07-25 09:42:13,477 - DEBUG - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
2025-07-25 09:42:13,477 - DEBUG - stack ['$phi500.0', '$scale500.1']
2025-07-25 09:42:13,477 - DEBUG - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
2025-07-25 09:42:13,477 - DEBUG - stack ['$phi500.0', '$scale500.1', '$frac502.2']
2025-07-25 09:42:13,477 - DEBUG - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
2025-07-25 09:42:13,477 - DEBUG - stack ['$phi500.0', '$binop_sub504.3']
2025-07-25 09:42:13,477 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
2025-07-25 09:42:13,477 - DEBUG - stack ['$phi500.0']
2025-07-25 09:42:13,478 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
2025-07-25 09:42:13,478 - DEBUG - stack ['$phi500.0', '$frac510.4']
2025-07-25 09:42:13,478 - DEBUG - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
2025-07-25 09:42:13,478 - DEBUG - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
2025-07-25 09:42:13,478 - DEBUG - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
2025-07-25 09:42:13,478 - DEBUG - stack ['$phi500.0', '$binop_mul514.6']
2025-07-25 09:42:13,478 - DEBUG - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
2025-07-25 09:42:13,478 - DEBUG - stack ['$phi500.0']
2025-07-25 09:42:13,478 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
2025-07-25 09:42:13,478 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
2025-07-25 09:42:13,479 - DEBUG - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
2025-07-25 09:42:13,479 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 09:42:13,479 - DEBUG - dispatch pc=538, inst=CALL(arg=1, lineno=54)
2025-07-25 09:42:13,479 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 09:42:13,479 - DEBUG - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
2025-07-25 09:42:13,479 - DEBUG - stack ['$phi500.0', '$538call.10']
2025-07-25 09:42:13,479 - DEBUG - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
2025-07-25 09:42:13,479 - DEBUG - stack ['$phi500.0']
2025-07-25 09:42:13,479 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
2025-07-25 09:42:13,479 - DEBUG - stack ['$phi500.0', '$index_frac550.11']
2025-07-25 09:42:13,479 - DEBUG - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
2025-07-25 09:42:13,479 - DEBUG - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
2025-07-25 09:42:13,479 - DEBUG - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
2025-07-25 09:42:13,480 - DEBUG - stack ['$phi500.0', '$binop_sub554.13']
2025-07-25 09:42:13,480 - DEBUG - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
2025-07-25 09:42:13,480 - DEBUG - stack ['$phi500.0']
2025-07-25 09:42:13,480 - DEBUG - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
2025-07-25 09:42:13,480 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
2025-07-25 09:42:13,480 - DEBUG - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
2025-07-25 09:42:13,480 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
2025-07-25 09:42:13,480 - DEBUG - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 09:42:13,480 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
2025-07-25 09:42:13,480 - DEBUG - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
2025-07-25 09:42:13,480 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
2025-07-25 09:42:13,481 - DEBUG - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 09:42:13,481 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19.3']
2025-07-25 09:42:13,481 - DEBUG - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
2025-07-25 09:42:13,481 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
2025-07-25 09:42:13,481 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
2025-07-25 09:42:13,481 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
2025-07-25 09:42:13,481 - DEBUG - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 09:42:13,481 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
2025-07-25 09:42:13,481 - DEBUG - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
2025-07-25 09:42:13,481 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
2025-07-25 09:42:13,482 - DEBUG - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
2025-07-25 09:42:13,482 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
2025-07-25 09:42:13,482 - DEBUG - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
2025-07-25 09:42:13,482 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 09:42:13,482 - DEBUG - dispatch pc=604, inst=CALL(arg=2, lineno=60)
2025-07-25 09:42:13,482 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 09:42:13,482 - DEBUG - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
2025-07-25 09:42:13,482 - DEBUG - stack ['$phi500.0', '$604call.26']
2025-07-25 09:42:13,482 - DEBUG - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
2025-07-25 09:42:13,482 - DEBUG - stack ['$phi500.0']
2025-07-25 09:42:13,482 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
2025-07-25 09:42:13,482 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
2025-07-25 09:42:13,483 - DEBUG - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
2025-07-25 09:42:13,483 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 09:42:13,483 - DEBUG - dispatch pc=634, inst=CALL(arg=1, lineno=61)
2025-07-25 09:42:13,483 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 09:42:13,483 - DEBUG - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
2025-07-25 09:42:13,483 - DEBUG - stack ['$phi500.0', '$634call.30']
2025-07-25 09:42:13,483 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
2025-07-25 09:42:13,483 - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
2025-07-25 09:42:13,483 - DEBUG - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 09:42:13,484 - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=3)
2025-07-25 09:42:13,484 - DEBUG - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
2025-07-25 09:42:13,484 - DEBUG - stack ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 09:42:13,484 - DEBUG - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
2025-07-25 09:42:13,484 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 09:42:13,484 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
2025-07-25 09:42:13,484 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
2025-07-25 09:42:13,484 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
2025-07-25 09:42:13,484 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
2025-07-25 09:42:13,484 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
2025-07-25 09:42:13,484 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
2025-07-25 09:42:13,485 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
2025-07-25 09:42:13,485 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
2025-07-25 09:42:13,485 - DEBUG - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 09:42:13,485 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
2025-07-25 09:42:13,485 - DEBUG - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-07-25 09:42:13,485 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
2025-07-25 09:42:13,485 - DEBUG - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
2025-07-25 09:42:13,485 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
2025-07-25 09:42:13,485 - DEBUG - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
2025-07-25 09:42:13,485 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
2025-07-25 09:42:13,486 - DEBUG - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
2025-07-25 09:42:13,486 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
2025-07-25 09:42:13,486 - DEBUG - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
2025-07-25 09:42:13,486 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
2025-07-25 09:42:13,486 - DEBUG - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
2025-07-25 09:42:13,486 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
2025-07-25 09:42:13,486 - DEBUG - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 09:42:13,486 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
2025-07-25 09:42:13,486 - DEBUG - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
2025-07-25 09:42:13,486 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
2025-07-25 09:42:13,486 - DEBUG - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-07-25 09:42:13,486 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
2025-07-25 09:42:13,487 - DEBUG - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 09:42:13,487 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
2025-07-25 09:42:13,487 - DEBUG - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 09:42:13,487 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
2025-07-25 09:42:13,487 - DEBUG - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
2025-07-25 09:42:13,487 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
2025-07-25 09:42:13,487 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
2025-07-25 09:42:13,487 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 09:42:13,487 - DEBUG - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
2025-07-25 09:42:13,488 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20']
2025-07-25 09:42:13,488 - DEBUG - dispatch pc=446, inst=COPY(arg=2, lineno=47)
2025-07-25 09:42:13,488 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
2025-07-25 09:42:13,488 - DEBUG - dispatch pc=448, inst=COPY(arg=2, lineno=47)
2025-07-25 09:42:13,488 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
2025-07-25 09:42:13,488 - DEBUG - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 09:42:13,488 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
2025-07-25 09:42:13,488 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
2025-07-25 09:42:13,488 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
2025-07-25 09:42:13,488 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
2025-07-25 09:42:13,489 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
2025-07-25 09:42:13,489 - DEBUG - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
2025-07-25 09:42:13,489 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
2025-07-25 09:42:13,489 - DEBUG - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
2025-07-25 09:42:13,489 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
2025-07-25 09:42:13,489 - DEBUG - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
2025-07-25 09:42:13,489 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
2025-07-25 09:42:13,489 - DEBUG - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 09:42:13,489 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
2025-07-25 09:42:13,490 - DEBUG - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
2025-07-25 09:42:13,490 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
2025-07-25 09:42:13,490 - DEBUG - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
2025-07-25 09:42:13,490 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
2025-07-25 09:42:13,490 - DEBUG - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
2025-07-25 09:42:13,490 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
2025-07-25 09:42:13,490 - DEBUG - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
2025-07-25 09:42:13,490 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
2025-07-25 09:42:13,490 - DEBUG - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-07-25 09:42:13,490 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
2025-07-25 09:42:13,490 - DEBUG - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
2025-07-25 09:42:13,490 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 09:42:13,491 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
2025-07-25 09:42:13,491 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
2025-07-25 09:42:13,491 - DEBUG - stack: ['$phi646.0', '$phi646.1']
2025-07-25 09:42:13,491 - DEBUG - state.pc_initial: State(pc_initial=646 nstack_initial=2)
2025-07-25 09:42:13,491 - DEBUG - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
2025-07-25 09:42:13,491 - DEBUG - stack ['$phi646.0', '$phi646.1']
2025-07-25 09:42:13,491 - DEBUG - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
2025-07-25 09:42:13,491 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 09:42:13,491 - DEBUG - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 09:42:13,491 - DEBUG - stack: ['$phi778.0']
2025-07-25 09:42:13,492 - DEBUG - state.pc_initial: State(pc_initial=778 nstack_initial=1)
2025-07-25 09:42:13,492 - DEBUG - dispatch pc=778, inst=NOP(arg=1, lineno=61)
2025-07-25 09:42:13,492 - DEBUG - stack ['$phi778.0']
2025-07-25 09:42:13,492 - DEBUG - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
2025-07-25 09:42:13,492 - DEBUG - stack ['$phi778.0']
2025-07-25 09:42:13,492 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
2025-07-25 09:42:13,492 - DEBUG - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
2025-07-25 09:42:13,492 - DEBUG - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 09:42:13,492 - DEBUG - state.pc_initial: State(pc_initial=648 nstack_initial=3)
2025-07-25 09:42:13,492 - DEBUG - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
2025-07-25 09:42:13,492 - DEBUG - stack ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 09:42:13,493 - DEBUG - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
2025-07-25 09:42:13,493 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 09:42:13,493 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
2025-07-25 09:42:13,493 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
2025-07-25 09:42:13,493 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
2025-07-25 09:42:13,493 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
2025-07-25 09:42:13,493 - DEBUG - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
2025-07-25 09:42:13,493 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
2025-07-25 09:42:13,493 - DEBUG - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
2025-07-25 09:42:13,494 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
2025-07-25 09:42:13,494 - DEBUG - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 09:42:13,494 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
2025-07-25 09:42:13,494 - DEBUG - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-07-25 09:42:13,494 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
2025-07-25 09:42:13,494 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
2025-07-25 09:42:13,494 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
2025-07-25 09:42:13,494 - DEBUG - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
2025-07-25 09:42:13,494 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
2025-07-25 09:42:13,494 - DEBUG - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
2025-07-25 09:42:13,495 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
2025-07-25 09:42:13,495 - DEBUG - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
2025-07-25 09:42:13,495 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
2025-07-25 09:42:13,495 - DEBUG - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
2025-07-25 09:42:13,495 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
2025-07-25 09:42:13,495 - DEBUG - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 09:42:13,495 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
2025-07-25 09:42:13,495 - DEBUG - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
2025-07-25 09:42:13,495 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
2025-07-25 09:42:13,495 - DEBUG - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-07-25 09:42:13,495 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
2025-07-25 09:42:13,495 - DEBUG - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 09:42:13,496 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
2025-07-25 09:42:13,496 - DEBUG - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 09:42:13,496 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
2025-07-25 09:42:13,496 - DEBUG - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
2025-07-25 09:42:13,496 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
2025-07-25 09:42:13,496 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
2025-07-25 09:42:13,496 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 09:42:13,496 - DEBUG - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
2025-07-25 09:42:13,496 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20']
2025-07-25 09:42:13,497 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=66)
2025-07-25 09:42:13,497 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
2025-07-25 09:42:13,497 - DEBUG - dispatch pc=720, inst=COPY(arg=2, lineno=66)
2025-07-25 09:42:13,497 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
2025-07-25 09:42:13,497 - DEBUG - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 09:42:13,497 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
2025-07-25 09:42:13,497 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
2025-07-25 09:42:13,497 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
2025-07-25 09:42:13,497 - DEBUG - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
2025-07-25 09:42:13,497 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
2025-07-25 09:42:13,497 - DEBUG - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
2025-07-25 09:42:13,498 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
2025-07-25 09:42:13,498 - DEBUG - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
2025-07-25 09:42:13,498 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
2025-07-25 09:42:13,498 - DEBUG - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 09:42:13,498 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
2025-07-25 09:42:13,498 - DEBUG - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
2025-07-25 09:42:13,498 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
2025-07-25 09:42:13,498 - DEBUG - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 09:42:13,498 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28.3']
2025-07-25 09:42:13,499 - DEBUG - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 09:42:13,499 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
2025-07-25 09:42:13,499 - DEBUG - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
2025-07-25 09:42:13,499 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
2025-07-25 09:42:13,499 - DEBUG - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
2025-07-25 09:42:13,499 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
2025-07-25 09:42:13,499 - DEBUG - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
2025-07-25 09:42:13,499 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
2025-07-25 09:42:13,499 - DEBUG - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
2025-07-25 09:42:13,499 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
2025-07-25 09:42:13,499 - DEBUG - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-07-25 09:42:13,499 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
2025-07-25 09:42:13,500 - DEBUG - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
2025-07-25 09:42:13,500 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 09:42:13,500 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
2025-07-25 09:42:13,500 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
2025-07-25 09:42:13,500 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2)])
2025-07-25 09:42:13,500 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 09:42:13,500 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
2025-07-25 09:42:13,501 - DEBUG - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
2025-07-25 09:42:13,501 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
2025-07-25 09:42:13,502 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 09:42:13,504 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 09:42:13,505 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 09:42:13,506 - DEBUG - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
2025-07-25 09:42:13,506 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
2025-07-25 09:42:13,507 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 09:42:13,507 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6.1'}), (42, {'value': '$const40.6.1'}), (44, {'res': '$const44.7.2'}), (46, {'value': '$const44.7.2'}), (48, {'res': '$const48.8.1'}), (50, {'value': '$const48.8.1'}), (52, {'res': '$const52.9.1'}), (54, {'value': '$const52.9.1'}), (56, {'res': '$const56.10.2'}), (58, {'value': '$const56.10.2'}), (60, {'res': '$const60.11.1'}), (62, {'value': '$const60.11.1'}), (64, {'res': '$const64.12.1'}), (66, {'value': '$const64.12.1'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15.2'}), (82, {'index': '$const80.15.2', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19.2'}), (108, {'index': '$const106.19.2', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23.2'}), (134, {'index': '$const132.23.2', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
2025-07-25 09:42:13,508 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
2025-07-25 09:42:13,508 - DEBUG - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
2025-07-25 09:42:13,508 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27.3'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27.3', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
2025-07-25 09:42:13,508 - DEBUG - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
2025-07-25 09:42:13,509 - DEBUG - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
2025-07-25 09:42:13,509 - DEBUG - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19.3'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19.3', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
2025-07-25 09:42:13,510 - DEBUG - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
2025-07-25 09:42:13,510 - DEBUG - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28.3'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28.3', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
2025-07-25 09:42:13,511 - DEBUG - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
2025-07-25 09:42:13,511 - DEBUG - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0.0'}), (784, {'retval': '$const782.0.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 09:42:13,513 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15.2 = const(int, 0)            ['$const80.15.2']
    nwin = getitem(value=$70load_attr.14, index=$const80.15.2, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15.2', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19.2 = const(int, 0)           ['$const106.19.2']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19.2, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19.2', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23.2 = const(int, 0)           ['$const132.23.2']
    n_out = getitem(value=$122load_attr.22, index=$const132.23.2, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23.2', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27.3 = const(int, 1)           ['$const308.27.3']
    $binop_add310.28 = n + $const308.27.3    ['$binop_add310.28', '$const308.27.3', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19.3 = const(int, 1)           ['$const580.19.3']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19.3 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19.3']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28.3 = const(int, 1)           ['$const744.28.3']
    $binop_add746.29 = $binop_add740.27 + $const744.28.3 ['$binop_add740.27', '$binop_add746.29', '$const744.28.3']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0.0 = const(NoneType, None)    ['$const782.0.0']
    $784return_value.1 = cast(value=$const782.0.0) ['$784return_value.1', '$const782.0.0']
    return $784return_value.1                ['$784return_value.1']

2025-07-25 09:42:13,543 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 09:42:13,543 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E0AE477550>
2025-07-25 09:42:13,543 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,543 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,543 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,544 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,544 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,544 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,544 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,544 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,544 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,544 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,544 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,544 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,544 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,545 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,545 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,545 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,545 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,545 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,545 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,545 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,545 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,546 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,546 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,546 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,546 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,546 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,547 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,547 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,547 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,547 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,547 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,548 - DEBUG - ==== SSA block analysis pass on 176
2025-07-25 09:42:13,548 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E0AE477550>
2025-07-25 09:42:13,548 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,548 - DEBUG - ==== SSA block analysis pass on 178
2025-07-25 09:42:13,548 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E0AE477550>
2025-07-25 09:42:13,548 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,548 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,549 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,549 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,549 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,549 - DEBUG - ==== SSA block analysis pass on 180
2025-07-25 09:42:13,549 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E0AE477550>
2025-07-25 09:42:13,549 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,550 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,550 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,550 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,550 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 09:42:13,550 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 09:42:13,550 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,550 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,550 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,550 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,551 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,551 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,551 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 09:42:13,551 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 09:42:13,551 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,551 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,551 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,552 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,552 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,552 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,552 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,552 - DEBUG - ==== SSA block analysis pass on 374
2025-07-25 09:42:13,552 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E0AE477550>
2025-07-25 09:42:13,552 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,552 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,552 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,552 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,552 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,553 - DEBUG - ==== SSA block analysis pass on 376
2025-07-25 09:42:13,553 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E0AE477550>
2025-07-25 09:42:13,553 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,553 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,553 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 09:42:13,553 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,553 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,553 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 09:42:13,553 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,553 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,553 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,554 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,554 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 09:42:13,554 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,554 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,554 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,554 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,554 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,554 - DEBUG - ==== SSA block analysis pass on 500
2025-07-25 09:42:13,554 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E0AE477550>
2025-07-25 09:42:13,554 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 09:42:13,555 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 09:42:13,555 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,555 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,555 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,555 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,555 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,555 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 09:42:13,555 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,555 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,555 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 09:42:13,555 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,555 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,556 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,556 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,556 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,556 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,556 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,556 - DEBUG - ==== SSA block analysis pass on 646
2025-07-25 09:42:13,556 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E0AE477550>
2025-07-25 09:42:13,556 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,556 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,556 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,556 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,557 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,557 - DEBUG - ==== SSA block analysis pass on 648
2025-07-25 09:42:13,557 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E0AE477550>
2025-07-25 09:42:13,557 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,557 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,557 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 09:42:13,557 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,557 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,557 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 09:42:13,557 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,558 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,558 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,558 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,558 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 09:42:13,558 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,558 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,558 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,558 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,558 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,558 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,559 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,559 - DEBUG - ==== SSA block analysis pass on 778
2025-07-25 09:42:13,559 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E0AE477550>
2025-07-25 09:42:13,559 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,559 - DEBUG - ==== SSA block analysis pass on 782
2025-07-25 09:42:13,559 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E0AE477550>
2025-07-25 09:42:13,559 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,559 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,559 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,559 - DEBUG - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x000001E0B5126290>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x000001E0B5126AD0>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x000001E0B5126ED0>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x000001E0B5127150>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x000001E0B51271D0>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x000001E0B5127350>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x000001E0B51274D0>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x000001E0B5128110>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x000001E0B5129990>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x000001E0B512A810>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x000001E0B512BE90>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x000001E0B5130390>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x000001E0B5130590>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x000001E0B51292D0>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x000001E0B51286D0>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x000001E0B5129150>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001E0B5131210>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x000001E0B5131F50>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x000001E0B5132950>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x000001E0B5133310>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001E0B5309ED0>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x000001E0B5134150>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x000001E0B5134FD0>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x000001E0B5136990>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x000001E0B5136E10>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x000001E0B5137010>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x000001E0B5134A10>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x000001E0B5134A50>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x000001E0B5135C10>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001E0B5137FD0>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x000001E0B5138F10>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x000001E0B5125090>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x000001E0B5139A90>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x000001E0B513A990>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x000001E0B5138850>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x000001E0B5125910>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x000001E0B512AE90>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x000001E0B5130FD0>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x000001E0B5131D90>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x000001E0B5137DD0>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x000001E0B5138D10>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x000001E0B513A3D0>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x000001E0B513A7D0>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x000001E0B512B7D0>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x000001E0B5136350>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x000001E0B51337D0>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x000001E0B513AE90>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x000001E0B531FFD0>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x000001E0B5130D50>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x000001E0B5131B90>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x000001E0B51321D0>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x000001E0B5133610>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x000001E0B5137B50>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x000001E0B5138A90>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x000001E0B51391D0>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x000001E0B513AC90>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x000001E0B5128E10>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x000001E0B512B3D0>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x000001E0B5133190>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x000001E0B5132610>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x000001E0B5135650>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x000001E0B5135A10>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x000001E0B5135F50>,
                                   500)],
             '$const106.19.2': [(<numba.core.ir.Assign object at 0x000001E0B5125B50>,
                                 0)],
             '$const132.23.2': [(<numba.core.ir.Assign object at 0x000001E0B5126510>,
                                 0)],
             '$const308.27.3': [(<numba.core.ir.Assign object at 0x000001E0B512AC50>,
                                 180)],
             '$const580.19.3': [(<numba.core.ir.Assign object at 0x000001E0B5135810>,
                                 500)],
             '$const744.28.3': [(<numba.core.ir.Assign object at 0x000001E0B513A590>,
                                 648)],
             '$const782.0.0': [(<numba.core.ir.Assign object at 0x000001E0B5139850>,
                                782)],
             '$const80.15.2': [(<numba.core.ir.Assign object at 0x000001E0B5125290>,
                                0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x000001E0B531CA10>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x000001E0B5126090>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x000001E0B51279D0>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x000001E0B51294D0>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x000001E0B5131590>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x000001E0B5136810>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x000001E0B5124850>, 0),
                     (<numba.core.ir.Assign object at 0x000001E0B512A510>, 180),
                     (<numba.core.ir.Assign object at 0x000001E0B5134C90>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x000001E0B511FE90>, 0),
                      (<numba.core.ir.Assign object at 0x000001E0B5129050>,
                       180),
                      (<numba.core.ir.Assign object at 0x000001E0B511A7D0>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x000001E0B512AA90>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x000001E0B512BAD0>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x000001E0B5124210>,
                             0),
                            (<numba.core.ir.Assign object at 0x000001E0B5129710>,
                             180),
                            (<numba.core.ir.Assign object at 0x000001E0B5133E10>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x000001E0B511B190>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000001E0B510CED0>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000001E0B510D290>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x000001E0B5137290>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x000001E0B5136650>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x000001E0B511FC90>, 0),
                   (<numba.core.ir.Assign object at 0x000001E0B5128550>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x000001E0B531F490>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x000001E0B5112610>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000001E0B510F550>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x000001E0B4B588D0>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x000001E0B5124550>,
                         0),
                        (<numba.core.ir.Assign object at 0x000001E0B5129E10>,
                         180),
                        (<numba.core.ir.Assign object at 0x000001E0B5134650>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x000001E0B510C9D0>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x000001E0B5127810>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x000001E0B5110450>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x000001E0B511ACD0>,
                                0),
                               (<numba.core.ir.Assign object at 0x000001E0B5127D90>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x000001E0B5124B90>,
                         0),
                        (<numba.core.ir.Assign object at 0x000001E0B51323D0>,
                         376),
                        (<numba.core.ir.Assign object at 0x000001E0B51393D0>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x000001E0B5111350>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001E0B5306C10>, 0)]})
2025-07-25 09:42:13,566 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001E0B4B7EC50>
2025-07-25 09:42:13,566 - DEBUG - Fix SSA violator on var time_register
2025-07-25 09:42:13,566 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,566 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B503AF50>
2025-07-25 09:42:13,566 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,567 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,567 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,567 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,567 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,567 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,567 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,567 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,567 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,567 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,567 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,567 - DEBUG - first assign: time_register
2025-07-25 09:42:13,568 - DEBUG - replaced with: time_register = const(float, 0.0)
2025-07-25 09:42:13,568 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,568 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,568 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,568 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,568 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,568 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,568 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,568 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,568 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,568 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,569 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,569 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,569 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,569 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,569 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,569 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,569 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,569 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,569 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,569 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,570 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,570 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B503AF50>
2025-07-25 09:42:13,570 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,570 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,570 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B503AF50>
2025-07-25 09:42:13,570 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,570 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,570 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,570 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,570 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,570 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,570 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B503AF50>
2025-07-25 09:42:13,571 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,571 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,571 - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,571 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,571 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,571 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 09:42:13,571 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 09:42:13,571 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,571 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,571 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,571 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,571 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,572 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,572 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 09:42:13,572 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 09:42:13,572 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,572 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,572 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,572 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,572 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,572 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,572 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,572 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,573 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B503AF50>
2025-07-25 09:42:13,573 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,573 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,573 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,573 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,573 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,573 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,573 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B503AF50>
2025-07-25 09:42:13,573 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,573 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,574 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 09:42:13,574 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,574 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,574 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 09:42:13,574 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,574 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,574 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,574 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,574 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 09:42:13,574 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,574 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,575 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,575 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,575 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,575 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,575 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B503AF50>
2025-07-25 09:42:13,575 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 09:42:13,575 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 09:42:13,575 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,575 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,575 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,575 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,575 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,576 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 09:42:13,576 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,576 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,576 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 09:42:13,576 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,576 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,576 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,576 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,576 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,576 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,576 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,576 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,576 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B503AF50>
2025-07-25 09:42:13,577 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,577 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,577 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,577 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,577 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,577 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,577 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B503AF50>
2025-07-25 09:42:13,577 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,577 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,577 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 09:42:13,577 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,578 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,578 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 09:42:13,578 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,578 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,578 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,578 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,578 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 09:42:13,578 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,578 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,578 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,578 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,578 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,579 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,579 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,579 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,579 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B503AF50>
2025-07-25 09:42:13,579 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,579 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,579 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B503AF50>
2025-07-25 09:42:13,579 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,579 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,580 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,580 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E0B5038C10>],
             180: [<numba.core.ir.Assign object at 0x000001E0B511B810>]})
2025-07-25 09:42:13,580 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,580 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5118150>
2025-07-25 09:42:13,580 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,580 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,580 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,580 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,580 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,580 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,581 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,581 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,581 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,581 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,581 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,581 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,581 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,581 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,581 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,581 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,581 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,581 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,582 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,582 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,582 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,582 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,582 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,582 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,582 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,582 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,582 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,582 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,582 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,582 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,583 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,583 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,583 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5118150>
2025-07-25 09:42:13,583 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,583 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,583 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5118150>
2025-07-25 09:42:13,583 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,583 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,583 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,584 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,584 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,584 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,584 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5118150>
2025-07-25 09:42:13,584 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,584 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,584 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,584 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,584 - DEBUG - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,584 - DEBUG - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,585 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 09:42:13,585 - DEBUG - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
2025-07-25 09:42:13,585 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n
2025-07-25 09:42:13,585 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 09:42:13,585 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,585 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,585 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,585 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,585 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,586 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,586 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 09:42:13,586 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 09:42:13,586 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,586 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,586 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,586 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,586 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,586 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,586 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,586 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,587 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5118150>
2025-07-25 09:42:13,587 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,587 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,587 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,587 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,587 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,587 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,587 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5118150>
2025-07-25 09:42:13,587 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,587 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,587 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 09:42:13,587 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,587 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,588 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 09:42:13,588 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,588 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,588 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,588 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,588 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 09:42:13,588 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,588 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,588 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,589 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,589 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,589 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,589 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5118150>
2025-07-25 09:42:13,589 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 09:42:13,589 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 09:42:13,589 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,589 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,589 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,589 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,590 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,590 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 09:42:13,590 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,590 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,590 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 09:42:13,590 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,590 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,590 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,590 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,590 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,590 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,590 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,591 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,591 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5118150>
2025-07-25 09:42:13,591 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,591 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,591 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,591 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,591 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,591 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,591 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5118150>
2025-07-25 09:42:13,591 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,591 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,592 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 09:42:13,592 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,592 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,592 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 09:42:13,592 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,592 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,592 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,592 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,592 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 09:42:13,592 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,592 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,592 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,593 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,593 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,593 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,593 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,593 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,593 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5118150>
2025-07-25 09:42:13,593 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,593 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,593 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5118150>
2025-07-25 09:42:13,594 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,594 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,594 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,594 - DEBUG - Fix SSA violator on var n
2025-07-25 09:42:13,594 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,594 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B5306690>
2025-07-25 09:42:13,594 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,594 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,594 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,594 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,594 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,595 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,595 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,595 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,595 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,595 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,595 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,595 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,595 - DEBUG - first assign: n
2025-07-25 09:42:13,595 - DEBUG - replaced with: n = const(int, 0)
2025-07-25 09:42:13,595 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,595 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,595 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,595 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,595 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,596 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,596 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,596 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,596 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,596 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,596 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,596 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,596 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,596 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,596 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,596 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,596 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,597 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,597 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,597 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B5306690>
2025-07-25 09:42:13,597 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,597 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B5306690>
2025-07-25 09:42:13,597 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,597 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,597 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,597 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,597 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,598 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,598 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B5306690>
2025-07-25 09:42:13,598 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,598 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,598 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,598 - DEBUG - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,598 - DEBUG - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,598 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 09:42:13,598 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 09:42:13,599 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,599 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,599 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,599 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,599 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,599 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,599 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 09:42:13,599 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 09:42:13,599 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,599 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,600 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,600 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,600 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,600 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,600 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,600 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,600 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B5306690>
2025-07-25 09:42:13,600 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,600 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,600 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,600 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,600 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,601 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,601 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B5306690>
2025-07-25 09:42:13,601 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,601 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,601 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 09:42:13,601 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,601 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,601 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 09:42:13,601 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,601 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,601 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,601 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,602 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 09:42:13,602 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,602 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,602 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,602 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,602 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,602 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,602 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B5306690>
2025-07-25 09:42:13,602 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 09:42:13,602 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 09:42:13,603 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,603 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,603 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,603 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,603 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,603 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 09:42:13,603 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,603 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,603 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 09:42:13,603 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,604 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,604 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,604 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,604 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,604 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,604 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,604 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,604 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B5306690>
2025-07-25 09:42:13,604 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,605 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,605 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,605 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,605 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,605 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,605 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B5306690>
2025-07-25 09:42:13,605 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,605 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,605 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 09:42:13,605 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,605 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,606 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 09:42:13,606 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,606 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,606 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,606 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,606 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 09:42:13,606 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,606 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,606 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,607 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,607 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,607 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,607 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,607 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,607 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B5306690>
2025-07-25 09:42:13,607 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,607 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,607 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B5306690>
2025-07-25 09:42:13,607 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,608 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,608 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,608 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E0B4FCE410>],
             180: [<numba.core.ir.Assign object at 0x000001E0B5118590>]})
2025-07-25 09:42:13,608 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,608 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B4FF91D0>
2025-07-25 09:42:13,608 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,609 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,609 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,609 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,609 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,609 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,609 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,609 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,609 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,609 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,609 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,609 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,610 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,610 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,610 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,610 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,610 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,610 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,611 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,611 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,611 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,611 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,611 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,611 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,611 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,611 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,611 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,611 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,611 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,612 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,612 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,612 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,612 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B4FF91D0>
2025-07-25 09:42:13,612 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,612 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,612 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B4FF91D0>
2025-07-25 09:42:13,612 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,612 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,612 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,612 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,612 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,612 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,613 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B4FF91D0>
2025-07-25 09:42:13,613 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,613 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,613 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,613 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,613 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 09:42:13,613 - DEBUG - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
2025-07-25 09:42:13,613 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 09:42:13,614 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 09:42:13,614 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,614 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,614 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,614 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,614 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,614 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,614 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 09:42:13,615 - DEBUG - find_def var='n' stmt=$binop_add310.28 = n + $const308.27.3
2025-07-25 09:42:13,615 - DEBUG - replaced with: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 09:42:13,615 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 09:42:13,615 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,615 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,615 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,615 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,616 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,616 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,616 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,616 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,616 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B4FF91D0>
2025-07-25 09:42:13,616 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,616 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,616 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,616 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,616 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,616 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,616 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B4FF91D0>
2025-07-25 09:42:13,616 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,616 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,616 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 09:42:13,617 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,617 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,617 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 09:42:13,617 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,617 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,617 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,617 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,617 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 09:42:13,617 - DEBUG - find_def var='n' stmt=$binop_sub468.27 = n - i
2025-07-25 09:42:13,617 - DEBUG - find_def_from_top label 376
2025-07-25 09:42:13,617 - DEBUG - idom 374 from label 376
2025-07-25 09:42:13,617 - DEBUG - find_def_from_bottom label 374
2025-07-25 09:42:13,617 - DEBUG - find_def_from_top label 374
2025-07-25 09:42:13,618 - DEBUG - idom 180 from label 374
2025-07-25 09:42:13,618 - DEBUG - find_def_from_bottom label 180
2025-07-25 09:42:13,618 - DEBUG - replaced with: $binop_sub468.27 = n.1 - i
2025-07-25 09:42:13,618 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,618 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,618 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,618 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,618 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,618 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,619 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B4FF91D0>
2025-07-25 09:42:13,619 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 09:42:13,619 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 09:42:13,619 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,619 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,619 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,619 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,619 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,620 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 09:42:13,620 - DEBUG - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
2025-07-25 09:42:13,620 - DEBUG - find_def_from_top label 500
2025-07-25 09:42:13,620 - DEBUG - idom 374 from label 500
2025-07-25 09:42:13,620 - DEBUG - find_def_from_bottom label 374
2025-07-25 09:42:13,620 - DEBUG - find_def_from_top label 374
2025-07-25 09:42:13,620 - DEBUG - idom 180 from label 374
2025-07-25 09:42:13,620 - DEBUG - find_def_from_bottom label 180
2025-07-25 09:42:13,620 - DEBUG - replaced with: $binop_sub576.18 = n_orig - n.1
2025-07-25 09:42:13,620 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,620 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,620 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 09:42:13,621 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,621 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,621 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,621 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,621 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,621 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,621 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,621 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,621 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B4FF91D0>
2025-07-25 09:42:13,622 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,622 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,622 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,622 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,622 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,622 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B4FF91D0>
2025-07-25 09:42:13,622 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,622 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,622 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 09:42:13,623 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,623 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,623 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 09:42:13,623 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,623 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,623 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,623 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,623 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 09:42:13,624 - DEBUG - find_def var='n' stmt=$binop_add740.27 = n + k
2025-07-25 09:42:13,624 - DEBUG - find_def_from_top label 648
2025-07-25 09:42:13,624 - DEBUG - idom 646 from label 648
2025-07-25 09:42:13,624 - DEBUG - find_def_from_bottom label 646
2025-07-25 09:42:13,624 - DEBUG - find_def_from_top label 646
2025-07-25 09:42:13,624 - DEBUG - idom 500 from label 646
2025-07-25 09:42:13,624 - DEBUG - find_def_from_bottom label 500
2025-07-25 09:42:13,624 - DEBUG - find_def_from_top label 500
2025-07-25 09:42:13,624 - DEBUG - idom 374 from label 500
2025-07-25 09:42:13,624 - DEBUG - find_def_from_bottom label 374
2025-07-25 09:42:13,624 - DEBUG - find_def_from_top label 374
2025-07-25 09:42:13,624 - DEBUG - idom 180 from label 374
2025-07-25 09:42:13,624 - DEBUG - find_def_from_bottom label 180
2025-07-25 09:42:13,624 - DEBUG - replaced with: $binop_add740.27 = n.1 + k
2025-07-25 09:42:13,625 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,625 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,625 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,625 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,625 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,625 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,625 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,625 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,625 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B4FF91D0>
2025-07-25 09:42:13,625 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,625 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,625 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B4FF91D0>
2025-07-25 09:42:13,625 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,626 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,626 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,626 - DEBUG - Fix SSA violator on var frac
2025-07-25 09:42:13,626 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,626 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511F710>
2025-07-25 09:42:13,626 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,626 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,626 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,626 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,626 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,626 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,626 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,626 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,626 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,627 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,627 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,627 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,627 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,627 - DEBUG - first assign: frac
2025-07-25 09:42:13,627 - DEBUG - replaced with: frac = const(float, 0.0)
2025-07-25 09:42:13,627 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,627 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,627 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,627 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,628 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,628 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,628 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,628 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,628 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,628 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,628 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,628 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,628 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,629 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,629 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,629 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,629 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,629 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,629 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,629 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511F710>
2025-07-25 09:42:13,629 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,629 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,629 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511F710>
2025-07-25 09:42:13,629 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,630 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,630 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,630 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,630 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,630 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,630 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511F710>
2025-07-25 09:42:13,630 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,630 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,630 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,630 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,631 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 09:42:13,631 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 09:42:13,631 - DEBUG - replaced with: frac.1 = scale * $binop_sub234.12
2025-07-25 09:42:13,631 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,631 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,631 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,631 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,631 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,631 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,631 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 09:42:13,632 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 09:42:13,632 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,632 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,632 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,632 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,632 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,632 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,632 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,632 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,632 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511F710>
2025-07-25 09:42:13,632 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,632 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,633 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,633 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,633 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,633 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,633 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511F710>
2025-07-25 09:42:13,633 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,633 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,634 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 09:42:13,634 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,634 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,634 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 09:42:13,634 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,634 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,634 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,634 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,634 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 09:42:13,634 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,634 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,635 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,635 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,635 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,635 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511F710>
2025-07-25 09:42:13,635 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 09:42:13,635 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 09:42:13,635 - DEBUG - replaced with: frac.2 = $binop_sub504.3
2025-07-25 09:42:13,635 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,636 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,636 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,636 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,636 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,636 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 09:42:13,636 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,636 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,636 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 09:42:13,636 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,636 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,636 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,637 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,637 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,637 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,637 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,637 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,637 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511F710>
2025-07-25 09:42:13,637 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,637 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,637 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,637 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,637 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,637 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,638 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511F710>
2025-07-25 09:42:13,638 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,638 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,638 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 09:42:13,638 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,638 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,638 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 09:42:13,638 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,638 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,638 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,639 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,639 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 09:42:13,639 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,639 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,639 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,639 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,639 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,639 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,640 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,640 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,640 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511F710>
2025-07-25 09:42:13,640 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,640 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,640 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511F710>
2025-07-25 09:42:13,640 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,641 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,641 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,641 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E0B511F410>],
             180: [<numba.core.ir.Assign object at 0x000001E0B511B8D0>],
             500: [<numba.core.ir.Assign object at 0x000001E0B5110A90>]})
2025-07-25 09:42:13,641 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,641 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B510F050>
2025-07-25 09:42:13,641 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,641 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,641 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,642 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,642 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,642 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,642 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,642 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,642 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,642 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,642 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,642 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,642 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,642 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,642 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,643 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,643 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,643 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,643 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,643 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,643 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,643 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,643 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,643 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,644 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,644 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,644 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,644 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,644 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,644 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,644 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,644 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,644 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B510F050>
2025-07-25 09:42:13,644 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,645 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B510F050>
2025-07-25 09:42:13,645 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,645 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,645 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,645 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,645 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,645 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,645 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B510F050>
2025-07-25 09:42:13,645 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,645 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,645 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,645 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,646 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 09:42:13,646 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 09:42:13,646 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,646 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 09:42:13,646 - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-07-25 09:42:13,646 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,646 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,646 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,646 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,646 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,646 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 09:42:13,646 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 09:42:13,647 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,647 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,647 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,647 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,647 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,647 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,647 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,647 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,647 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B510F050>
2025-07-25 09:42:13,648 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,648 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,648 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,648 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,648 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,648 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,648 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B510F050>
2025-07-25 09:42:13,648 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,648 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,648 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 09:42:13,649 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,649 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,649 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 09:42:13,649 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,649 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,649 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,649 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,649 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 09:42:13,649 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,649 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,649 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,650 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,650 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,650 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,650 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B510F050>
2025-07-25 09:42:13,650 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 09:42:13,650 - DEBUG - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
2025-07-25 09:42:13,650 - DEBUG - find_def_from_top label 500
2025-07-25 09:42:13,650 - DEBUG - idom 374 from label 500
2025-07-25 09:42:13,650 - DEBUG - find_def_from_bottom label 374
2025-07-25 09:42:13,650 - DEBUG - find_def_from_top label 374
2025-07-25 09:42:13,650 - DEBUG - idom 180 from label 374
2025-07-25 09:42:13,650 - DEBUG - find_def_from_bottom label 180
2025-07-25 09:42:13,650 - DEBUG - replaced with: $binop_sub504.3 = scale - frac.1
2025-07-25 09:42:13,650 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 09:42:13,651 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 09:42:13,651 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 09:42:13,651 - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-07-25 09:42:13,651 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,651 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,651 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,651 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,651 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 09:42:13,651 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,651 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,652 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 09:42:13,652 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,652 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,652 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,652 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,652 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,652 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,652 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,652 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B510F050>
2025-07-25 09:42:13,652 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,652 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,653 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,653 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,653 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,653 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,653 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B510F050>
2025-07-25 09:42:13,653 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,653 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,653 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 09:42:13,653 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,653 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,653 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 09:42:13,654 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,654 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,654 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,654 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,654 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 09:42:13,654 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,654 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,654 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,654 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,654 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,654 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,655 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,655 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B510F050>
2025-07-25 09:42:13,655 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,655 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B510F050>
2025-07-25 09:42:13,655 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,655 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,655 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,655 - DEBUG - Fix SSA violator on var index_frac
2025-07-25 09:42:13,655 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,655 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B48B4890>
2025-07-25 09:42:13,655 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,655 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,656 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,656 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,656 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,656 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,656 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,656 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,656 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,656 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,656 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,656 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,656 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,657 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,657 - DEBUG - first assign: index_frac
2025-07-25 09:42:13,657 - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-07-25 09:42:13,657 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,657 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,657 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,657 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,657 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,657 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,657 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,657 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,657 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,657 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,657 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,658 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,658 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,658 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,658 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,658 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,658 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,658 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,658 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B48B4890>
2025-07-25 09:42:13,658 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,658 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,658 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B48B4890>
2025-07-25 09:42:13,658 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,659 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,659 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,659 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,659 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,659 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,659 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B48B4890>
2025-07-25 09:42:13,659 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,659 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,659 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,659 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,660 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 09:42:13,660 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 09:42:13,660 - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-07-25 09:42:13,660 - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-07-25 09:42:13,660 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,660 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,660 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,660 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,660 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,660 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 09:42:13,660 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 09:42:13,660 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,660 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,661 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,661 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,661 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,661 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,661 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,661 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,661 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B48B4890>
2025-07-25 09:42:13,661 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,661 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,661 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,661 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,661 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,661 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B48B4890>
2025-07-25 09:42:13,662 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,662 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,662 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 09:42:13,662 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,662 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,662 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 09:42:13,662 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,662 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,662 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,662 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,662 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 09:42:13,663 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,663 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,663 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,663 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,663 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,663 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,663 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B48B4890>
2025-07-25 09:42:13,663 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 09:42:13,663 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 09:42:13,664 - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-07-25 09:42:13,664 - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-07-25 09:42:13,664 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,664 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,664 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,664 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,664 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 09:42:13,664 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,665 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,665 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 09:42:13,665 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,665 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,665 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,665 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,665 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,665 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,665 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,665 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,665 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B48B4890>
2025-07-25 09:42:13,665 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,665 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,666 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,666 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,666 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,666 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,666 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B48B4890>
2025-07-25 09:42:13,666 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,666 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,666 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 09:42:13,666 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,666 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,666 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 09:42:13,666 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,666 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,666 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,666 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,667 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 09:42:13,667 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,667 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,667 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,667 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,667 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,667 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,667 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,667 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,667 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B48B4890>
2025-07-25 09:42:13,667 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,667 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,667 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B48B4890>
2025-07-25 09:42:13,668 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,668 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,668 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,668 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E0B51182D0>],
             180: [<numba.core.ir.Assign object at 0x000001E0B5112F50>],
             500: [<numba.core.ir.Assign object at 0x000001E0B5113690>]})
2025-07-25 09:42:13,668 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,668 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511D110>
2025-07-25 09:42:13,668 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,668 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,668 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,669 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,669 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,669 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,669 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,669 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,669 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,669 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,669 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,669 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,669 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,669 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,670 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,670 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,670 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,670 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,670 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,670 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,670 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,670 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,670 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,670 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,670 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,670 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,670 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,670 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,671 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,671 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,671 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,671 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,671 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511D110>
2025-07-25 09:42:13,671 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,671 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,671 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511D110>
2025-07-25 09:42:13,671 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,671 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,671 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,671 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,672 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,672 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,672 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511D110>
2025-07-25 09:42:13,672 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,672 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,672 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,672 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,672 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 09:42:13,672 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 09:42:13,672 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 09:42:13,672 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,672 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,673 - DEBUG - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,673 - DEBUG - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,673 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,673 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 09:42:13,673 - DEBUG - replaced with: eta = index_frac.1 - offset
2025-07-25 09:42:13,673 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,673 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,674 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 09:42:13,674 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 09:42:13,674 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,674 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,674 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,674 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,674 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,674 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,674 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,674 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,675 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511D110>
2025-07-25 09:42:13,675 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,675 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,675 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,675 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,675 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,675 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,675 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511D110>
2025-07-25 09:42:13,675 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,675 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,675 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 09:42:13,675 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,675 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,675 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 09:42:13,676 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,676 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,676 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,676 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,676 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 09:42:13,676 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,676 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,676 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,676 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,676 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,676 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,677 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511D110>
2025-07-25 09:42:13,677 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 09:42:13,677 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 09:42:13,677 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 09:42:13,677 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,677 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,677 - DEBUG - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,677 - DEBUG - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,677 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 09:42:13,677 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 09:42:13,678 - DEBUG - replaced with: eta = index_frac.2 - offset
2025-07-25 09:42:13,678 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,678 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 09:42:13,678 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,678 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,678 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 09:42:13,678 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,678 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,678 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,678 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,679 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,679 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,679 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,679 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,679 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511D110>
2025-07-25 09:42:13,679 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,679 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,679 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,679 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,680 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,680 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,680 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511D110>
2025-07-25 09:42:13,680 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,680 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,680 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 09:42:13,680 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,680 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,680 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 09:42:13,680 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,680 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,680 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,680 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,680 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 09:42:13,680 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,681 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,681 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,681 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,681 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,681 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,681 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,681 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,681 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511D110>
2025-07-25 09:42:13,681 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,681 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,681 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511D110>
2025-07-25 09:42:13,682 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,682 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,682 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,682 - DEBUG - Fix SSA violator on var offset
2025-07-25 09:42:13,682 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,682 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511A110>
2025-07-25 09:42:13,682 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,682 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,682 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,682 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,682 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,682 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,682 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,682 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,682 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,683 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,683 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,683 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,683 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,683 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,683 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,683 - DEBUG - first assign: offset
2025-07-25 09:42:13,683 - DEBUG - replaced with: offset = const(int, 0)
2025-07-25 09:42:13,683 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,684 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,684 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,684 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,684 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,684 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,684 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,684 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,684 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,684 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,685 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,685 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,685 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,685 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,685 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,685 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,686 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,686 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511A110>
2025-07-25 09:42:13,686 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,686 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,686 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511A110>
2025-07-25 09:42:13,686 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,686 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,686 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,687 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,687 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,687 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,687 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511A110>
2025-07-25 09:42:13,687 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,687 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,687 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,687 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,687 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 09:42:13,687 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 09:42:13,687 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 09:42:13,688 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,688 - DEBUG - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,688 - DEBUG - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,688 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 09:42:13,688 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,688 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,688 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 09:42:13,688 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 09:42:13,688 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,688 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,689 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,689 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,689 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,689 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,689 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,689 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,689 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511A110>
2025-07-25 09:42:13,689 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,689 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,689 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,689 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,690 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,690 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,690 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511A110>
2025-07-25 09:42:13,690 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,690 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,690 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 09:42:13,690 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,690 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,690 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 09:42:13,690 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,690 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,690 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,690 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,690 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 09:42:13,691 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,691 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,691 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,691 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,691 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,691 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,691 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511A110>
2025-07-25 09:42:13,691 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 09:42:13,691 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 09:42:13,691 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 09:42:13,691 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,691 - DEBUG - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,692 - DEBUG - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,692 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 09:42:13,692 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,692 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 09:42:13,692 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,692 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,692 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 09:42:13,692 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,692 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,692 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,692 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,692 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,693 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,693 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,693 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,693 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511A110>
2025-07-25 09:42:13,693 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,693 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,693 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,693 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,694 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,694 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,694 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511A110>
2025-07-25 09:42:13,694 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,694 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,694 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 09:42:13,694 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,694 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,695 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 09:42:13,695 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,695 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,695 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,695 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,695 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 09:42:13,695 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,695 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,696 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,696 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,696 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,696 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,696 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,696 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,696 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511A110>
2025-07-25 09:42:13,696 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,696 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,696 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B511A110>
2025-07-25 09:42:13,696 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,696 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,697 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,697 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E0B530A010>],
             180: [<numba.core.ir.Assign object at 0x000001E0B5113DD0>],
             500: [<numba.core.ir.Assign object at 0x000001E0B5112190>]})
2025-07-25 09:42:13,697 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,697 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B531C310>
2025-07-25 09:42:13,697 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,697 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,697 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,697 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,697 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,697 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,698 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,698 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,698 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,698 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,698 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,698 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,698 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,698 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,699 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,699 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,699 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,699 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,699 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,699 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,699 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,699 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,699 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,699 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,700 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,700 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,700 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,700 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,700 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,700 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,700 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,700 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,700 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B531C310>
2025-07-25 09:42:13,700 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,700 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,700 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B531C310>
2025-07-25 09:42:13,700 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,701 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,701 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,701 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,701 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,701 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,701 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B531C310>
2025-07-25 09:42:13,701 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,701 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,701 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,701 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,701 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 09:42:13,701 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 09:42:13,702 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 09:42:13,702 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,702 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,702 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 09:42:13,702 - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-07-25 09:42:13,702 - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-07-25 09:42:13,702 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,702 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,702 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 09:42:13,702 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 09:42:13,703 - DEBUG - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
2025-07-25 09:42:13,703 - DEBUG - replaced with: $binop_sub318.31 = nwin - offset.1
2025-07-25 09:42:13,703 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,703 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,703 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,703 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,703 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,703 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,703 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,704 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,704 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B531C310>
2025-07-25 09:42:13,704 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,704 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,704 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,704 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,704 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,704 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,704 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B531C310>
2025-07-25 09:42:13,704 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,704 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,704 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 09:42:13,704 - DEBUG - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
2025-07-25 09:42:13,705 - DEBUG - find_def_from_top label 376
2025-07-25 09:42:13,705 - DEBUG - idom 374 from label 376
2025-07-25 09:42:13,705 - DEBUG - find_def_from_bottom label 374
2025-07-25 09:42:13,705 - DEBUG - find_def_from_top label 374
2025-07-25 09:42:13,705 - DEBUG - idom 180 from label 374
2025-07-25 09:42:13,705 - DEBUG - find_def_from_bottom label 180
2025-07-25 09:42:13,705 - DEBUG - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 09:42:13,705 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,705 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,705 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 09:42:13,705 - DEBUG - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
2025-07-25 09:42:13,705 - DEBUG - find_def_from_top label 376
2025-07-25 09:42:13,705 - DEBUG - idom 374 from label 376
2025-07-25 09:42:13,705 - DEBUG - find_def_from_bottom label 374
2025-07-25 09:42:13,706 - DEBUG - find_def_from_top label 374
2025-07-25 09:42:13,706 - DEBUG - idom 180 from label 374
2025-07-25 09:42:13,706 - DEBUG - find_def_from_bottom label 180
2025-07-25 09:42:13,706 - DEBUG - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 09:42:13,706 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,706 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,706 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,706 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,707 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 09:42:13,707 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,707 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,707 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,707 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,707 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,707 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,707 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B531C310>
2025-07-25 09:42:13,707 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 09:42:13,707 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 09:42:13,707 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 09:42:13,708 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,708 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,708 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 09:42:13,708 - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-07-25 09:42:13,708 - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-07-25 09:42:13,708 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,708 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 09:42:13,708 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,708 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,708 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 09:42:13,708 - DEBUG - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
2025-07-25 09:42:13,709 - DEBUG - replaced with: $binop_sub590.23 = nwin - offset.2
2025-07-25 09:42:13,709 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,709 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,709 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,709 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,709 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,709 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,709 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,709 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,709 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B531C310>
2025-07-25 09:42:13,709 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,710 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,710 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,710 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,710 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,710 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,710 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B531C310>
2025-07-25 09:42:13,710 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,710 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,711 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 09:42:13,711 - DEBUG - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
2025-07-25 09:42:13,711 - DEBUG - find_def_from_top label 648
2025-07-25 09:42:13,711 - DEBUG - idom 646 from label 648
2025-07-25 09:42:13,711 - DEBUG - find_def_from_bottom label 646
2025-07-25 09:42:13,711 - DEBUG - find_def_from_top label 646
2025-07-25 09:42:13,711 - DEBUG - idom 500 from label 646
2025-07-25 09:42:13,711 - DEBUG - find_def_from_bottom label 500
2025-07-25 09:42:13,711 - DEBUG - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 09:42:13,711 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,711 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,712 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 09:42:13,712 - DEBUG - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
2025-07-25 09:42:13,712 - DEBUG - find_def_from_top label 648
2025-07-25 09:42:13,712 - DEBUG - idom 646 from label 648
2025-07-25 09:42:13,712 - DEBUG - find_def_from_bottom label 646
2025-07-25 09:42:13,712 - DEBUG - find_def_from_top label 646
2025-07-25 09:42:13,712 - DEBUG - idom 500 from label 646
2025-07-25 09:42:13,712 - DEBUG - find_def_from_bottom label 500
2025-07-25 09:42:13,712 - DEBUG - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 09:42:13,712 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,712 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,712 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,713 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,713 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 09:42:13,713 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,713 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,713 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,713 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,713 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,713 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,713 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,714 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,714 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B531C310>
2025-07-25 09:42:13,714 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,714 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,714 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B531C310>
2025-07-25 09:42:13,714 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,714 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,714 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,714 - DEBUG - Fix SSA violator on var eta
2025-07-25 09:42:13,715 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,715 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51111D0>
2025-07-25 09:42:13,715 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,715 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,715 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,715 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,715 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,715 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,715 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,715 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,715 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,715 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,716 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,716 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,716 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,716 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,716 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,716 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,716 - DEBUG - first assign: eta
2025-07-25 09:42:13,716 - DEBUG - replaced with: eta = const(float, 0.0)
2025-07-25 09:42:13,716 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,716 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,716 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,716 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,716 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,716 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,716 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,717 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,717 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,717 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,717 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,717 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,717 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,717 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,717 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,717 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,717 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51111D0>
2025-07-25 09:42:13,717 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,717 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,717 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51111D0>
2025-07-25 09:42:13,718 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,718 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,718 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,718 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,718 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,718 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,718 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51111D0>
2025-07-25 09:42:13,718 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,719 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,719 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,719 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,719 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 09:42:13,719 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 09:42:13,719 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 09:42:13,719 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,719 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,719 - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-07-25 09:42:13,719 - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-07-25 09:42:13,719 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,720 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,720 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 09:42:13,720 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 09:42:13,720 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,720 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,720 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,720 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,720 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,720 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,720 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,720 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,720 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51111D0>
2025-07-25 09:42:13,720 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,721 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,721 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,721 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,721 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,721 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,721 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51111D0>
2025-07-25 09:42:13,721 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,721 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,721 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 09:42:13,721 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,721 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,721 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 09:42:13,721 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,721 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,722 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,722 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,722 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 09:42:13,722 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,722 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,722 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,722 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,722 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,722 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,722 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51111D0>
2025-07-25 09:42:13,722 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 09:42:13,722 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 09:42:13,723 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 09:42:13,723 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,723 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,723 - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-07-25 09:42:13,723 - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-07-25 09:42:13,723 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,723 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 09:42:13,723 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,723 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,724 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 09:42:13,724 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,724 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,724 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,724 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,724 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,724 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,724 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,724 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,724 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51111D0>
2025-07-25 09:42:13,724 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,724 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,724 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,725 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,725 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,725 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,725 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51111D0>
2025-07-25 09:42:13,725 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,725 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,725 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 09:42:13,725 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,725 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,725 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 09:42:13,725 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,725 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,725 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,725 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,726 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 09:42:13,726 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,726 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,726 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,726 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,726 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,726 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,726 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,726 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,726 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51111D0>
2025-07-25 09:42:13,726 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,726 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,727 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51111D0>
2025-07-25 09:42:13,727 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,727 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,727 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,727 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E0B5112110>],
             180: [<numba.core.ir.Assign object at 0x000001E0B5111750>],
             500: [<numba.core.ir.Assign object at 0x000001E0B51293D0>]})
2025-07-25 09:42:13,727 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,727 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511CA90>
2025-07-25 09:42:13,728 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,728 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,728 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,728 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,728 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,728 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,728 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,728 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,728 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,728 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,728 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,729 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,729 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,729 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,729 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,729 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,729 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,729 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,729 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,729 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,729 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,729 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,729 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,730 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,730 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,730 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,730 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,730 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,730 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,730 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,730 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,730 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,730 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511CA90>
2025-07-25 09:42:13,730 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,730 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,730 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511CA90>
2025-07-25 09:42:13,731 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,731 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,731 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,731 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,731 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,731 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,731 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511CA90>
2025-07-25 09:42:13,731 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,732 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,732 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,732 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,732 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 09:42:13,732 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 09:42:13,732 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 09:42:13,732 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,732 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,732 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 09:42:13,732 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,732 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,732 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 09:42:13,733 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 09:42:13,733 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,733 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,733 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,733 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,733 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,733 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,733 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,733 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,734 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511CA90>
2025-07-25 09:42:13,734 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,734 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,734 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,734 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,734 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,734 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,734 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511CA90>
2025-07-25 09:42:13,734 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,734 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,734 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 09:42:13,734 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,734 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,735 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 09:42:13,735 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,735 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,735 - DEBUG - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 09:42:13,735 - DEBUG - find_def_from_top label 376
2025-07-25 09:42:13,735 - DEBUG - idom 374 from label 376
2025-07-25 09:42:13,735 - DEBUG - find_def_from_bottom label 374
2025-07-25 09:42:13,735 - DEBUG - find_def_from_top label 374
2025-07-25 09:42:13,735 - DEBUG - idom 180 from label 374
2025-07-25 09:42:13,735 - DEBUG - find_def_from_bottom label 180
2025-07-25 09:42:13,736 - DEBUG - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 09:42:13,736 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,736 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,736 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 09:42:13,736 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,736 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,736 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,736 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,736 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,736 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,736 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511CA90>
2025-07-25 09:42:13,737 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 09:42:13,737 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 09:42:13,737 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 09:42:13,737 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,737 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,737 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 09:42:13,737 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,737 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 09:42:13,737 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,737 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,737 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 09:42:13,737 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,737 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,738 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,738 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,738 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,738 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,738 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,738 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,738 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511CA90>
2025-07-25 09:42:13,738 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,738 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,738 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,738 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,738 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,739 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,739 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511CA90>
2025-07-25 09:42:13,739 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,739 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,739 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 09:42:13,739 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,739 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,739 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 09:42:13,739 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,740 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,740 - DEBUG - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 09:42:13,740 - DEBUG - find_def_from_top label 648
2025-07-25 09:42:13,740 - DEBUG - idom 646 from label 648
2025-07-25 09:42:13,740 - DEBUG - find_def_from_bottom label 646
2025-07-25 09:42:13,740 - DEBUG - find_def_from_top label 646
2025-07-25 09:42:13,740 - DEBUG - idom 500 from label 646
2025-07-25 09:42:13,740 - DEBUG - find_def_from_bottom label 500
2025-07-25 09:42:13,740 - DEBUG - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 09:42:13,741 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,741 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,741 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 09:42:13,741 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,741 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,741 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,741 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,741 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,741 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,741 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,741 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,741 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511CA90>
2025-07-25 09:42:13,741 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,741 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,742 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B511CA90>
2025-07-25 09:42:13,742 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,742 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,742 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,742 - DEBUG - Fix SSA violator on var weight
2025-07-25 09:42:13,742 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,742 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51106D0>
2025-07-25 09:42:13,742 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,742 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,742 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,742 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,742 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,742 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,743 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,743 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,743 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,743 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,743 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,743 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,743 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,743 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,744 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,744 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,744 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,744 - DEBUG - first assign: weight
2025-07-25 09:42:13,744 - DEBUG - replaced with: weight = const(float, 0.0)
2025-07-25 09:42:13,744 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,744 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,744 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,744 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,744 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,744 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,745 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,745 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,745 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,745 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,745 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,745 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,745 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,745 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,745 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,745 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51106D0>
2025-07-25 09:42:13,745 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,745 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,745 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51106D0>
2025-07-25 09:42:13,746 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,746 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,746 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,746 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,746 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,746 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,746 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51106D0>
2025-07-25 09:42:13,746 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,746 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,746 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,746 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,747 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 09:42:13,747 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 09:42:13,747 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 09:42:13,747 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,747 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,747 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 09:42:13,747 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,747 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,747 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 09:42:13,747 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 09:42:13,747 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,748 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,748 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,748 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,748 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,748 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,748 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,748 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,748 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51106D0>
2025-07-25 09:42:13,748 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,749 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,749 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,749 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,749 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,749 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,749 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51106D0>
2025-07-25 09:42:13,749 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,749 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,749 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 09:42:13,749 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,749 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,749 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 09:42:13,749 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,750 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 09:42:13,750 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,750 - DEBUG - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,750 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,750 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 09:42:13,750 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,750 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,750 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,750 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,750 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,750 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,750 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51106D0>
2025-07-25 09:42:13,750 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 09:42:13,751 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 09:42:13,751 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 09:42:13,751 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,751 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,751 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 09:42:13,751 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,751 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 09:42:13,751 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,751 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,751 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 09:42:13,751 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,752 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,752 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,752 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,752 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,752 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,752 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,752 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,752 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51106D0>
2025-07-25 09:42:13,752 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,753 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,753 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,753 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,753 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,753 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,753 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51106D0>
2025-07-25 09:42:13,753 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,753 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,753 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 09:42:13,753 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,753 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,754 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 09:42:13,754 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,754 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 09:42:13,754 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,754 - DEBUG - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,754 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,754 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 09:42:13,754 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,754 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,754 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,754 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,754 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,754 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,755 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,755 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,755 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51106D0>
2025-07-25 09:42:13,755 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,755 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,755 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E0B51106D0>
2025-07-25 09:42:13,755 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,755 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,755 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:13,755 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E0B51100D0>],
             376: [<numba.core.ir.Assign object at 0x000001E0B5129C50>],
             648: [<numba.core.ir.Assign object at 0x000001E0B5124110>]})
2025-07-25 09:42:13,755 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 09:42:13,755 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5129A50>
2025-07-25 09:42:13,756 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 09:42:13,756 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 09:42:13,756 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 09:42:13,756 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 09:42:13,756 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 09:42:13,756 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 09:42:13,756 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 09:42:13,756 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 09:42:13,756 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 09:42:13,756 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,757 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 09:42:13,757 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 09:42:13,757 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 09:42:13,757 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 09:42:13,757 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 09:42:13,757 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 09:42:13,757 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 09:42:13,757 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 09:42:13,757 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 09:42:13,757 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,757 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 09:42:13,757 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 09:42:13,757 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,758 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 09:42:13,758 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 09:42:13,758 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 09:42:13,758 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 09:42:13,758 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,758 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 09:42:13,758 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 09:42:13,758 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,758 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 09:42:13,758 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5129A50>
2025-07-25 09:42:13,758 - DEBUG - on stmt: jump 178
2025-07-25 09:42:13,758 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 09:42:13,759 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5129A50>
2025-07-25 09:42:13,759 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 09:42:13,759 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 09:42:13,759 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 09:42:13,759 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 09:42:13,759 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 09:42:13,759 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 09:42:13,759 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5129A50>
2025-07-25 09:42:13,759 - DEBUG - on stmt: t = $phi180.1
2025-07-25 09:42:13,759 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,759 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 09:42:13,759 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,760 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 09:42:13,760 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 09:42:13,760 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 09:42:13,760 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 09:42:13,760 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,760 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 09:42:13,760 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 09:42:13,760 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 09:42:13,760 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 09:42:13,760 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 09:42:13,761 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 09:42:13,761 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,761 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 09:42:13,761 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,761 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 09:42:13,761 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 09:42:13,761 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,761 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 09:42:13,761 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5129A50>
2025-07-25 09:42:13,761 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 09:42:13,761 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 09:42:13,762 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 09:42:13,762 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 09:42:13,762 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 09:42:13,762 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 09:42:13,762 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5129A50>
2025-07-25 09:42:13,762 - DEBUG - on stmt: i = $phi376.2
2025-07-25 09:42:13,762 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 09:42:13,762 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 09:42:13,762 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,762 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 09:42:13,762 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 09:42:13,762 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,762 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 09:42:13,763 - DEBUG - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 09:42:13,763 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,763 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 09:42:13,763 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 09:42:13,763 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,763 - DEBUG - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 09:42:13,763 - DEBUG - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
2025-07-25 09:42:13,763 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,763 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 09:42:13,763 - DEBUG - on stmt: jump 374
2025-07-25 09:42:13,764 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 09:42:13,764 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5129A50>
2025-07-25 09:42:13,764 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 09:42:13,764 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 09:42:13,764 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 09:42:13,764 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 09:42:13,764 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,764 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 09:42:13,764 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 09:42:13,765 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 09:42:13,765 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 09:42:13,765 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 09:42:13,765 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 09:42:13,765 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 09:42:13,765 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,765 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 09:42:13,765 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 09:42:13,765 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 09:42:13,765 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 09:42:13,766 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,766 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 09:42:13,766 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5129A50>
2025-07-25 09:42:13,766 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 09:42:13,766 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 09:42:13,766 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 09:42:13,766 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 09:42:13,766 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 09:42:13,766 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 09:42:13,766 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5129A50>
2025-07-25 09:42:13,766 - DEBUG - on stmt: k = $phi648.2
2025-07-25 09:42:13,766 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 09:42:13,766 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 09:42:13,766 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 09:42:13,766 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 09:42:13,767 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 09:42:13,767 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 09:42:13,767 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 09:42:13,767 - DEBUG - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 09:42:13,767 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 09:42:13,767 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 09:42:13,767 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 09:42:13,767 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 09:42:13,767 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 09:42:13,767 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,767 - DEBUG - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 09:42:13,768 - DEBUG - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
2025-07-25 09:42:13,768 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 09:42:13,768 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 09:42:13,768 - DEBUG - on stmt: jump 646
2025-07-25 09:42:13,768 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 09:42:13,768 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5129A50>
2025-07-25 09:42:13,768 - DEBUG - on stmt: jump 176
2025-07-25 09:42:13,768 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 09:42:13,768 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E0B5129A50>
2025-07-25 09:42:13,769 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 09:42:13,769 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 09:42:13,769 - DEBUG - on stmt: return $784return_value.1
2025-07-25 09:42:14,148 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-07-25 09:42:14,149 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 09:42:14,149 - DEBUG - stack: []
2025-07-25 09:42:14,149 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 09:42:14,149 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-07-25 09:42:14,150 - DEBUG - stack []
2025-07-25 09:42:14,150 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-07-25 09:42:14,150 - DEBUG - stack []
2025-07-25 09:42:14,150 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 09:42:14,150 - DEBUG - stack []
2025-07-25 09:42:14,150 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-07-25 09:42:14,150 - DEBUG - stack ['$x4.0']
2025-07-25 09:42:14,150 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 09:42:14,150 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-07-25 09:42:14,150 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 09:42:14,150 - DEBUG - stack ['$8binary_subscr.2']
2025-07-25 09:42:14,151 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-07-25 09:42:14,151 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-07-25 09:42:14,151 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 09:42:14,151 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-07-25 09:42:14,151 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-07-25 09:42:14,151 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-07-25 09:42:14,151 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-07-25 09:42:14,151 - DEBUG - stack ['$binop_add32.6']
2025-07-25 09:42:14,151 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 09:42:14,151 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-07-25 09:42:14,152 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-07-25 09:42:14,152 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-07-25 09:42:14,152 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 09:42:14,152 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-07-25 09:42:14,152 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-07-25 09:42:14,152 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-07-25 09:42:14,152 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-07-25 09:42:14,152 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-07-25 09:42:14,152 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-07-25 09:42:14,152 - DEBUG - stack ['$binop_sub56.12']
2025-07-25 09:42:14,152 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 09:42:14,153 - DEBUG - stack []
2025-07-25 09:42:14,153 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-07-25 09:42:14,153 - DEBUG - stack ['$x62.13']
2025-07-25 09:42:14,153 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 09:42:14,153 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-07-25 09:42:14,153 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 09:42:14,154 - DEBUG - stack ['$66binary_subscr.15']
2025-07-25 09:42:14,154 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-07-25 09:42:14,154 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-07-25 09:42:14,154 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 09:42:14,154 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-07-25 09:42:14,154 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-07-25 09:42:14,154 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-07-25 09:42:14,155 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-07-25 09:42:14,155 - DEBUG - stack ['$binop_sub90.19']
2025-07-25 09:42:14,155 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-07-25 09:42:14,155 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-07-25 09:42:14,155 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-07-25 09:42:14,155 - DEBUG - stack ['$binop_truediv96.21']
2025-07-25 09:42:14,155 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 09:42:14,155 - DEBUG - stack []
2025-07-25 09:42:14,155 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 09:42:14,155 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-07-25 09:42:14,156 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-07-25 09:42:14,156 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-07-25 09:42:14,156 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-07-25 09:42:14,156 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 09:42:14,156 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-07-25 09:42:14,156 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 09:42:14,156 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 09:42:14,156 - DEBUG - stack ['$130call.26']
2025-07-25 09:42:14,156 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 09:42:14,157 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-07-25 09:42:14,157 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-07-25 09:42:14,157 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-07-25 09:42:14,157 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-07-25 09:42:14,157 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 09:42:14,157 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-07-25 09:42:14,157 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 09:42:14,157 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-07-25 09:42:14,157 - DEBUG - stack ['$130call.26', '$168call.31']
2025-07-25 09:42:14,157 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-07-25 09:42:14,157 - DEBUG - stack ['$178compare_op.32']
2025-07-25 09:42:14,157 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-25 09:42:14,158 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-25 09:42:14,158 - DEBUG - stack: []
2025-07-25 09:42:14,158 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-07-25 09:42:14,158 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-07-25 09:42:14,158 - DEBUG - stack []
2025-07-25 09:42:14,158 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-07-25 09:42:14,158 - DEBUG - stack ['$const186.0.4']
2025-07-25 09:42:14,159 - DEBUG - end state. edges=[]
2025-07-25 09:42:14,159 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-07-25 09:42:14,159 - DEBUG - stack: []
2025-07-25 09:42:14,159 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-25 09:42:14,160 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-07-25 09:42:14,160 - DEBUG - stack []
2025-07-25 09:42:14,160 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-07-25 09:42:14,160 - DEBUG - stack ['$b190.0']
2025-07-25 09:42:14,160 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-07-25 09:42:14,160 - DEBUG - stack ['$192unary_negative.1']
2025-07-25 09:42:14,160 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-07-25 09:42:14,160 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-07-25 09:42:14,161 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-07-25 09:42:14,161 - DEBUG - stack ['$binop_truediv196.3']
2025-07-25 09:42:14,161 - DEBUG - end state. edges=[]
2025-07-25 09:42:14,161 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 09:42:14,161 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-25 09:42:14,161 - DEBUG - defmap: {}
2025-07-25 09:42:14,161 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 09:42:14,161 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 09:42:14,161 - DEBUG - keep phismap: {}
2025-07-25 09:42:14,162 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 09:42:14,162 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 09:42:14,162 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-07-25 09:42:14,162 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 09:42:14,162 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 09:42:14,163 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-07-25 09:42:14,247 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 09:42:41,124 - INFO - Tags gespeichert für: data\03. Der Sandmann (Feat. Chakuza & Saad).mp3
2025-07-25 09:42:41,124 - ERROR - Fehler bei der Verarbeitung von data\03. Der Sandmann (Feat. Chakuza & Saad).mp3: 'NoneType' object is not subscriptable
2025-07-25 09:42:41,125 - INFO - Verarbeite Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 09:42:41,125 - INFO - Beginne Verarbeitung der Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 09:42:41,159 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Untergrund (Feat. Eko Fresh)
2025-07-25 09:42:41,160 - INFO - Lade und speichere Lyrics für: Bushido - Untergrund (Feat. Eko Fresh)
2025-07-25 09:42:41,161 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 09:42:41,390 - DEBUG - https://genius.com:443 "GET /bushido-untergrund-lyrics HTTP/1.1" 301 None
2025-07-25 09:42:41,573 - DEBUG - https://genius.com:443 "GET /Bushido-untergrund-lyrics HTTP/1.1" 200 None
2025-07-25 09:42:41,822 - DEBUG - BPM-Wert ermittelt: 172
2025-07-25 09:43:08,697 - INFO - Tags gespeichert für: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 09:43:08,698 - ERROR - Fehler bei der Verarbeitung von data\05. Untergrund (Feat. Eko Fresh).mp3: 'NoneType' object is not subscriptable
2025-07-25 09:43:08,698 - INFO - Verarbeite Datei: data\08. Das Leben ist hart.mp3
2025-07-25 09:43:08,698 - INFO - Beginne Verarbeitung der Datei: data\08. Das Leben ist hart.mp3
2025-07-25 09:43:08,732 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Das Leben ist hart
2025-07-25 09:43:08,732 - INFO - Lade und speichere Lyrics für: Bushido - Das Leben ist hart
2025-07-25 09:43:08,733 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 09:43:09,180 - DEBUG - https://genius.com:443 "GET /bushido-das-leben-ist-hart-lyrics HTTP/1.1" 301 None
2025-07-25 09:43:10,580 - DEBUG - https://genius.com:443 "GET /Bushido-das-leben-ist-hart-lyrics HTTP/1.1" 200 None
2025-07-25 09:43:10,948 - DEBUG - BPM-Wert ermittelt: 83
2025-07-25 09:43:37,830 - INFO - Tags gespeichert für: data\08. Das Leben ist hart.mp3
2025-07-25 09:43:37,831 - ERROR - Fehler bei der Verarbeitung von data\08. Das Leben ist hart.mp3: 'NoneType' object is not subscriptable
2025-07-25 09:43:37,831 - INFO - Verarbeite Datei: data\09. Hast du was bist du was.mp3
2025-07-25 09:43:37,831 - INFO - Beginne Verarbeitung der Datei: data\09. Hast du was bist du was.mp3
2025-07-25 09:43:37,865 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Hast du was bist du was
2025-07-25 09:43:37,866 - INFO - Lade und speichere Lyrics für: Bushido - Hast du was bist du was
2025-07-25 09:43:37,867 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 09:43:38,107 - DEBUG - https://genius.com:443 "GET /bushido-hast-du-was-bist-du-was-lyrics HTTP/1.1" 301 None
2025-07-25 09:43:39,750 - DEBUG - https://genius.com:443 "GET /Bushido-hast-du-was-bist-du-was-lyrics HTTP/1.1" 200 None
2025-07-25 09:43:40,147 - DEBUG - BPM-Wert ermittelt: 129
2025-07-25 09:44:07,034 - INFO - Tags gespeichert für: data\09. Hast du was bist du was.mp3
2025-07-25 09:44:07,034 - ERROR - Fehler bei der Verarbeitung von data\09. Hast du was bist du was.mp3: 'NoneType' object is not subscriptable
2025-07-25 09:44:07,034 - INFO - Verarbeite Datei: data\09. Staatsfeind Nr. 1.mp3
2025-07-25 09:44:07,035 - INFO - Beginne Verarbeitung der Datei: data\09. Staatsfeind Nr. 1.mp3
2025-07-25 09:44:07,066 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Staatsfeind Nr. 1
2025-07-25 09:44:07,066 - INFO - Lade und speichere Lyrics für: Bushido - Staatsfeind Nr. 1
2025-07-25 09:44:07,068 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 09:44:07,338 - DEBUG - https://genius.com:443 "GET /bushido-staatsfeind-nr-1-lyrics HTTP/1.1" 301 None
2025-07-25 09:44:08,960 - DEBUG - https://genius.com:443 "GET /Bushido-staatsfeind-nr-1-lyrics HTTP/1.1" 200 None
2025-07-25 09:44:09,437 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 09:44:36,304 - INFO - Tags gespeichert für: data\09. Staatsfeind Nr. 1.mp3
2025-07-25 09:44:36,305 - ERROR - Fehler bei der Verarbeitung von data\09. Staatsfeind Nr. 1.mp3: 'NoneType' object is not subscriptable
2025-07-25 09:44:36,305 - INFO - Verarbeite Datei: data\11. Bloodsport.mp3
2025-07-25 09:44:36,305 - INFO - Beginne Verarbeitung der Datei: data\11. Bloodsport.mp3
2025-07-25 09:44:36,340 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Bloodsport
2025-07-25 09:44:36,340 - INFO - Lade und speichere Lyrics für: Bushido - Bloodsport
2025-07-25 09:44:36,342 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 09:44:36,678 - DEBUG - https://genius.com:443 "GET /bushido-bloodsport-lyrics HTTP/1.1" 301 None
2025-07-25 09:44:38,127 - DEBUG - https://genius.com:443 "GET /Bushido-bloodsport-lyrics HTTP/1.1" 200 None
2025-07-25 09:44:38,517 - DEBUG - BPM-Wert ermittelt: 96
2025-07-25 09:45:05,366 - INFO - Tags gespeichert für: data\11. Bloodsport.mp3
2025-07-25 09:45:05,366 - ERROR - Fehler bei der Verarbeitung von data\11. Bloodsport.mp3: 'NoneType' object is not subscriptable
2025-07-25 09:45:05,367 - INFO - Verarbeite Datei: data\12. Sex in the City.mp3
2025-07-25 09:45:05,367 - INFO - Beginne Verarbeitung der Datei: data\12. Sex in the City.mp3
2025-07-25 09:45:05,398 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Sex in the City
2025-07-25 09:45:05,399 - INFO - Lade und speichere Lyrics für: Bushido - Sex in the City
2025-07-25 09:45:05,400 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 09:45:05,826 - DEBUG - https://genius.com:443 "GET /bushido-sex-in-the-city-lyrics HTTP/1.1" 301 None
2025-07-25 09:45:07,215 - DEBUG - https://genius.com:443 "GET /Bushido-sex-in-the-city-lyrics HTTP/1.1" 200 None
2025-07-25 09:45:07,625 - DEBUG - BPM-Wert ermittelt: 96
2025-07-25 10:01:44,965 - DEBUG - Starte die Anwendung...
2025-07-25 10:01:44,966 - INFO - Verarbeite MP3-Datei...
2025-07-25 10:01:44,966 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 10:01:44,976 - DEBUG - Using proactor: IocpProactor
2025-07-25 10:01:44,984 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 10:01:45,141 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 10:01:45,309 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 10:01:45,330 - DEBUG - Using proactor: IocpProactor
2025-07-25 10:01:45,396 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000016AB51BA790>
2025-07-25 10:01:45,396 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000016AB4ED85F0> server_hostname='api.gradio.app' timeout=3
2025-07-25 10:01:45,504 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=None socket_options=None
2025-07-25 10:01:45,505 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000016AB51F3250>
2025-07-25 10:01:45,505 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 10:01:45,506 - DEBUG - send_request_headers.complete
2025-07-25 10:01:45,508 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 10:01:45,508 - DEBUG - send_request_body.complete
2025-07-25 10:01:45,509 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 10:01:45,509 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 08:01:45 GMT'), (b'server', b'uvicorn'), (b'content-length', b'4'), (b'content-type', b'application/json')])
2025-07-25 10:01:45,510 - INFO - HTTP Request: GET http://127.0.0.1:7860/gradio_api/startup-events "HTTP/1.1 200 OK"
2025-07-25 10:01:45,510 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 10:01:45,510 - DEBUG - receive_response_body.complete
2025-07-25 10:01:45,511 - DEBUG - response_closed.started
2025-07-25 10:01:45,511 - DEBUG - response_closed.complete
2025-07-25 10:01:45,512 - DEBUG - close.started
2025-07-25 10:01:45,512 - DEBUG - close.complete
2025-07-25 10:01:45,513 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=3 socket_options=None
2025-07-25 10:01:45,524 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000016AB51D6990>
2025-07-25 10:01:45,524 - DEBUG - send_request_headers.started request=<Request [b'HEAD']>
2025-07-25 10:01:45,525 - DEBUG - send_request_headers.complete
2025-07-25 10:01:45,526 - DEBUG - send_request_body.started request=<Request [b'HEAD']>
2025-07-25 10:01:45,526 - DEBUG - send_request_body.complete
2025-07-25 10:01:45,526 - DEBUG - receive_response_headers.started request=<Request [b'HEAD']>
2025-07-25 10:01:45,548 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 08:01:45 GMT'), (b'server', b'uvicorn'), (b'content-length', b'26551'), (b'content-type', b'text/html; charset=utf-8')])
2025-07-25 10:01:45,549 - INFO - HTTP Request: HEAD http://127.0.0.1:7860/ "HTTP/1.1 200 OK"
2025-07-25 10:01:45,549 - DEBUG - receive_response_body.started request=<Request [b'HEAD']>
2025-07-25 10:01:45,549 - DEBUG - receive_response_body.complete
2025-07-25 10:01:45,549 - DEBUG - response_closed.started
2025-07-25 10:01:45,549 - DEBUG - response_closed.complete
2025-07-25 10:01:45,549 - DEBUG - close.started
2025-07-25 10:01:45,550 - DEBUG - close.complete
2025-07-25 10:01:45,554 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 10:01:45,717 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/launched HTTP/1.1" 200 0
2025-07-25 10:01:45,741 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000016AB480F5D0>
2025-07-25 10:01:45,742 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 10:01:45,742 - DEBUG - send_request_headers.complete
2025-07-25 10:01:45,742 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 10:01:45,742 - DEBUG - send_request_body.complete
2025-07-25 10:01:45,743 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 10:01:45,915 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 08:01:45 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 10:01:45,916 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 10:01:45,916 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 10:01:45,916 - DEBUG - receive_response_body.complete
2025-07-25 10:01:45,916 - DEBUG - response_closed.started
2025-07-25 10:01:45,916 - DEBUG - response_closed.complete
2025-07-25 10:01:45,917 - DEBUG - close.started
2025-07-25 10:01:45,917 - DEBUG - close.complete
2025-07-25 10:02:15,187 - DEBUG - matplotlib data path: z:\AI\software\miniconda3\envs\ace-data_env\Lib\site-packages\matplotlib\mpl-data
2025-07-25 10:02:15,195 - DEBUG - CONFIGDIR=C:\Users\methm\.matplotlib
2025-07-25 10:02:15,197 - DEBUG - interactive is False
2025-07-25 10:02:15,198 - DEBUG - platform is win32
2025-07-25 10:02:15,272 - DEBUG - CACHEDIR=C:\Users\methm\.matplotlib
2025-07-25 10:02:15,282 - DEBUG - Using fontManager instance from C:\Users\methm\.matplotlib\fontlist-v390.json
2025-07-25 10:02:15,534 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 10:02:15,534 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 10:02:15,536 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 10:02:15,536 - INFO - Verarbeite Datei: data\03. Der Sandmann (Feat. Chakuza & Saad).mp3
2025-07-25 10:02:15,537 - INFO - Beginne Verarbeitung der Datei: data\03. Der Sandmann (Feat. Chakuza & Saad).mp3
2025-07-25 10:02:15,541 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Der Sandmann (Feat. Chakuza & Saad)
2025-07-25 10:02:15,541 - INFO - Lade und speichere Lyrics für: Bushido - Der Sandmann (Feat. Chakuza & Saad)
2025-07-25 10:02:15,544 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:02:15,766 - DEBUG - https://genius.com:443 "GET /bushido-der-sandmann-lyrics HTTP/1.1" 301 None
2025-07-25 10:02:16,139 - DEBUG - https://genius.com:443 "GET /Bushido-der-sandmann-lyrics HTTP/1.1" 200 None
2025-07-25 10:02:16,278 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
2025-07-25 10:02:16,278 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:02:16,279 - DEBUG - stack: []
2025-07-25 10:02:16,279 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:02:16,279 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-07-25 10:02:16,279 - DEBUG - stack []
2025-07-25 10:02:16,279 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
2025-07-25 10:02:16,279 - DEBUG - stack []
2025-07-25 10:02:16,279 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
2025-07-25 10:02:16,280 - DEBUG - stack []
2025-07-25 10:02:16,280 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
2025-07-25 10:02:16,280 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 10:02:16,280 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
2025-07-25 10:02:16,280 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2025-07-25 10:02:16,280 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
2025-07-25 10:02:16,281 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
2025-07-25 10:02:16,281 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
2025-07-25 10:02:16,281 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
2025-07-25 10:02:16,281 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
2025-07-25 10:02:16,281 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
2025-07-25 10:02:16,281 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
2025-07-25 10:02:16,281 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
2025-07-25 10:02:16,281 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
2025-07-25 10:02:16,282 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
2025-07-25 10:02:16,282 - DEBUG - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
2025-07-25 10:02:16,282 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 10:02:16,282 - DEBUG - dispatch pc=34, inst=CALL(arg=7, lineno=86)
2025-07-25 10:02:16,282 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 10:02:16,282 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
2025-07-25 10:02:16,282 - DEBUG - stack ['$34call.9']
2025-07-25 10:02:16,282 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
2025-07-25 10:02:16,283 - DEBUG - stack []
2025-07-25 10:02:16,283 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
2025-07-25 10:02:16,283 - DEBUG - stack ['$const46.10.0']
2025-07-25 10:02:16,283 - DEBUG - end state. edges=[]
2025-07-25 10:02:16,283 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:02:16,284 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-25 10:02:16,284 - DEBUG - defmap: {}
2025-07-25 10:02:16,284 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:02:16,284 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:02:16,284 - DEBUG - keep phismap: {}
2025-07-25 10:02:16,285 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 10:02:16,285 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:02:16,285 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10.0'}), (48, {'retval': '$const46.10.0', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:02:16,286 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000016AB72620C0>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10.0 = const(NoneType, None)    ['$const46.10.0']
    $48return_value.11 = cast(value=$const46.10.0) ['$48return_value.11', '$const46.10.0']
    return $48return_value.11                ['$48return_value.11']

2025-07-25 10:02:16,290 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 10:02:16,290 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000016AB732B150>
2025-07-25 10:02:16,291 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,291 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,291 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,291 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,291 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,292 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,292 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,292 - DEBUG - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000016AB72620C0>))
2025-07-25 10:02:16,292 - DEBUG - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,292 - DEBUG - on stmt: $const46.10.0 = const(NoneType, None)
2025-07-25 10:02:16,293 - DEBUG - on stmt: $48return_value.11 = cast(value=$const46.10.0)
2025-07-25 10:02:16,293 - DEBUG - on stmt: return $48return_value.11
2025-07-25 10:02:16,293 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x0000016AB73238D0>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x0000016AB7323C50>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000016AB73229D0>,
                                  0)],
             '$const46.10.0': [(<numba.core.ir.Assign object at 0x0000016AB7323A50>,
                                0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000016AB7322410>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000016AB7321090>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000016AB7322510>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x0000016AB7322650>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x0000016AB726E4D0>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x0000016AB71C5650>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000016AB7322750>, 0)]})
2025-07-25 10:02:16,294 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x0000016AB6E65BD0>
2025-07-25 10:02:16,301 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
2025-07-25 10:02:16,306 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:02:16,306 - DEBUG - stack: []
2025-07-25 10:02:16,306 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:02:16,306 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-07-25 10:02:16,306 - DEBUG - stack []
2025-07-25 10:02:16,306 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
2025-07-25 10:02:16,307 - DEBUG - stack []
2025-07-25 10:02:16,307 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
2025-07-25 10:02:16,307 - DEBUG - stack []
2025-07-25 10:02:16,307 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
2025-07-25 10:02:16,308 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 10:02:16,308 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
2025-07-25 10:02:16,308 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
2025-07-25 10:02:16,308 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
2025-07-25 10:02:16,308 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
2025-07-25 10:02:16,308 - DEBUG - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
2025-07-25 10:02:16,309 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 10:02:16,309 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=9)
2025-07-25 10:02:16,309 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 10:02:16,309 - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
2025-07-25 10:02:16,309 - DEBUG - stack ['$28call.5']
2025-07-25 10:02:16,309 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
2025-07-25 10:02:16,310 - DEBUG - stack []
2025-07-25 10:02:16,310 - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
2025-07-25 10:02:16,310 - DEBUG - stack ['$const40.6.1']
2025-07-25 10:02:16,310 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
2025-07-25 10:02:16,310 - DEBUG - stack []
2025-07-25 10:02:16,310 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
2025-07-25 10:02:16,311 - DEBUG - stack ['$const44.7.2']
2025-07-25 10:02:16,311 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
2025-07-25 10:02:16,311 - DEBUG - stack []
2025-07-25 10:02:16,311 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
2025-07-25 10:02:16,311 - DEBUG - stack ['$const48.8.1']
2025-07-25 10:02:16,311 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
2025-07-25 10:02:16,312 - DEBUG - stack []
2025-07-25 10:02:16,312 - DEBUG - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
2025-07-25 10:02:16,312 - DEBUG - stack ['$const52.9.1']
2025-07-25 10:02:16,312 - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
2025-07-25 10:02:16,312 - DEBUG - stack []
2025-07-25 10:02:16,312 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
2025-07-25 10:02:16,312 - DEBUG - stack ['$const56.10.2']
2025-07-25 10:02:16,313 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
2025-07-25 10:02:16,313 - DEBUG - stack []
2025-07-25 10:02:16,313 - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
2025-07-25 10:02:16,313 - DEBUG - stack ['$const60.11.1']
2025-07-25 10:02:16,313 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
2025-07-25 10:02:16,313 - DEBUG - stack []
2025-07-25 10:02:16,313 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
2025-07-25 10:02:16,313 - DEBUG - stack ['$const64.12.1']
2025-07-25 10:02:16,313 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
2025-07-25 10:02:16,313 - DEBUG - stack []
2025-07-25 10:02:16,314 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
2025-07-25 10:02:16,314 - DEBUG - stack ['$interp_win68.13']
2025-07-25 10:02:16,314 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
2025-07-25 10:02:16,314 - DEBUG - stack ['$70load_attr.14']
2025-07-25 10:02:16,314 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-07-25 10:02:16,314 - DEBUG - stack ['$70load_attr.14', '$const80.15.2']
2025-07-25 10:02:16,314 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
2025-07-25 10:02:16,314 - DEBUG - stack ['$82binary_subscr.16']
2025-07-25 10:02:16,315 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
2025-07-25 10:02:16,315 - DEBUG - stack []
2025-07-25 10:02:16,315 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
2025-07-25 10:02:16,315 - DEBUG - stack ['$x94.17']
2025-07-25 10:02:16,315 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
2025-07-25 10:02:16,315 - DEBUG - stack ['$96load_attr.18']
2025-07-25 10:02:16,316 - DEBUG - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-07-25 10:02:16,316 - DEBUG - stack ['$96load_attr.18', '$const106.19.2']
2025-07-25 10:02:16,316 - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
2025-07-25 10:02:16,316 - DEBUG - stack ['$108binary_subscr.20']
2025-07-25 10:02:16,317 - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
2025-07-25 10:02:16,317 - DEBUG - stack []
2025-07-25 10:02:16,317 - DEBUG - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
2025-07-25 10:02:16,317 - DEBUG - stack ['$t_out120.21']
2025-07-25 10:02:16,317 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
2025-07-25 10:02:16,317 - DEBUG - stack ['$122load_attr.22']
2025-07-25 10:02:16,318 - DEBUG - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-07-25 10:02:16,318 - DEBUG - stack ['$122load_attr.22', '$const132.23.2']
2025-07-25 10:02:16,318 - DEBUG - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
2025-07-25 10:02:16,318 - DEBUG - stack ['$134binary_subscr.24']
2025-07-25 10:02:16,318 - DEBUG - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
2025-07-25 10:02:16,318 - DEBUG - stack []
2025-07-25 10:02:16,318 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
2025-07-25 10:02:16,319 - DEBUG - stack ['$null$146.26', '$146load_global.25']
2025-07-25 10:02:16,319 - DEBUG - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
2025-07-25 10:02:16,319 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 10:02:16,319 - DEBUG - dispatch pc=164, inst=CALL(arg=1, lineno=23)
2025-07-25 10:02:16,319 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 10:02:16,320 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
2025-07-25 10:02:16,320 - DEBUG - stack ['$164call.28']
2025-07-25 10:02:16,320 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
2025-07-25 10:02:16,321 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2025-07-25 10:02:16,321 - DEBUG - stack: ['$phi176.0']
2025-07-25 10:02:16,321 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2025-07-25 10:02:16,321 - DEBUG - dispatch pc=176, inst=NOP(arg=1, lineno=23)
2025-07-25 10:02:16,322 - DEBUG - stack ['$phi176.0']
2025-07-25 10:02:16,322 - DEBUG - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
2025-07-25 10:02:16,322 - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=1)])
2025-07-25 10:02:16,322 - DEBUG - stack: ['$phi178.0']
2025-07-25 10:02:16,322 - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=1)
2025-07-25 10:02:16,322 - DEBUG - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
2025-07-25 10:02:16,322 - DEBUG - stack ['$phi178.0']
2025-07-25 10:02:16,323 - DEBUG - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
2025-07-25 10:02:16,323 - DEBUG - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
2025-07-25 10:02:16,323 - DEBUG - stack: []
2025-07-25 10:02:16,323 - DEBUG - state.pc_initial: State(pc_initial=782 nstack_initial=0)
2025-07-25 10:02:16,323 - DEBUG - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
2025-07-25 10:02:16,323 - DEBUG - stack []
2025-07-25 10:02:16,323 - DEBUG - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
2025-07-25 10:02:16,323 - DEBUG - stack ['$const782.0.0']
2025-07-25 10:02:16,324 - DEBUG - end state. edges=[]
2025-07-25 10:02:16,324 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2025-07-25 10:02:16,324 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2025-07-25 10:02:16,324 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2025-07-25 10:02:16,324 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
2025-07-25 10:02:16,325 - DEBUG - stack ['$phi180.0', '$phi180.1']
2025-07-25 10:02:16,325 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
2025-07-25 10:02:16,325 - DEBUG - stack ['$phi180.0']
2025-07-25 10:02:16,325 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
2025-07-25 10:02:16,325 - DEBUG - stack ['$phi180.0', '$t_out182.2']
2025-07-25 10:02:16,325 - DEBUG - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-07-25 10:02:16,325 - DEBUG - stack ['$phi180.0', '$t_out182.2', '$t184.3']
2025-07-25 10:02:16,326 - DEBUG - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
2025-07-25 10:02:16,326 - DEBUG - stack ['$phi180.0', '$186binary_subscr.4']
2025-07-25 10:02:16,326 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
2025-07-25 10:02:16,326 - DEBUG - stack ['$phi180.0']
2025-07-25 10:02:16,326 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
2025-07-25 10:02:16,326 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
2025-07-25 10:02:16,326 - DEBUG - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
2025-07-25 10:02:16,327 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 10:02:16,327 - DEBUG - dispatch pc=216, inst=CALL(arg=1, lineno=27)
2025-07-25 10:02:16,327 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 10:02:16,327 - DEBUG - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
2025-07-25 10:02:16,327 - DEBUG - stack ['$phi180.0', '$216call.8']
2025-07-25 10:02:16,327 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
2025-07-25 10:02:16,327 - DEBUG - stack ['$phi180.0']
2025-07-25 10:02:16,327 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
2025-07-25 10:02:16,327 - DEBUG - stack ['$phi180.0', '$scale228.9']
2025-07-25 10:02:16,328 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
2025-07-25 10:02:16,328 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
2025-07-25 10:02:16,328 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
2025-07-25 10:02:16,328 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
2025-07-25 10:02:16,328 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
2025-07-25 10:02:16,329 - DEBUG - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
2025-07-25 10:02:16,329 - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
2025-07-25 10:02:16,329 - DEBUG - stack ['$phi180.0', '$binop_mul238.13']
2025-07-25 10:02:16,329 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
2025-07-25 10:02:16,329 - DEBUG - stack ['$phi180.0']
2025-07-25 10:02:16,329 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
2025-07-25 10:02:16,329 - DEBUG - stack ['$phi180.0', '$frac244.14']
2025-07-25 10:02:16,329 - DEBUG - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
2025-07-25 10:02:16,329 - DEBUG - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
2025-07-25 10:02:16,330 - DEBUG - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
2025-07-25 10:02:16,330 - DEBUG - stack ['$phi180.0', '$binop_mul248.16']
2025-07-25 10:02:16,330 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
2025-07-25 10:02:16,330 - DEBUG - stack ['$phi180.0']
2025-07-25 10:02:16,330 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
2025-07-25 10:02:16,330 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
2025-07-25 10:02:16,330 - DEBUG - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
2025-07-25 10:02:16,330 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 10:02:16,330 - DEBUG - dispatch pc=272, inst=CALL(arg=1, lineno=34)
2025-07-25 10:02:16,331 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 10:02:16,331 - DEBUG - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
2025-07-25 10:02:16,331 - DEBUG - stack ['$phi180.0', '$272call.20']
2025-07-25 10:02:16,331 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
2025-07-25 10:02:16,331 - DEBUG - stack ['$phi180.0']
2025-07-25 10:02:16,331 - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
2025-07-25 10:02:16,331 - DEBUG - stack ['$phi180.0', '$index_frac284.21']
2025-07-25 10:02:16,332 - DEBUG - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
2025-07-25 10:02:16,332 - DEBUG - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
2025-07-25 10:02:16,332 - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
2025-07-25 10:02:16,332 - DEBUG - stack ['$phi180.0', '$binop_sub288.23']
2025-07-25 10:02:16,332 - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
2025-07-25 10:02:16,332 - DEBUG - stack ['$phi180.0']
2025-07-25 10:02:16,333 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
2025-07-25 10:02:16,333 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
2025-07-25 10:02:16,333 - DEBUG - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
2025-07-25 10:02:16,333 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
2025-07-25 10:02:16,333 - DEBUG - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
2025-07-25 10:02:16,333 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27.3']
2025-07-25 10:02:16,333 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
2025-07-25 10:02:16,334 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
2025-07-25 10:02:16,334 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
2025-07-25 10:02:16,334 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
2025-07-25 10:02:16,334 - DEBUG - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
2025-07-25 10:02:16,334 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
2025-07-25 10:02:16,334 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
2025-07-25 10:02:16,334 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
2025-07-25 10:02:16,334 - DEBUG - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
2025-07-25 10:02:16,334 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
2025-07-25 10:02:16,334 - DEBUG - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
2025-07-25 10:02:16,335 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 10:02:16,335 - DEBUG - dispatch pc=332, inst=CALL(arg=2, lineno=40)
2025-07-25 10:02:16,335 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 10:02:16,335 - DEBUG - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
2025-07-25 10:02:16,335 - DEBUG - stack ['$phi180.0', '$332call.34']
2025-07-25 10:02:16,335 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
2025-07-25 10:02:16,335 - DEBUG - stack ['$phi180.0']
2025-07-25 10:02:16,336 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
2025-07-25 10:02:16,336 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
2025-07-25 10:02:16,336 - DEBUG - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
2025-07-25 10:02:16,336 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 10:02:16,336 - DEBUG - dispatch pc=362, inst=CALL(arg=1, lineno=41)
2025-07-25 10:02:16,337 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 10:02:16,337 - DEBUG - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
2025-07-25 10:02:16,337 - DEBUG - stack ['$phi180.0', '$362call.38']
2025-07-25 10:02:16,337 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
2025-07-25 10:02:16,337 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2)])
2025-07-25 10:02:16,337 - DEBUG - stack: ['$phi374.0', '$phi374.1']
2025-07-25 10:02:16,337 - DEBUG - state.pc_initial: State(pc_initial=374 nstack_initial=2)
2025-07-25 10:02:16,337 - DEBUG - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
2025-07-25 10:02:16,338 - DEBUG - stack ['$phi374.0', '$phi374.1']
2025-07-25 10:02:16,338 - DEBUG - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
2025-07-25 10:02:16,338 - DEBUG - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
2025-07-25 10:02:16,338 - DEBUG - stack: ['$phi500.0']
2025-07-25 10:02:16,338 - DEBUG - state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-07-25 10:02:16,338 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
2025-07-25 10:02:16,338 - DEBUG - stack ['$phi500.0']
2025-07-25 10:02:16,338 - DEBUG - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
2025-07-25 10:02:16,339 - DEBUG - stack ['$phi500.0', '$scale500.1']
2025-07-25 10:02:16,339 - DEBUG - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
2025-07-25 10:02:16,339 - DEBUG - stack ['$phi500.0', '$scale500.1', '$frac502.2']
2025-07-25 10:02:16,339 - DEBUG - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
2025-07-25 10:02:16,339 - DEBUG - stack ['$phi500.0', '$binop_sub504.3']
2025-07-25 10:02:16,339 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
2025-07-25 10:02:16,339 - DEBUG - stack ['$phi500.0']
2025-07-25 10:02:16,339 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
2025-07-25 10:02:16,340 - DEBUG - stack ['$phi500.0', '$frac510.4']
2025-07-25 10:02:16,340 - DEBUG - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
2025-07-25 10:02:16,340 - DEBUG - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
2025-07-25 10:02:16,340 - DEBUG - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
2025-07-25 10:02:16,340 - DEBUG - stack ['$phi500.0', '$binop_mul514.6']
2025-07-25 10:02:16,340 - DEBUG - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
2025-07-25 10:02:16,341 - DEBUG - stack ['$phi500.0']
2025-07-25 10:02:16,341 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
2025-07-25 10:02:16,341 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
2025-07-25 10:02:16,341 - DEBUG - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
2025-07-25 10:02:16,341 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 10:02:16,342 - DEBUG - dispatch pc=538, inst=CALL(arg=1, lineno=54)
2025-07-25 10:02:16,342 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 10:02:16,342 - DEBUG - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
2025-07-25 10:02:16,342 - DEBUG - stack ['$phi500.0', '$538call.10']
2025-07-25 10:02:16,342 - DEBUG - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
2025-07-25 10:02:16,342 - DEBUG - stack ['$phi500.0']
2025-07-25 10:02:16,343 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
2025-07-25 10:02:16,343 - DEBUG - stack ['$phi500.0', '$index_frac550.11']
2025-07-25 10:02:16,343 - DEBUG - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
2025-07-25 10:02:16,343 - DEBUG - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
2025-07-25 10:02:16,343 - DEBUG - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
2025-07-25 10:02:16,343 - DEBUG - stack ['$phi500.0', '$binop_sub554.13']
2025-07-25 10:02:16,343 - DEBUG - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
2025-07-25 10:02:16,343 - DEBUG - stack ['$phi500.0']
2025-07-25 10:02:16,343 - DEBUG - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
2025-07-25 10:02:16,344 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
2025-07-25 10:02:16,344 - DEBUG - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
2025-07-25 10:02:16,344 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
2025-07-25 10:02:16,344 - DEBUG - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:02:16,344 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
2025-07-25 10:02:16,344 - DEBUG - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
2025-07-25 10:02:16,344 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
2025-07-25 10:02:16,344 - DEBUG - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:02:16,345 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19.3']
2025-07-25 10:02:16,345 - DEBUG - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
2025-07-25 10:02:16,345 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
2025-07-25 10:02:16,345 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
2025-07-25 10:02:16,345 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
2025-07-25 10:02:16,345 - DEBUG - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:02:16,346 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
2025-07-25 10:02:16,346 - DEBUG - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
2025-07-25 10:02:16,346 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
2025-07-25 10:02:16,346 - DEBUG - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
2025-07-25 10:02:16,346 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
2025-07-25 10:02:16,346 - DEBUG - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
2025-07-25 10:02:16,346 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 10:02:16,347 - DEBUG - dispatch pc=604, inst=CALL(arg=2, lineno=60)
2025-07-25 10:02:16,347 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 10:02:16,347 - DEBUG - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
2025-07-25 10:02:16,347 - DEBUG - stack ['$phi500.0', '$604call.26']
2025-07-25 10:02:16,347 - DEBUG - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
2025-07-25 10:02:16,347 - DEBUG - stack ['$phi500.0']
2025-07-25 10:02:16,347 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
2025-07-25 10:02:16,347 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
2025-07-25 10:02:16,348 - DEBUG - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
2025-07-25 10:02:16,348 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 10:02:16,348 - DEBUG - dispatch pc=634, inst=CALL(arg=1, lineno=61)
2025-07-25 10:02:16,348 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 10:02:16,348 - DEBUG - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
2025-07-25 10:02:16,348 - DEBUG - stack ['$phi500.0', '$634call.30']
2025-07-25 10:02:16,348 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
2025-07-25 10:02:16,348 - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:02:16,349 - DEBUG - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 10:02:16,349 - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=3)
2025-07-25 10:02:16,349 - DEBUG - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
2025-07-25 10:02:16,349 - DEBUG - stack ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 10:02:16,349 - DEBUG - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
2025-07-25 10:02:16,349 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:02:16,350 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
2025-07-25 10:02:16,350 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
2025-07-25 10:02:16,350 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
2025-07-25 10:02:16,350 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
2025-07-25 10:02:16,350 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
2025-07-25 10:02:16,350 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
2025-07-25 10:02:16,350 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
2025-07-25 10:02:16,351 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
2025-07-25 10:02:16,351 - DEBUG - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 10:02:16,351 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
2025-07-25 10:02:16,351 - DEBUG - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-07-25 10:02:16,351 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
2025-07-25 10:02:16,351 - DEBUG - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
2025-07-25 10:02:16,352 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
2025-07-25 10:02:16,352 - DEBUG - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
2025-07-25 10:02:16,352 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
2025-07-25 10:02:16,352 - DEBUG - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
2025-07-25 10:02:16,352 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
2025-07-25 10:02:16,353 - DEBUG - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
2025-07-25 10:02:16,353 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
2025-07-25 10:02:16,353 - DEBUG - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
2025-07-25 10:02:16,353 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
2025-07-25 10:02:16,353 - DEBUG - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 10:02:16,353 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
2025-07-25 10:02:16,354 - DEBUG - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
2025-07-25 10:02:16,354 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
2025-07-25 10:02:16,354 - DEBUG - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-07-25 10:02:16,354 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
2025-07-25 10:02:16,354 - DEBUG - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 10:02:16,354 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
2025-07-25 10:02:16,354 - DEBUG - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 10:02:16,355 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
2025-07-25 10:02:16,355 - DEBUG - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
2025-07-25 10:02:16,355 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
2025-07-25 10:02:16,355 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
2025-07-25 10:02:16,355 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:02:16,355 - DEBUG - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
2025-07-25 10:02:16,355 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20']
2025-07-25 10:02:16,355 - DEBUG - dispatch pc=446, inst=COPY(arg=2, lineno=47)
2025-07-25 10:02:16,355 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
2025-07-25 10:02:16,356 - DEBUG - dispatch pc=448, inst=COPY(arg=2, lineno=47)
2025-07-25 10:02:16,356 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
2025-07-25 10:02:16,356 - DEBUG - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 10:02:16,356 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
2025-07-25 10:02:16,356 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
2025-07-25 10:02:16,356 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
2025-07-25 10:02:16,356 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
2025-07-25 10:02:16,356 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
2025-07-25 10:02:16,356 - DEBUG - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
2025-07-25 10:02:16,357 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
2025-07-25 10:02:16,357 - DEBUG - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
2025-07-25 10:02:16,357 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
2025-07-25 10:02:16,357 - DEBUG - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
2025-07-25 10:02:16,357 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
2025-07-25 10:02:16,358 - DEBUG - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 10:02:16,358 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
2025-07-25 10:02:16,358 - DEBUG - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
2025-07-25 10:02:16,358 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
2025-07-25 10:02:16,358 - DEBUG - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
2025-07-25 10:02:16,358 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
2025-07-25 10:02:16,358 - DEBUG - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
2025-07-25 10:02:16,359 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
2025-07-25 10:02:16,359 - DEBUG - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
2025-07-25 10:02:16,359 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
2025-07-25 10:02:16,359 - DEBUG - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-07-25 10:02:16,359 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
2025-07-25 10:02:16,359 - DEBUG - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
2025-07-25 10:02:16,359 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:02:16,359 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
2025-07-25 10:02:16,360 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
2025-07-25 10:02:16,360 - DEBUG - stack: ['$phi646.0', '$phi646.1']
2025-07-25 10:02:16,360 - DEBUG - state.pc_initial: State(pc_initial=646 nstack_initial=2)
2025-07-25 10:02:16,360 - DEBUG - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
2025-07-25 10:02:16,360 - DEBUG - stack ['$phi646.0', '$phi646.1']
2025-07-25 10:02:16,360 - DEBUG - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
2025-07-25 10:02:16,360 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 10:02:16,360 - DEBUG - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 10:02:16,361 - DEBUG - stack: ['$phi778.0']
2025-07-25 10:02:16,361 - DEBUG - state.pc_initial: State(pc_initial=778 nstack_initial=1)
2025-07-25 10:02:16,361 - DEBUG - dispatch pc=778, inst=NOP(arg=1, lineno=61)
2025-07-25 10:02:16,361 - DEBUG - stack ['$phi778.0']
2025-07-25 10:02:16,361 - DEBUG - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
2025-07-25 10:02:16,361 - DEBUG - stack ['$phi778.0']
2025-07-25 10:02:16,362 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
2025-07-25 10:02:16,362 - DEBUG - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
2025-07-25 10:02:16,362 - DEBUG - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 10:02:16,362 - DEBUG - state.pc_initial: State(pc_initial=648 nstack_initial=3)
2025-07-25 10:02:16,362 - DEBUG - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
2025-07-25 10:02:16,362 - DEBUG - stack ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 10:02:16,363 - DEBUG - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
2025-07-25 10:02:16,363 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:02:16,363 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
2025-07-25 10:02:16,363 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
2025-07-25 10:02:16,363 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
2025-07-25 10:02:16,363 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
2025-07-25 10:02:16,363 - DEBUG - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
2025-07-25 10:02:16,363 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
2025-07-25 10:02:16,364 - DEBUG - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
2025-07-25 10:02:16,364 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
2025-07-25 10:02:16,364 - DEBUG - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 10:02:16,364 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
2025-07-25 10:02:16,364 - DEBUG - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-07-25 10:02:16,364 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
2025-07-25 10:02:16,364 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
2025-07-25 10:02:16,364 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
2025-07-25 10:02:16,365 - DEBUG - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
2025-07-25 10:02:16,365 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
2025-07-25 10:02:16,365 - DEBUG - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
2025-07-25 10:02:16,365 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
2025-07-25 10:02:16,365 - DEBUG - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
2025-07-25 10:02:16,365 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
2025-07-25 10:02:16,365 - DEBUG - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
2025-07-25 10:02:16,365 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
2025-07-25 10:02:16,366 - DEBUG - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 10:02:16,366 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
2025-07-25 10:02:16,366 - DEBUG - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
2025-07-25 10:02:16,366 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
2025-07-25 10:02:16,366 - DEBUG - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-07-25 10:02:16,366 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
2025-07-25 10:02:16,367 - DEBUG - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 10:02:16,367 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
2025-07-25 10:02:16,367 - DEBUG - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 10:02:16,367 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
2025-07-25 10:02:16,367 - DEBUG - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
2025-07-25 10:02:16,367 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
2025-07-25 10:02:16,368 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
2025-07-25 10:02:16,368 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:02:16,368 - DEBUG - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
2025-07-25 10:02:16,368 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20']
2025-07-25 10:02:16,368 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=66)
2025-07-25 10:02:16,368 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
2025-07-25 10:02:16,368 - DEBUG - dispatch pc=720, inst=COPY(arg=2, lineno=66)
2025-07-25 10:02:16,368 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
2025-07-25 10:02:16,368 - DEBUG - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 10:02:16,369 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
2025-07-25 10:02:16,369 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
2025-07-25 10:02:16,369 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
2025-07-25 10:02:16,369 - DEBUG - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
2025-07-25 10:02:16,369 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
2025-07-25 10:02:16,369 - DEBUG - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
2025-07-25 10:02:16,369 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
2025-07-25 10:02:16,370 - DEBUG - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
2025-07-25 10:02:16,370 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
2025-07-25 10:02:16,370 - DEBUG - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 10:02:16,370 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
2025-07-25 10:02:16,370 - DEBUG - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
2025-07-25 10:02:16,370 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
2025-07-25 10:02:16,371 - DEBUG - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 10:02:16,371 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28.3']
2025-07-25 10:02:16,371 - DEBUG - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 10:02:16,371 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
2025-07-25 10:02:16,371 - DEBUG - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
2025-07-25 10:02:16,371 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
2025-07-25 10:02:16,371 - DEBUG - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
2025-07-25 10:02:16,372 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
2025-07-25 10:02:16,372 - DEBUG - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
2025-07-25 10:02:16,372 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
2025-07-25 10:02:16,372 - DEBUG - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
2025-07-25 10:02:16,372 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
2025-07-25 10:02:16,372 - DEBUG - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-07-25 10:02:16,372 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
2025-07-25 10:02:16,372 - DEBUG - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
2025-07-25 10:02:16,373 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:02:16,373 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
2025-07-25 10:02:16,373 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:02:16,373 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:02:16,373 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:02:16,373 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
2025-07-25 10:02:16,374 - DEBUG - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
2025-07-25 10:02:16,374 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
2025-07-25 10:02:16,376 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:02:16,379 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:02:16,381 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:02:16,383 - DEBUG - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
2025-07-25 10:02:16,383 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
2025-07-25 10:02:16,384 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:02:16,384 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6.1'}), (42, {'value': '$const40.6.1'}), (44, {'res': '$const44.7.2'}), (46, {'value': '$const44.7.2'}), (48, {'res': '$const48.8.1'}), (50, {'value': '$const48.8.1'}), (52, {'res': '$const52.9.1'}), (54, {'value': '$const52.9.1'}), (56, {'res': '$const56.10.2'}), (58, {'value': '$const56.10.2'}), (60, {'res': '$const60.11.1'}), (62, {'value': '$const60.11.1'}), (64, {'res': '$const64.12.1'}), (66, {'value': '$const64.12.1'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15.2'}), (82, {'index': '$const80.15.2', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19.2'}), (108, {'index': '$const106.19.2', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23.2'}), (134, {'index': '$const132.23.2', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
2025-07-25 10:02:16,385 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
2025-07-25 10:02:16,385 - DEBUG - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
2025-07-25 10:02:16,385 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27.3'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27.3', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
2025-07-25 10:02:16,386 - DEBUG - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
2025-07-25 10:02:16,386 - DEBUG - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
2025-07-25 10:02:16,387 - DEBUG - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19.3'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19.3', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
2025-07-25 10:02:16,387 - DEBUG - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
2025-07-25 10:02:16,387 - DEBUG - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28.3'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28.3', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
2025-07-25 10:02:16,388 - DEBUG - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
2025-07-25 10:02:16,388 - DEBUG - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0.0'}), (784, {'retval': '$const782.0.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:02:16,394 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15.2 = const(int, 0)            ['$const80.15.2']
    nwin = getitem(value=$70load_attr.14, index=$const80.15.2, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15.2', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19.2 = const(int, 0)           ['$const106.19.2']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19.2, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19.2', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23.2 = const(int, 0)           ['$const132.23.2']
    n_out = getitem(value=$122load_attr.22, index=$const132.23.2, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23.2', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27.3 = const(int, 1)           ['$const308.27.3']
    $binop_add310.28 = n + $const308.27.3    ['$binop_add310.28', '$const308.27.3', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19.3 = const(int, 1)           ['$const580.19.3']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19.3 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19.3']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28.3 = const(int, 1)           ['$const744.28.3']
    $binop_add746.29 = $binop_add740.27 + $const744.28.3 ['$binop_add740.27', '$binop_add746.29', '$const744.28.3']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0.0 = const(NoneType, None)    ['$const782.0.0']
    $784return_value.1 = cast(value=$const782.0.0) ['$784return_value.1', '$const782.0.0']
    return $784return_value.1                ['$784return_value.1']

2025-07-25 10:02:16,427 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 10:02:16,427 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000016AB7328C90>
2025-07-25 10:02:16,427 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,427 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,427 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,428 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,428 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,428 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,428 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,428 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,428 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,428 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,428 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,429 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,429 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,429 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,429 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,429 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,429 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,429 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,429 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,429 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,430 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,430 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,430 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,430 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,430 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,430 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,430 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,430 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,430 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,431 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,431 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,431 - DEBUG - ==== SSA block analysis pass on 176
2025-07-25 10:02:16,431 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000016AB7328C90>
2025-07-25 10:02:16,431 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,431 - DEBUG - ==== SSA block analysis pass on 178
2025-07-25 10:02:16,431 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000016AB7328C90>
2025-07-25 10:02:16,431 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,431 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,432 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,432 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,432 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,432 - DEBUG - ==== SSA block analysis pass on 180
2025-07-25 10:02:16,432 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000016AB7328C90>
2025-07-25 10:02:16,432 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,433 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,433 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,433 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,433 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:02:16,433 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:02:16,434 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,434 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,434 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,434 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,434 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,434 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,434 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:02:16,434 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:02:16,435 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,435 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,435 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,435 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,435 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,435 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,435 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,436 - DEBUG - ==== SSA block analysis pass on 374
2025-07-25 10:02:16,436 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000016AB7328C90>
2025-07-25 10:02:16,436 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,436 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,436 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,436 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,436 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,437 - DEBUG - ==== SSA block analysis pass on 376
2025-07-25 10:02:16,437 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000016AB7328C90>
2025-07-25 10:02:16,437 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,437 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,437 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:02:16,437 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,437 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,438 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:02:16,438 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,438 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,438 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,438 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,438 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:02:16,438 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,439 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,439 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,439 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,439 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,439 - DEBUG - ==== SSA block analysis pass on 500
2025-07-25 10:02:16,439 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000016AB7328C90>
2025-07-25 10:02:16,440 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:02:16,440 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:02:16,440 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,440 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,440 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,440 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,440 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,441 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:02:16,441 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,441 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,441 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:02:16,441 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,441 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,442 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,442 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,442 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,442 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,442 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,442 - DEBUG - ==== SSA block analysis pass on 646
2025-07-25 10:02:16,443 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000016AB7328C90>
2025-07-25 10:02:16,443 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,443 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,443 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,443 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,443 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,443 - DEBUG - ==== SSA block analysis pass on 648
2025-07-25 10:02:16,443 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000016AB7328C90>
2025-07-25 10:02:16,443 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,443 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,444 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:02:16,444 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,444 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,444 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:02:16,444 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,444 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,444 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,445 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,445 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:02:16,445 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,445 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,445 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,445 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,445 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,446 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,446 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,446 - DEBUG - ==== SSA block analysis pass on 778
2025-07-25 10:02:16,446 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000016AB7328C90>
2025-07-25 10:02:16,446 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,446 - DEBUG - ==== SSA block analysis pass on 782
2025-07-25 10:02:16,446 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000016AB7328C90>
2025-07-25 10:02:16,446 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,446 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,447 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,447 - DEBUG - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x0000016AB7391990>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x0000016AB7392190>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x0000016AB7392650>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x0000016AB73929D0>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x0000016AB7392B90>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x0000016AB7392D90>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x0000016AB7392F90>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x0000016AB7393AD0>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x0000016AB7398F90>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x0000016AB7399A90>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x0000016AB739AC90>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x0000016AB739B010>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x0000016AB739B210>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x0000016AB739A0D0>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x0000016AB7398090>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x0000016AB7398890>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000016AB739BD10>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000016AB739CC10>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000016AB739D850>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000016AB739E390>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000016AB7357BD0>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x0000016AB739F4D0>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x0000016AB73A4410>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x0000016AB73A5C50>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x0000016AB73A6050>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x0000016AB73A6310>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x0000016AB739FED0>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x0000016AB73A41D0>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x0000016AB73A50D0>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000016AB73A7310>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000016AB73A8090>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x0000016AB73905D0>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000016AB73A8BD0>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000016AB73A9B50>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x0000016AB73A8850>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x0000016AB7390F90>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x0000016AB7399F90>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x0000016AB739BB50>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x0000016AB739CA10>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x0000016AB73A70D0>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x0000016AB73A7E10>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x0000016AB73A9590>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x0000016AB73A9910>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x0000016AB739A7D0>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x0000016AB73A5710>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x0000016AB739E950>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x0000016AB73AA110>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x0000016AB7374190>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x0000016AB739B910>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x0000016AB739C7D0>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x0000016AB739CF50>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x0000016AB739E650>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x0000016AB73A6E90>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x0000016AB73A7C10>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x0000016AB73A82D0>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x0000016AB73A9E90>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x0000016AB7398590>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x0000016AB739A450>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x0000016AB739E150>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x0000016AB739D490>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x0000016AB73A4950>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x0000016AB73A4D90>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x0000016AB73A5310>,
                                   500)],
             '$const106.19.2': [(<numba.core.ir.Assign object at 0x0000016AB7391210>,
                                 0)],
             '$const132.23.2': [(<numba.core.ir.Assign object at 0x0000016AB7391BD0>,
                                 0)],
             '$const308.27.3': [(<numba.core.ir.Assign object at 0x0000016AB7399D90>,
                                 180)],
             '$const580.19.3': [(<numba.core.ir.Assign object at 0x0000016AB73A4B50>,
                                 500)],
             '$const744.28.3': [(<numba.core.ir.Assign object at 0x0000016AB73A9710>,
                                 648)],
             '$const782.0.0': [(<numba.core.ir.Assign object at 0x0000016AB73A91D0>,
                                782)],
             '$const80.15.2': [(<numba.core.ir.Assign object at 0x0000016AB7390890>,
                                0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x0000016AB7374110>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x0000016AB713D050>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x0000016AB71BFED0>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x0000016AB7393BD0>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x0000016AB726EA50>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x0000016AB73A5E50>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x0000016AB738BE10>, 0),
                     (<numba.core.ir.Assign object at 0x0000016AB7399890>, 180),
                     (<numba.core.ir.Assign object at 0x0000016AB73A4150>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x0000016AB738B490>, 0),
                      (<numba.core.ir.Assign object at 0x0000016AB7398790>,
                       180),
                      (<numba.core.ir.Assign object at 0x0000016AB73367D0>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x0000016AB7399950>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x0000016AB739A9D0>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x0000016AB738B7D0>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000016AB7398D50>,
                             180),
                            (<numba.core.ir.Assign object at 0x0000016AB739F210>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x0000016AB7382910>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000016AB7334D10>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000016AB7301D90>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x0000016AB73A6590>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x0000016AB73A5990>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x0000016AB738B210>, 0),
                   (<numba.core.ir.Assign object at 0x0000016AB7393E90>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x0000016AB7354D10>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x0000016AB7354BD0>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000016AB73453D0>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x0000016AB7354D90>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x0000016AB738BB10>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000016AB7399310>,
                         180),
                        (<numba.core.ir.Assign object at 0x0000016AB739FA10>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x0000016AB7345ED0>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x0000016AB7393210>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x0000016AB74EABD0>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x0000016AB73893D0>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000016AB7393790>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x0000016AB7390190>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000016AB739D1D0>,
                         376),
                        (<numba.core.ir.Assign object at 0x0000016AB73A8510>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x0000016AB73703D0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000016AB72EC9D0>, 0)]})
2025-07-25 10:02:16,459 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x0000016AB6FA4B50>
2025-07-25 10:02:16,459 - DEBUG - Fix SSA violator on var time_register
2025-07-25 10:02:16,459 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,459 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7335D10>
2025-07-25 10:02:16,459 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,460 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,460 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,460 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,460 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,460 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,461 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,461 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,461 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,461 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,461 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,462 - DEBUG - first assign: time_register
2025-07-25 10:02:16,462 - DEBUG - replaced with: time_register = const(float, 0.0)
2025-07-25 10:02:16,462 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,462 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,462 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,462 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,463 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,463 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,463 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,463 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,463 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,463 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,463 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,463 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,463 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,464 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,464 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,464 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,464 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,464 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,464 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,464 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,464 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,464 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7335D10>
2025-07-25 10:02:16,465 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,465 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,465 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7335D10>
2025-07-25 10:02:16,465 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,465 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,465 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,465 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,466 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,466 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,466 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7335D10>
2025-07-25 10:02:16,466 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,466 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,466 - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,467 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,467 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,467 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:02:16,467 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:02:16,467 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,467 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,467 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,467 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,468 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,468 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,468 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:02:16,468 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:02:16,468 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,468 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,468 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,468 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,468 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,469 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,469 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,469 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,469 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7335D10>
2025-07-25 10:02:16,469 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,469 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,469 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,469 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,470 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,470 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,470 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7335D10>
2025-07-25 10:02:16,470 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,470 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,471 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:02:16,471 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,471 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,471 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:02:16,471 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,471 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,471 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,471 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,471 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:02:16,472 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,472 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,472 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,472 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,472 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,472 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,472 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7335D10>
2025-07-25 10:02:16,472 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:02:16,472 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:02:16,473 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,473 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,473 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,473 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,473 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,473 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:02:16,473 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,473 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,474 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:02:16,474 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,474 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,474 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,475 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,475 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,475 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,475 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,475 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,475 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7335D10>
2025-07-25 10:02:16,475 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,475 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,476 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,476 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,476 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,476 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,476 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7335D10>
2025-07-25 10:02:16,476 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,476 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,476 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:02:16,476 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,476 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,477 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:02:16,477 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,477 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,477 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,477 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,477 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:02:16,477 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,477 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,477 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,478 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,478 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,478 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,478 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,478 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,478 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7335D10>
2025-07-25 10:02:16,479 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,479 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,480 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7335D10>
2025-07-25 10:02:16,480 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,480 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,480 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,480 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000016AB726CC50>],
             180: [<numba.core.ir.Assign object at 0x0000016AB7370B90>]})
2025-07-25 10:02:16,480 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,480 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB4E79550>
2025-07-25 10:02:16,481 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,481 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,481 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,481 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,481 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,481 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,481 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,481 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,482 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,482 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,482 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,482 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,482 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,482 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,483 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,483 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,483 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,483 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,483 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,483 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,484 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,484 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,484 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,484 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,484 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,484 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,484 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,484 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,485 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,485 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,485 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,485 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,485 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB4E79550>
2025-07-25 10:02:16,485 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,485 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,485 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB4E79550>
2025-07-25 10:02:16,486 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,486 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,486 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,486 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,486 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,486 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,486 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB4E79550>
2025-07-25 10:02:16,486 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,486 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,487 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,487 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,487 - DEBUG - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,487 - DEBUG - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,488 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:02:16,488 - DEBUG - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
2025-07-25 10:02:16,488 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:02:16,488 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:02:16,488 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,488 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,488 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,489 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,489 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,489 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,489 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:02:16,489 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:02:16,489 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,489 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,490 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,490 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,490 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,490 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,490 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,490 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,490 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB4E79550>
2025-07-25 10:02:16,490 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,491 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,491 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,491 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,491 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,491 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,491 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB4E79550>
2025-07-25 10:02:16,492 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,492 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,492 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:02:16,492 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,492 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,492 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:02:16,492 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,492 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,493 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,493 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,493 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:02:16,493 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,493 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,493 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,493 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,493 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,494 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,494 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB4E79550>
2025-07-25 10:02:16,494 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:02:16,494 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:02:16,494 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,494 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,494 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,494 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,495 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,495 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:02:16,495 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,495 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,496 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:02:16,496 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,496 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,496 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,496 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,496 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,497 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,497 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,497 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,497 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB4E79550>
2025-07-25 10:02:16,497 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,497 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,497 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,497 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,497 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,498 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,498 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB4E79550>
2025-07-25 10:02:16,498 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,498 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,498 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:02:16,498 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,498 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,498 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:02:16,498 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,499 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,499 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,499 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,499 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:02:16,499 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,499 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,500 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,500 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,500 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,500 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,500 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,501 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,501 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB4E79550>
2025-07-25 10:02:16,501 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,501 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,501 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB4E79550>
2025-07-25 10:02:16,501 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,501 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,501 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,501 - DEBUG - Fix SSA violator on var n
2025-07-25 10:02:16,501 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,502 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7373450>
2025-07-25 10:02:16,502 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,502 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,502 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,502 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,502 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,502 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,502 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,502 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,502 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,502 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,503 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,503 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,503 - DEBUG - first assign: n
2025-07-25 10:02:16,503 - DEBUG - replaced with: n = const(int, 0)
2025-07-25 10:02:16,503 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,503 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,504 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,504 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,504 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,504 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,504 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,504 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,504 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,504 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,505 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,505 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,505 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,505 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,505 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,505 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,505 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,505 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,506 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,506 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,506 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7373450>
2025-07-25 10:02:16,506 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,506 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,506 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7373450>
2025-07-25 10:02:16,506 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,506 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,506 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,507 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,507 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,507 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,507 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7373450>
2025-07-25 10:02:16,507 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,507 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,507 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,508 - DEBUG - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,508 - DEBUG - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,508 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:02:16,508 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:02:16,509 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,509 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,509 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,509 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,509 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,509 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,510 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:02:16,510 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:02:16,510 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,510 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,510 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,510 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,511 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,511 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,511 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,511 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,511 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7373450>
2025-07-25 10:02:16,511 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,511 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,512 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,512 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,512 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,512 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,512 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7373450>
2025-07-25 10:02:16,512 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,512 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,512 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:02:16,513 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,513 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,513 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:02:16,513 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,513 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,513 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,513 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,513 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:02:16,514 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,514 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,514 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,514 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,514 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,514 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,514 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7373450>
2025-07-25 10:02:16,514 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:02:16,515 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:02:16,515 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,515 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,515 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,515 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,515 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,515 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:02:16,515 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,516 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,516 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:02:16,516 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,516 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,516 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,517 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,517 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,517 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,517 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,517 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,517 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7373450>
2025-07-25 10:02:16,517 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,518 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,518 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,518 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,518 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,518 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,518 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7373450>
2025-07-25 10:02:16,518 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,518 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,518 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:02:16,518 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,519 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,519 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:02:16,519 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,519 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,519 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,519 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,519 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:02:16,519 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,520 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,520 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,520 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,520 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,520 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,521 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,521 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,521 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7373450>
2025-07-25 10:02:16,521 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,521 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,521 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7373450>
2025-07-25 10:02:16,521 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,522 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,522 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,522 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000016AB7345350>],
             180: [<numba.core.ir.Assign object at 0x0000016AB7334410>]})
2025-07-25 10:02:16,522 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,522 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB71A1350>
2025-07-25 10:02:16,522 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,522 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,523 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,523 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,523 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,523 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,523 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,523 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,523 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,523 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,523 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,524 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,524 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,524 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,524 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,524 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,524 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,524 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,525 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,525 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,525 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,525 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,525 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,525 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,525 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,525 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,525 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,526 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,526 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,526 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,526 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,526 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,526 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB71A1350>
2025-07-25 10:02:16,526 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,526 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,526 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB71A1350>
2025-07-25 10:02:16,527 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,527 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,527 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,527 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,527 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,527 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,528 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB71A1350>
2025-07-25 10:02:16,528 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,528 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,528 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,528 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,528 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:02:16,529 - DEBUG - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
2025-07-25 10:02:16,529 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:02:16,529 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:02:16,529 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,529 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,529 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,529 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,530 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,530 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,530 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:02:16,530 - DEBUG - find_def var='n' stmt=$binop_add310.28 = n + $const308.27.3
2025-07-25 10:02:16,530 - DEBUG - replaced with: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:02:16,530 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:02:16,530 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,531 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,531 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,531 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,531 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,531 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,531 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,531 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,531 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB71A1350>
2025-07-25 10:02:16,532 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,532 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,532 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,532 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,532 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,532 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,532 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB71A1350>
2025-07-25 10:02:16,532 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,532 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,533 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:02:16,533 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,533 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,533 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:02:16,533 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,533 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,534 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,534 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,534 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:02:16,534 - DEBUG - find_def var='n' stmt=$binop_sub468.27 = n - i
2025-07-25 10:02:16,534 - DEBUG - find_def_from_top label 376
2025-07-25 10:02:16,534 - DEBUG - idom 374 from label 376
2025-07-25 10:02:16,534 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:02:16,535 - DEBUG - find_def_from_top label 374
2025-07-25 10:02:16,535 - DEBUG - idom 180 from label 374
2025-07-25 10:02:16,535 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:02:16,535 - DEBUG - replaced with: $binop_sub468.27 = n.1 - i
2025-07-25 10:02:16,535 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,535 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,535 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,535 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,536 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,536 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,536 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB71A1350>
2025-07-25 10:02:16,536 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:02:16,536 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:02:16,536 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,536 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,536 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,536 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,537 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,537 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:02:16,537 - DEBUG - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
2025-07-25 10:02:16,537 - DEBUG - find_def_from_top label 500
2025-07-25 10:02:16,537 - DEBUG - idom 374 from label 500
2025-07-25 10:02:16,537 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:02:16,537 - DEBUG - find_def_from_top label 374
2025-07-25 10:02:16,538 - DEBUG - idom 180 from label 374
2025-07-25 10:02:16,538 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:02:16,538 - DEBUG - replaced with: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:02:16,538 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,538 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,538 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:02:16,538 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,538 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,539 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,539 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,539 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,539 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,539 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,539 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,539 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB71A1350>
2025-07-25 10:02:16,539 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,540 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,540 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,540 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,540 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,540 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,540 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB71A1350>
2025-07-25 10:02:16,540 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,540 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,541 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:02:16,541 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,541 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,541 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:02:16,541 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,542 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,542 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,542 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,542 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:02:16,542 - DEBUG - find_def var='n' stmt=$binop_add740.27 = n + k
2025-07-25 10:02:16,542 - DEBUG - find_def_from_top label 648
2025-07-25 10:02:16,542 - DEBUG - idom 646 from label 648
2025-07-25 10:02:16,542 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:02:16,542 - DEBUG - find_def_from_top label 646
2025-07-25 10:02:16,542 - DEBUG - idom 500 from label 646
2025-07-25 10:02:16,543 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:02:16,543 - DEBUG - find_def_from_top label 500
2025-07-25 10:02:16,543 - DEBUG - idom 374 from label 500
2025-07-25 10:02:16,543 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:02:16,543 - DEBUG - find_def_from_top label 374
2025-07-25 10:02:16,543 - DEBUG - idom 180 from label 374
2025-07-25 10:02:16,543 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:02:16,543 - DEBUG - replaced with: $binop_add740.27 = n.1 + k
2025-07-25 10:02:16,544 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,544 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,544 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,544 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,544 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,544 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,545 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,545 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,545 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB71A1350>
2025-07-25 10:02:16,545 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,545 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,545 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB71A1350>
2025-07-25 10:02:16,546 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,546 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,546 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,546 - DEBUG - Fix SSA violator on var frac
2025-07-25 10:02:16,546 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,546 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7388910>
2025-07-25 10:02:16,546 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,546 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,547 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,547 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,547 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,547 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,547 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,547 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,547 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,547 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,547 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,548 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,548 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,548 - DEBUG - first assign: frac
2025-07-25 10:02:16,548 - DEBUG - replaced with: frac = const(float, 0.0)
2025-07-25 10:02:16,548 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,548 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,548 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,548 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,548 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,548 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,548 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,549 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,549 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,549 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,549 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,549 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,549 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,549 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,550 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,550 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,550 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,550 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,550 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,551 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7388910>
2025-07-25 10:02:16,551 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,551 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,551 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7388910>
2025-07-25 10:02:16,551 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,551 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,551 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,551 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,551 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,552 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,552 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7388910>
2025-07-25 10:02:16,552 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,552 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,552 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,552 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,552 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:02:16,552 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:02:16,552 - DEBUG - replaced with: frac.1 = scale * $binop_sub234.12
2025-07-25 10:02:16,553 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,553 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,553 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,553 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,553 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,553 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,553 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:02:16,554 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:02:16,554 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,554 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,554 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,554 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,554 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,555 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,555 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,555 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,555 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7388910>
2025-07-25 10:02:16,555 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,555 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,555 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,555 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,555 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,556 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,556 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7388910>
2025-07-25 10:02:16,556 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,556 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,556 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:02:16,556 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,556 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,556 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:02:16,556 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,556 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,557 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,557 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,557 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:02:16,557 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,557 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,557 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,557 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,558 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,558 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,558 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7388910>
2025-07-25 10:02:16,558 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:02:16,558 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:02:16,558 - DEBUG - replaced with: frac.2 = $binop_sub504.3
2025-07-25 10:02:16,558 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,558 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,558 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,559 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,559 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,559 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:02:16,559 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,559 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,559 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:02:16,560 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,560 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,560 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,560 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,560 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,561 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,561 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,561 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,561 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7388910>
2025-07-25 10:02:16,561 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,561 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,562 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,562 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,562 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,562 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,562 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7388910>
2025-07-25 10:02:16,562 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,562 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,562 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:02:16,563 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,563 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,563 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:02:16,563 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,563 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,563 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,563 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,563 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:02:16,563 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,564 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,564 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,564 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,564 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,564 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,564 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,564 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7388910>
2025-07-25 10:02:16,565 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,565 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7388910>
2025-07-25 10:02:16,565 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,565 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,565 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,566 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000016AB73888D0>],
             180: [<numba.core.ir.Assign object at 0x0000016AB7371250>],
             500: [<numba.core.ir.Assign object at 0x0000016AB73A9BD0>]})
2025-07-25 10:02:16,566 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,566 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7391A10>
2025-07-25 10:02:16,566 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,566 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,567 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,567 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,567 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,567 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,567 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,567 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,567 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,567 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,567 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,568 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,568 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,568 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,568 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,568 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,568 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,568 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,568 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,568 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,568 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,569 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,569 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,569 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,569 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,569 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,569 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,569 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,570 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,570 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,570 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,570 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,570 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7391A10>
2025-07-25 10:02:16,571 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,571 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,571 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7391A10>
2025-07-25 10:02:16,571 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,571 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,571 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,571 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,571 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,572 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,572 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7391A10>
2025-07-25 10:02:16,572 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,572 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,572 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,572 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,572 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:02:16,572 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:02:16,573 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,573 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 10:02:16,573 - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-07-25 10:02:16,573 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,573 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,573 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,573 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,573 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,573 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:02:16,574 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:02:16,574 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,574 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,574 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,574 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,574 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,575 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,575 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,575 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,575 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7391A10>
2025-07-25 10:02:16,575 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,575 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,575 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,575 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,576 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,576 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,576 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7391A10>
2025-07-25 10:02:16,576 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,576 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,576 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:02:16,576 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,576 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,576 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:02:16,577 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,577 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,577 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,577 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,577 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:02:16,577 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,577 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,577 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,577 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,578 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,578 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,578 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7391A10>
2025-07-25 10:02:16,578 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:02:16,578 - DEBUG - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
2025-07-25 10:02:16,578 - DEBUG - find_def_from_top label 500
2025-07-25 10:02:16,578 - DEBUG - idom 374 from label 500
2025-07-25 10:02:16,578 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:02:16,579 - DEBUG - find_def_from_top label 374
2025-07-25 10:02:16,579 - DEBUG - idom 180 from label 374
2025-07-25 10:02:16,579 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:02:16,579 - DEBUG - replaced with: $binop_sub504.3 = scale - frac.1
2025-07-25 10:02:16,579 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:02:16,579 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:02:16,579 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 10:02:16,580 - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-07-25 10:02:16,580 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,580 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,580 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,580 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,580 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:02:16,580 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,580 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,581 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:02:16,581 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,581 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,581 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,581 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,581 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,581 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,581 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,582 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,582 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7391A10>
2025-07-25 10:02:16,582 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,582 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,582 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,582 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,582 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,582 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,583 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7391A10>
2025-07-25 10:02:16,583 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,583 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,583 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:02:16,583 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,583 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,583 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:02:16,583 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,584 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,584 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,584 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,584 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:02:16,584 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,584 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,584 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,585 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,585 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,585 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,585 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,585 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,585 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7391A10>
2025-07-25 10:02:16,585 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,585 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,586 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7391A10>
2025-07-25 10:02:16,586 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,586 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,586 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,586 - DEBUG - Fix SSA violator on var index_frac
2025-07-25 10:02:16,586 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,586 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7347350>
2025-07-25 10:02:16,586 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,586 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,587 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,587 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,587 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,587 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,587 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,587 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,587 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,588 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,588 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,588 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,588 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,588 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,588 - DEBUG - first assign: index_frac
2025-07-25 10:02:16,588 - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-07-25 10:02:16,588 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,588 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,589 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,589 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,589 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,589 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,589 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,589 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,589 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,589 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,589 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,590 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,590 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,590 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,590 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,590 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,590 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,590 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,590 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7347350>
2025-07-25 10:02:16,591 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,591 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,591 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7347350>
2025-07-25 10:02:16,591 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,591 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,592 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,592 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,592 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,592 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,592 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7347350>
2025-07-25 10:02:16,592 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,592 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,592 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,592 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,593 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:02:16,593 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:02:16,593 - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-07-25 10:02:16,593 - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-07-25 10:02:16,593 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,593 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,593 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,594 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,594 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,594 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:02:16,594 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:02:16,594 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,594 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,594 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,594 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,595 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,595 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,595 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,595 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7347350>
2025-07-25 10:02:16,596 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,596 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,596 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,596 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,596 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,596 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,596 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7347350>
2025-07-25 10:02:16,596 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,597 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,597 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:02:16,597 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,597 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,597 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:02:16,597 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,597 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,597 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,597 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,598 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:02:16,598 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,598 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,598 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,598 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,598 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,598 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,598 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7347350>
2025-07-25 10:02:16,598 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:02:16,598 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:02:16,599 - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-07-25 10:02:16,599 - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-07-25 10:02:16,599 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,599 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,599 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,599 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,599 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:02:16,599 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,600 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,600 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:02:16,600 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,600 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,600 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,601 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,601 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,601 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,601 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,601 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,601 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7347350>
2025-07-25 10:02:16,601 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,601 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,601 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,602 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,602 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,602 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,602 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7347350>
2025-07-25 10:02:16,602 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,602 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,602 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:02:16,602 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,602 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,602 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:02:16,602 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,603 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,603 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,603 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,603 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:02:16,603 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,603 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,603 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,603 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,604 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,604 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,604 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,604 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,604 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7347350>
2025-07-25 10:02:16,604 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,605 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,605 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7347350>
2025-07-25 10:02:16,605 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,605 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,605 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,605 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000016AB739D910>],
             180: [<numba.core.ir.Assign object at 0x0000016AB73701D0>],
             500: [<numba.core.ir.Assign object at 0x0000016AB73B0550>]})
2025-07-25 10:02:16,606 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,606 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB738AC90>
2025-07-25 10:02:16,606 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,606 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,606 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,606 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,606 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,606 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,607 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,607 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,607 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,607 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,607 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,607 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,607 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,607 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,607 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,608 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,608 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,608 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,608 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,608 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,608 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,609 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,609 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,609 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,609 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,609 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,609 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,609 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,609 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,609 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,610 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,610 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,610 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB738AC90>
2025-07-25 10:02:16,610 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,610 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,610 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB738AC90>
2025-07-25 10:02:16,610 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,610 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,610 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,611 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,611 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,611 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,611 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB738AC90>
2025-07-25 10:02:16,611 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,611 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,611 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,611 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,611 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:02:16,612 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:02:16,612 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:02:16,612 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,612 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,612 - DEBUG - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,612 - DEBUG - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,613 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,613 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 10:02:16,613 - DEBUG - replaced with: eta = index_frac.1 - offset
2025-07-25 10:02:16,613 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,613 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,613 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:02:16,613 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:02:16,613 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,614 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,614 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,614 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,614 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,614 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,614 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,614 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,615 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB738AC90>
2025-07-25 10:02:16,615 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,615 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,615 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,615 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,615 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,615 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,615 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB738AC90>
2025-07-25 10:02:16,615 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,615 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,616 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:02:16,616 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,616 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,616 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:02:16,616 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,617 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,617 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,617 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,617 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:02:16,617 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,617 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,617 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,617 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,618 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,618 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB738AC90>
2025-07-25 10:02:16,618 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:02:16,618 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:02:16,618 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:02:16,618 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,618 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,618 - DEBUG - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,619 - DEBUG - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,619 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:02:16,619 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 10:02:16,619 - DEBUG - replaced with: eta = index_frac.2 - offset
2025-07-25 10:02:16,619 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,619 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:02:16,619 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,620 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,620 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:02:16,620 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,620 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,621 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,621 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,621 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,622 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,622 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,623 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,623 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB738AC90>
2025-07-25 10:02:16,623 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,623 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,624 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,624 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,624 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,625 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,625 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB738AC90>
2025-07-25 10:02:16,625 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,625 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,626 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:02:16,626 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,626 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,626 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:02:16,627 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,627 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,627 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,627 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,628 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:02:16,628 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,628 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,628 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,629 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,629 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,629 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,630 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,630 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,630 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB738AC90>
2025-07-25 10:02:16,630 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,631 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,631 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB738AC90>
2025-07-25 10:02:16,631 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,631 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,631 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,632 - DEBUG - Fix SSA violator on var offset
2025-07-25 10:02:16,632 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,632 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB4E79550>
2025-07-25 10:02:16,632 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,632 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,633 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,633 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,633 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,633 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,634 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,634 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,634 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,634 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,635 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,635 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,635 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,635 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,636 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,636 - DEBUG - first assign: offset
2025-07-25 10:02:16,636 - DEBUG - replaced with: offset = const(int, 0)
2025-07-25 10:02:16,636 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,636 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,637 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,637 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,637 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,637 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,638 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,638 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,638 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,638 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,638 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,639 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,639 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,639 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,639 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,640 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,640 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,640 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB4E79550>
2025-07-25 10:02:16,640 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,640 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,640 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB4E79550>
2025-07-25 10:02:16,641 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,641 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,641 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,641 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,641 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,641 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,641 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB4E79550>
2025-07-25 10:02:16,642 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,642 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,642 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,642 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,642 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:02:16,642 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:02:16,642 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:02:16,642 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,643 - DEBUG - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,643 - DEBUG - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,643 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 10:02:16,643 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,643 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,643 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:02:16,643 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:02:16,644 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,644 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,644 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,644 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,644 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,644 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,644 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,644 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,645 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB4E79550>
2025-07-25 10:02:16,645 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,645 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,645 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,645 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,645 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,646 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,646 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB4E79550>
2025-07-25 10:02:16,646 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,646 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,646 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:02:16,647 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,647 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,647 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:02:16,647 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,647 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,648 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,648 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,648 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:02:16,648 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,648 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,648 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,649 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,649 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,649 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,649 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB4E79550>
2025-07-25 10:02:16,650 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:02:16,650 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:02:16,650 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:02:16,650 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,650 - DEBUG - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,650 - DEBUG - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,651 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 10:02:16,651 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,651 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:02:16,651 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,651 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,651 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:02:16,651 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,651 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,651 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,652 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,652 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,652 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,652 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,652 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB4E79550>
2025-07-25 10:02:16,652 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,652 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,652 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,652 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,653 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,653 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,653 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB4E79550>
2025-07-25 10:02:16,653 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,653 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,653 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:02:16,653 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,653 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,653 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:02:16,654 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,654 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,654 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,654 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,654 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:02:16,654 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,655 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,655 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,655 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,655 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,655 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,655 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,655 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,655 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB4E79550>
2025-07-25 10:02:16,656 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,656 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,656 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB4E79550>
2025-07-25 10:02:16,656 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,656 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,656 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,656 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000016AB73A9C10>],
             180: [<numba.core.ir.Assign object at 0x0000016AB73B0710>],
             500: [<numba.core.ir.Assign object at 0x0000016AB73B0B50>]})
2025-07-25 10:02:16,657 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,657 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,657 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,657 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,657 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,657 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,657 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,657 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,657 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,658 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,658 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,658 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,658 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,658 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,658 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,658 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,659 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,659 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,659 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,659 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,659 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,659 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,659 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,659 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,659 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,660 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,660 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,660 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,660 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,660 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,660 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,660 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,660 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,661 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,661 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,661 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,661 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,661 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,661 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,661 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,661 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,661 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,662 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,662 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,662 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,662 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,662 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,662 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,663 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:02:16,663 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:02:16,663 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:02:16,663 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,663 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,663 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 10:02:16,663 - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-07-25 10:02:16,663 - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-07-25 10:02:16,664 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,664 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,664 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:02:16,664 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:02:16,664 - DEBUG - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
2025-07-25 10:02:16,664 - DEBUG - replaced with: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:02:16,664 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,664 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,665 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,665 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,665 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,665 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,665 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,665 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,665 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,665 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,665 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,666 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,666 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,666 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,666 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,666 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,666 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,666 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,666 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:02:16,667 - DEBUG - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:02:16,667 - DEBUG - find_def_from_top label 376
2025-07-25 10:02:16,667 - DEBUG - idom 374 from label 376
2025-07-25 10:02:16,667 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:02:16,667 - DEBUG - find_def_from_top label 374
2025-07-25 10:02:16,667 - DEBUG - idom 180 from label 374
2025-07-25 10:02:16,667 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:02:16,667 - DEBUG - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:02:16,667 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,668 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,668 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:02:16,668 - DEBUG - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:02:16,668 - DEBUG - find_def_from_top label 376
2025-07-25 10:02:16,668 - DEBUG - idom 374 from label 376
2025-07-25 10:02:16,668 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:02:16,668 - DEBUG - find_def_from_top label 374
2025-07-25 10:02:16,668 - DEBUG - idom 180 from label 374
2025-07-25 10:02:16,668 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:02:16,669 - DEBUG - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:02:16,669 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,669 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,669 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,669 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,669 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:02:16,669 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,669 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,669 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,670 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,670 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,670 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,670 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,670 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:02:16,670 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:02:16,671 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:02:16,671 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,671 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,671 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 10:02:16,671 - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-07-25 10:02:16,671 - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-07-25 10:02:16,671 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,672 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:02:16,672 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,672 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,672 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:02:16,672 - DEBUG - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
2025-07-25 10:02:16,672 - DEBUG - replaced with: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:02:16,672 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,672 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,673 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,673 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,673 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,673 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,673 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,673 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,673 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,673 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,673 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,674 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,674 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,674 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,674 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,674 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,674 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,674 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,674 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:02:16,675 - DEBUG - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:02:16,675 - DEBUG - find_def_from_top label 648
2025-07-25 10:02:16,675 - DEBUG - idom 646 from label 648
2025-07-25 10:02:16,675 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:02:16,675 - DEBUG - find_def_from_top label 646
2025-07-25 10:02:16,675 - DEBUG - idom 500 from label 646
2025-07-25 10:02:16,675 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:02:16,675 - DEBUG - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:02:16,675 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,676 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,676 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:02:16,676 - DEBUG - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:02:16,676 - DEBUG - find_def_from_top label 648
2025-07-25 10:02:16,676 - DEBUG - idom 646 from label 648
2025-07-25 10:02:16,676 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:02:16,676 - DEBUG - find_def_from_top label 646
2025-07-25 10:02:16,676 - DEBUG - idom 500 from label 646
2025-07-25 10:02:16,676 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:02:16,677 - DEBUG - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:02:16,677 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,677 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,677 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,677 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,677 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:02:16,677 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,677 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,678 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,678 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,678 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,678 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,678 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,678 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,678 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,678 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,679 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,679 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,679 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,679 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,679 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,679 - DEBUG - Fix SSA violator on var eta
2025-07-25 10:02:16,679 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,679 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7321710>
2025-07-25 10:02:16,679 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,680 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,680 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,680 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,680 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,680 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,680 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,680 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,681 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,681 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,681 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,681 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,681 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,681 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,681 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,681 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,681 - DEBUG - first assign: eta
2025-07-25 10:02:16,681 - DEBUG - replaced with: eta = const(float, 0.0)
2025-07-25 10:02:16,682 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,682 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,682 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,682 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,682 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,682 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,682 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,682 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,683 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,683 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,683 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,683 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,683 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,683 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,683 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,683 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,684 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7321710>
2025-07-25 10:02:16,684 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,684 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,684 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7321710>
2025-07-25 10:02:16,684 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,684 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,684 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,684 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,684 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,685 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,685 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7321710>
2025-07-25 10:02:16,685 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,685 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,685 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,685 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,685 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:02:16,685 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:02:16,685 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:02:16,686 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,686 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,686 - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-07-25 10:02:16,686 - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-07-25 10:02:16,686 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,686 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,686 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:02:16,686 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:02:16,686 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,687 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,687 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,687 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,687 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,687 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,688 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,688 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,688 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7321710>
2025-07-25 10:02:16,688 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,688 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,688 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,688 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,688 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,688 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,688 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7321710>
2025-07-25 10:02:16,689 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,689 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,689 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:02:16,689 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,689 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,689 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:02:16,689 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,689 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,689 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,689 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,690 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:02:16,690 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,690 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,690 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,690 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,690 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,690 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,690 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7321710>
2025-07-25 10:02:16,691 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:02:16,691 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:02:16,691 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:02:16,691 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,691 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,692 - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-07-25 10:02:16,692 - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-07-25 10:02:16,692 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,692 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:02:16,692 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,692 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,692 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:02:16,692 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,692 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,693 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,693 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,693 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,693 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,693 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,693 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,693 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7321710>
2025-07-25 10:02:16,693 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,693 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,693 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,694 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,694 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,694 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,694 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7321710>
2025-07-25 10:02:16,694 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,694 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,694 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:02:16,694 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,694 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,695 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:02:16,695 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,695 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,695 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,696 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,696 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:02:16,696 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,696 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,696 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,696 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,696 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,696 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,697 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,697 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,697 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7321710>
2025-07-25 10:02:16,697 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,697 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,697 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB7321710>
2025-07-25 10:02:16,697 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,697 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,697 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,697 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000016AB738AC90>],
             180: [<numba.core.ir.Assign object at 0x0000016AB73B0D10>],
             500: [<numba.core.ir.Assign object at 0x0000016AB73B14D0>]})
2025-07-25 10:02:16,698 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,698 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A8C90>
2025-07-25 10:02:16,698 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,698 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,698 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,698 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,699 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,699 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,699 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,699 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,699 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,699 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,700 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,700 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,700 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,700 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,700 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,700 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,701 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,701 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,701 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,701 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,701 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,701 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,701 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,701 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,701 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,702 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,702 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,702 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,702 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,702 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,702 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,702 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,702 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A8C90>
2025-07-25 10:02:16,702 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,702 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,703 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A8C90>
2025-07-25 10:02:16,703 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,703 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,703 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,704 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,704 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,704 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,704 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A8C90>
2025-07-25 10:02:16,704 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,704 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,704 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,705 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,705 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:02:16,705 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:02:16,705 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:02:16,705 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,705 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,706 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:02:16,706 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,706 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,706 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:02:16,706 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:02:16,706 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,706 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,706 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,706 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,707 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,707 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,707 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,707 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,707 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A8C90>
2025-07-25 10:02:16,707 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,707 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,707 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,708 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,708 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,708 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,708 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A8C90>
2025-07-25 10:02:16,708 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,708 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,708 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:02:16,709 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,709 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,709 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:02:16,709 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,709 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,709 - DEBUG - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:02:16,709 - DEBUG - find_def_from_top label 376
2025-07-25 10:02:16,709 - DEBUG - idom 374 from label 376
2025-07-25 10:02:16,710 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:02:16,710 - DEBUG - find_def_from_top label 374
2025-07-25 10:02:16,710 - DEBUG - idom 180 from label 374
2025-07-25 10:02:16,710 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:02:16,710 - DEBUG - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:02:16,710 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,710 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,710 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:02:16,711 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,711 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,711 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,711 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,711 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,711 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,712 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A8C90>
2025-07-25 10:02:16,712 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:02:16,712 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:02:16,712 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:02:16,712 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,713 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,713 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:02:16,713 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,713 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:02:16,713 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,713 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,713 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:02:16,713 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,714 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,714 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,714 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,714 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,714 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,714 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,714 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,715 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A8C90>
2025-07-25 10:02:16,715 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,715 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,715 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,715 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,715 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,715 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,715 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A8C90>
2025-07-25 10:02:16,715 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,716 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,716 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:02:16,716 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,716 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,716 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:02:16,717 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,717 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,717 - DEBUG - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:02:16,717 - DEBUG - find_def_from_top label 648
2025-07-25 10:02:16,717 - DEBUG - idom 646 from label 648
2025-07-25 10:02:16,717 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:02:16,717 - DEBUG - find_def_from_top label 646
2025-07-25 10:02:16,717 - DEBUG - idom 500 from label 646
2025-07-25 10:02:16,717 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:02:16,717 - DEBUG - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:02:16,718 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,718 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,718 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:02:16,718 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,718 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,718 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,718 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,718 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,718 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,719 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,719 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,719 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A8C90>
2025-07-25 10:02:16,719 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,719 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,719 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB73A8C90>
2025-07-25 10:02:16,719 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,719 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,719 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,720 - DEBUG - Fix SSA violator on var weight
2025-07-25 10:02:16,720 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,720 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,720 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,720 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,721 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,721 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,721 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,721 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,721 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,721 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,722 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,722 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,722 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,722 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,722 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,722 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,722 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,722 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,722 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,723 - DEBUG - first assign: weight
2025-07-25 10:02:16,723 - DEBUG - replaced with: weight = const(float, 0.0)
2025-07-25 10:02:16,723 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,723 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,723 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,723 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,723 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,723 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,723 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,723 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,724 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,724 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,724 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,724 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,724 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,724 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,724 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,725 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,725 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,725 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,725 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,725 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,725 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,725 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,725 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,726 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,726 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,726 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,726 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,726 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,726 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,726 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,726 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:02:16,727 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:02:16,727 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:02:16,727 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,727 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,727 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:02:16,727 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,727 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,727 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:02:16,727 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:02:16,728 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,728 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,728 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,728 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,728 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,728 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,729 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,729 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,729 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,729 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,729 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,729 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,729 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,730 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,730 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,730 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,730 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,730 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,730 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:02:16,730 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,730 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,730 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:02:16,731 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,731 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:02:16,731 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,731 - DEBUG - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,731 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,731 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:02:16,731 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,732 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,732 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,732 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,732 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,732 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,732 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,732 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:02:16,732 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:02:16,732 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:02:16,733 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,733 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,733 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:02:16,733 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,733 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:02:16,733 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,733 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,734 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:02:16,734 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,734 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,734 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,734 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,734 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,734 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,735 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,735 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,735 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,735 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,735 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,735 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,735 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,735 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,736 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,736 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,736 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,736 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,736 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:02:16,736 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,736 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,736 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:02:16,736 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,737 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:02:16,737 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,737 - DEBUG - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,737 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,737 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:02:16,738 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,738 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,738 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,738 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,738 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,738 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,738 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,738 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,739 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,739 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,739 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,739 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000016AB73A9D10>
2025-07-25 10:02:16,739 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,739 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,739 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:16,740 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000016AB73AB1D0>],
             376: [<numba.core.ir.Assign object at 0x0000016AB73B19D0>],
             648: [<numba.core.ir.Assign object at 0x0000016AB73B1B90>]})
2025-07-25 10:02:16,740 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:02:16,740 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7380710>
2025-07-25 10:02:16,740 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:02:16,740 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:02:16,740 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:02:16,741 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:02:16,741 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:02:16,741 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:02:16,741 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:02:16,741 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:02:16,741 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:02:16,742 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,742 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:02:16,742 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:02:16,742 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:02:16,742 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:02:16,742 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:02:16,742 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:02:16,742 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:02:16,742 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:02:16,743 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:02:16,743 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,743 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:02:16,743 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:02:16,743 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,743 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:02:16,743 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:02:16,743 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:02:16,743 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:02:16,744 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,744 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:02:16,744 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:02:16,744 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,744 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:02:16,744 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7380710>
2025-07-25 10:02:16,744 - DEBUG - on stmt: jump 178
2025-07-25 10:02:16,744 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:02:16,745 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7380710>
2025-07-25 10:02:16,745 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:02:16,745 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:02:16,745 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:02:16,745 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:02:16,745 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:02:16,746 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:02:16,746 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7380710>
2025-07-25 10:02:16,746 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:02:16,746 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,746 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:02:16,746 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,746 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:02:16,747 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:02:16,747 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:02:16,747 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:02:16,747 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,747 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:02:16,747 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:02:16,747 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:02:16,747 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:02:16,748 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:02:16,748 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:02:16,748 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,748 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:02:16,748 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,748 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:02:16,748 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:02:16,748 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,748 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:02:16,749 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7380710>
2025-07-25 10:02:16,749 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:02:16,749 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:02:16,749 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:02:16,749 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:02:16,749 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:02:16,749 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:02:16,750 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7380710>
2025-07-25 10:02:16,750 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:02:16,750 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:02:16,750 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:02:16,750 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,750 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:02:16,750 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:02:16,751 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,751 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:02:16,751 - DEBUG - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:02:16,751 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,751 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:02:16,751 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:02:16,751 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,752 - DEBUG - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:02:16,752 - DEBUG - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
2025-07-25 10:02:16,752 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,752 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:02:16,752 - DEBUG - on stmt: jump 374
2025-07-25 10:02:16,752 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:02:16,752 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7380710>
2025-07-25 10:02:16,752 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:02:16,752 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:02:16,753 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:02:16,753 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:02:16,753 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,753 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:02:16,753 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:02:16,753 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:02:16,753 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:02:16,754 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:02:16,754 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:02:16,754 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:02:16,754 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,754 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:02:16,754 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:02:16,755 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:02:16,755 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:02:16,755 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,755 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:02:16,755 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7380710>
2025-07-25 10:02:16,755 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:02:16,755 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:02:16,756 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:02:16,756 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:02:16,756 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:02:16,756 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:02:16,756 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7380710>
2025-07-25 10:02:16,756 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:02:16,756 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:02:16,756 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:02:16,756 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:02:16,756 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:02:16,757 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:02:16,757 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:02:16,757 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:02:16,757 - DEBUG - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:02:16,757 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:02:16,757 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:02:16,757 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:02:16,757 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:02:16,757 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:02:16,758 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,758 - DEBUG - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:02:16,758 - DEBUG - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
2025-07-25 10:02:16,758 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:02:16,758 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:02:16,758 - DEBUG - on stmt: jump 646
2025-07-25 10:02:16,759 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:02:16,759 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7380710>
2025-07-25 10:02:16,759 - DEBUG - on stmt: jump 176
2025-07-25 10:02:16,759 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:02:16,759 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000016AB7380710>
2025-07-25 10:02:16,759 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:02:16,759 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:02:16,759 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:02:17,287 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-07-25 10:02:17,288 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:02:17,288 - DEBUG - stack: []
2025-07-25 10:02:17,289 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:02:17,289 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-07-25 10:02:17,289 - DEBUG - stack []
2025-07-25 10:02:17,289 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-07-25 10:02:17,290 - DEBUG - stack []
2025-07-25 10:02:17,290 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:02:17,290 - DEBUG - stack []
2025-07-25 10:02:17,290 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-07-25 10:02:17,290 - DEBUG - stack ['$x4.0']
2025-07-25 10:02:17,291 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:02:17,291 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-07-25 10:02:17,291 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:02:17,291 - DEBUG - stack ['$8binary_subscr.2']
2025-07-25 10:02:17,291 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-07-25 10:02:17,291 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-07-25 10:02:17,292 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:02:17,292 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-07-25 10:02:17,292 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-07-25 10:02:17,292 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-07-25 10:02:17,293 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-07-25 10:02:17,293 - DEBUG - stack ['$binop_add32.6']
2025-07-25 10:02:17,293 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:02:17,293 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-07-25 10:02:17,293 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-07-25 10:02:17,294 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-07-25 10:02:17,294 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:02:17,294 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-07-25 10:02:17,294 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-07-25 10:02:17,294 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-07-25 10:02:17,294 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-07-25 10:02:17,294 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-07-25 10:02:17,295 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-07-25 10:02:17,295 - DEBUG - stack ['$binop_sub56.12']
2025-07-25 10:02:17,295 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 10:02:17,295 - DEBUG - stack []
2025-07-25 10:02:17,295 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-07-25 10:02:17,296 - DEBUG - stack ['$x62.13']
2025-07-25 10:02:17,296 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 10:02:17,296 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-07-25 10:02:17,296 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 10:02:17,296 - DEBUG - stack ['$66binary_subscr.15']
2025-07-25 10:02:17,297 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-07-25 10:02:17,297 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-07-25 10:02:17,297 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 10:02:17,297 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-07-25 10:02:17,297 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-07-25 10:02:17,297 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-07-25 10:02:17,298 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-07-25 10:02:17,298 - DEBUG - stack ['$binop_sub90.19']
2025-07-25 10:02:17,298 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-07-25 10:02:17,298 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-07-25 10:02:17,299 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-07-25 10:02:17,299 - DEBUG - stack ['$binop_truediv96.21']
2025-07-25 10:02:17,299 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 10:02:17,299 - DEBUG - stack []
2025-07-25 10:02:17,299 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 10:02:17,299 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-07-25 10:02:17,300 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-07-25 10:02:17,300 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-07-25 10:02:17,300 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-07-25 10:02:17,300 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 10:02:17,300 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-07-25 10:02:17,301 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 10:02:17,301 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 10:02:17,301 - DEBUG - stack ['$130call.26']
2025-07-25 10:02:17,301 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 10:02:17,301 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-07-25 10:02:17,302 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-07-25 10:02:17,302 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-07-25 10:02:17,302 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-07-25 10:02:17,302 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 10:02:17,302 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-07-25 10:02:17,302 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 10:02:17,303 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-07-25 10:02:17,303 - DEBUG - stack ['$130call.26', '$168call.31']
2025-07-25 10:02:17,303 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-07-25 10:02:17,303 - DEBUG - stack ['$178compare_op.32']
2025-07-25 10:02:17,303 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-25 10:02:17,304 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-25 10:02:17,304 - DEBUG - stack: []
2025-07-25 10:02:17,304 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-07-25 10:02:17,304 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-07-25 10:02:17,304 - DEBUG - stack []
2025-07-25 10:02:17,305 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-07-25 10:02:17,305 - DEBUG - stack ['$const186.0.4']
2025-07-25 10:02:17,305 - DEBUG - end state. edges=[]
2025-07-25 10:02:17,305 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-07-25 10:02:17,305 - DEBUG - stack: []
2025-07-25 10:02:17,306 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-25 10:02:17,306 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-07-25 10:02:17,306 - DEBUG - stack []
2025-07-25 10:02:17,306 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-07-25 10:02:17,306 - DEBUG - stack ['$b190.0']
2025-07-25 10:02:17,307 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-07-25 10:02:17,307 - DEBUG - stack ['$192unary_negative.1']
2025-07-25 10:02:17,307 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-07-25 10:02:17,307 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-07-25 10:02:17,307 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-07-25 10:02:17,307 - DEBUG - stack ['$binop_truediv196.3']
2025-07-25 10:02:17,308 - DEBUG - end state. edges=[]
2025-07-25 10:02:17,308 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:02:17,308 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-25 10:02:17,309 - DEBUG - defmap: {}
2025-07-25 10:02:17,309 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:02:17,309 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:02:17,309 - DEBUG - keep phismap: {}
2025-07-25 10:02:17,309 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 10:02:17,310 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:02:17,310 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-07-25 10:02:17,310 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:02:17,311 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:02:17,312 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-07-25 10:02:17,389 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 10:02:44,317 - INFO - Tags gespeichert für: data\03. Der Sandmann (Feat. Chakuza & Saad).mp3
2025-07-25 10:02:44,318 - ERROR - Fehler bei der Verarbeitung von data\03. Der Sandmann (Feat. Chakuza & Saad).mp3: 'NoneType' object is not subscriptable
2025-07-25 10:02:44,319 - INFO - Verarbeite Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:02:44,319 - INFO - Beginne Verarbeitung der Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:02:44,324 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Untergrund (Feat. Eko Fresh)
2025-07-25 10:02:44,324 - INFO - Lade und speichere Lyrics für: Bushido - Untergrund (Feat. Eko Fresh)
2025-07-25 10:02:44,328 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:02:44,554 - DEBUG - https://genius.com:443 "GET /bushido-untergrund-lyrics HTTP/1.1" 301 None
2025-07-25 10:02:44,910 - DEBUG - https://genius.com:443 "GET /Bushido-untergrund-lyrics HTTP/1.1" 200 None
2025-07-25 10:02:45,183 - DEBUG - BPM-Wert ermittelt: 172
2025-07-25 10:03:12,059 - INFO - Tags gespeichert für: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:03:12,059 - ERROR - Fehler bei der Verarbeitung von data\05. Untergrund (Feat. Eko Fresh).mp3: 'NoneType' object is not subscriptable
2025-07-25 10:03:12,060 - INFO - Verarbeite Datei: data\08. Das Leben ist hart.mp3
2025-07-25 10:03:12,060 - INFO - Beginne Verarbeitung der Datei: data\08. Das Leben ist hart.mp3
2025-07-25 10:03:12,065 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Das Leben ist hart
2025-07-25 10:03:12,065 - INFO - Lade und speichere Lyrics für: Bushido - Das Leben ist hart
2025-07-25 10:03:12,069 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:03:12,456 - DEBUG - https://genius.com:443 "GET /bushido-das-leben-ist-hart-lyrics HTTP/1.1" 301 None
2025-07-25 10:03:13,446 - DEBUG - https://genius.com:443 "GET /Bushido-das-leben-ist-hart-lyrics HTTP/1.1" 200 None
2025-07-25 10:03:13,712 - DEBUG - BPM-Wert ermittelt: 83
2025-07-25 10:03:40,591 - INFO - Tags gespeichert für: data\08. Das Leben ist hart.mp3
2025-07-25 10:03:40,591 - ERROR - Fehler bei der Verarbeitung von data\08. Das Leben ist hart.mp3: 'NoneType' object is not subscriptable
2025-07-25 10:03:40,592 - INFO - Verarbeite Datei: data\09. Hast du was bist du was.mp3
2025-07-25 10:03:40,592 - INFO - Beginne Verarbeitung der Datei: data\09. Hast du was bist du was.mp3
2025-07-25 10:03:40,595 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Hast du was bist du was
2025-07-25 10:03:40,595 - INFO - Lade und speichere Lyrics für: Bushido - Hast du was bist du was
2025-07-25 10:03:40,597 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:03:40,816 - DEBUG - https://genius.com:443 "GET /bushido-hast-du-was-bist-du-was-lyrics HTTP/1.1" 301 None
2025-07-25 10:03:41,168 - DEBUG - https://genius.com:443 "GET /Bushido-hast-du-was-bist-du-was-lyrics HTTP/1.1" 200 None
2025-07-25 10:03:41,436 - DEBUG - BPM-Wert ermittelt: 129
2025-07-25 10:04:06,433 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 10:06:18,045 - DEBUG - Starte die Anwendung...
2025-07-25 10:06:18,045 - INFO - Verarbeite MP3-Datei...
2025-07-25 10:06:18,045 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 10:06:18,049 - DEBUG - Using proactor: IocpProactor
2025-07-25 10:06:18,052 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 10:06:18,206 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 10:06:18,224 - DEBUG - Using proactor: IocpProactor
2025-07-25 10:06:18,318 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 10:06:18,401 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=None socket_options=None
2025-07-25 10:06:18,402 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000012C2419EFD0>
2025-07-25 10:06:18,402 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 10:06:18,402 - DEBUG - send_request_headers.complete
2025-07-25 10:06:18,403 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 10:06:18,403 - DEBUG - send_request_body.complete
2025-07-25 10:06:18,403 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 10:06:18,403 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 08:06:18 GMT'), (b'server', b'uvicorn'), (b'content-length', b'4'), (b'content-type', b'application/json')])
2025-07-25 10:06:18,404 - INFO - HTTP Request: GET http://127.0.0.1:7860/gradio_api/startup-events "HTTP/1.1 200 OK"
2025-07-25 10:06:18,404 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 10:06:18,404 - DEBUG - receive_response_body.complete
2025-07-25 10:06:18,404 - DEBUG - response_closed.started
2025-07-25 10:06:18,404 - DEBUG - response_closed.complete
2025-07-25 10:06:18,404 - DEBUG - close.started
2025-07-25 10:06:18,404 - DEBUG - close.complete
2025-07-25 10:06:18,405 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=3 socket_options=None
2025-07-25 10:06:18,416 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000012C24075C10>
2025-07-25 10:06:18,416 - DEBUG - send_request_headers.started request=<Request [b'HEAD']>
2025-07-25 10:06:18,416 - DEBUG - send_request_headers.complete
2025-07-25 10:06:18,417 - DEBUG - send_request_body.started request=<Request [b'HEAD']>
2025-07-25 10:06:18,417 - DEBUG - send_request_body.complete
2025-07-25 10:06:18,417 - DEBUG - receive_response_headers.started request=<Request [b'HEAD']>
2025-07-25 10:06:18,426 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 08:06:18 GMT'), (b'server', b'uvicorn'), (b'content-length', b'26551'), (b'content-type', b'text/html; charset=utf-8')])
2025-07-25 10:06:18,427 - INFO - HTTP Request: HEAD http://127.0.0.1:7860/ "HTTP/1.1 200 OK"
2025-07-25 10:06:18,427 - DEBUG - receive_response_body.started request=<Request [b'HEAD']>
2025-07-25 10:06:18,427 - DEBUG - receive_response_body.complete
2025-07-25 10:06:18,427 - DEBUG - response_closed.started
2025-07-25 10:06:18,427 - DEBUG - response_closed.complete
2025-07-25 10:06:18,427 - DEBUG - close.started
2025-07-25 10:06:18,428 - DEBUG - close.complete
2025-07-25 10:06:18,429 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 10:06:18,432 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000012C24089A90>
2025-07-25 10:06:18,432 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000012C23D8F530> server_hostname='api.gradio.app' timeout=3
2025-07-25 10:06:18,584 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/launched HTTP/1.1" 200 0
2025-07-25 10:06:18,780 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000012C23F1A3D0>
2025-07-25 10:06:18,780 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 10:06:18,781 - DEBUG - send_request_headers.complete
2025-07-25 10:06:18,781 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 10:06:18,781 - DEBUG - send_request_body.complete
2025-07-25 10:06:18,781 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 10:06:18,952 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 08:06:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 10:06:18,952 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 10:06:18,952 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 10:06:18,952 - DEBUG - receive_response_body.complete
2025-07-25 10:06:18,953 - DEBUG - response_closed.started
2025-07-25 10:06:18,953 - DEBUG - response_closed.complete
2025-07-25 10:06:18,953 - DEBUG - close.started
2025-07-25 10:06:18,953 - DEBUG - close.complete
2025-07-25 10:06:58,640 - DEBUG - matplotlib data path: Z:\AI\software\miniconda3\envs\ace-data_env\Lib\site-packages\matplotlib\mpl-data
2025-07-25 10:06:58,643 - DEBUG - CONFIGDIR=C:\Users\methm\.matplotlib
2025-07-25 10:06:58,644 - DEBUG - interactive is False
2025-07-25 10:06:58,645 - DEBUG - platform is win32
2025-07-25 10:06:58,681 - DEBUG - CACHEDIR=C:\Users\methm\.matplotlib
2025-07-25 10:06:58,689 - DEBUG - Using fontManager instance from C:\Users\methm\.matplotlib\fontlist-v390.json
2025-07-25 10:06:58,816 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 10:06:58,816 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 10:06:58,817 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 10:06:58,817 - INFO - Verarbeite Datei: data\03. Der Sandmann (Feat. Chakuza & Saad).mp3
2025-07-25 10:06:58,817 - INFO - Beginne Verarbeitung der Datei: data\03. Der Sandmann (Feat. Chakuza & Saad).mp3
2025-07-25 10:06:58,820 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Der Sandmann (Feat. Chakuza & Saad)
2025-07-25 10:06:58,821 - INFO - Lade und speichere Lyrics für: Bushido - Der Sandmann (Feat. Chakuza & Saad)
2025-07-25 10:06:58,822 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:06:59,035 - DEBUG - https://genius.com:443 "GET /bushido-der-sandmann-lyrics HTTP/1.1" 301 None
2025-07-25 10:06:59,074 - DEBUG - https://genius.com:443 "GET /Bushido-der-sandmann-lyrics HTTP/1.1" 200 None
2025-07-25 10:06:59,170 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
2025-07-25 10:06:59,171 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:06:59,171 - DEBUG - stack: []
2025-07-25 10:06:59,171 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:06:59,172 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-07-25 10:06:59,172 - DEBUG - stack []
2025-07-25 10:06:59,172 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
2025-07-25 10:06:59,172 - DEBUG - stack []
2025-07-25 10:06:59,172 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
2025-07-25 10:06:59,172 - DEBUG - stack []
2025-07-25 10:06:59,173 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
2025-07-25 10:06:59,173 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 10:06:59,173 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
2025-07-25 10:06:59,173 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2025-07-25 10:06:59,173 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
2025-07-25 10:06:59,173 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
2025-07-25 10:06:59,173 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
2025-07-25 10:06:59,173 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
2025-07-25 10:06:59,174 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
2025-07-25 10:06:59,174 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
2025-07-25 10:06:59,174 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
2025-07-25 10:06:59,174 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
2025-07-25 10:06:59,174 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
2025-07-25 10:06:59,174 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
2025-07-25 10:06:59,174 - DEBUG - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
2025-07-25 10:06:59,174 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 10:06:59,175 - DEBUG - dispatch pc=34, inst=CALL(arg=7, lineno=86)
2025-07-25 10:06:59,175 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 10:06:59,175 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
2025-07-25 10:06:59,175 - DEBUG - stack ['$34call.9']
2025-07-25 10:06:59,175 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
2025-07-25 10:06:59,175 - DEBUG - stack []
2025-07-25 10:06:59,176 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
2025-07-25 10:06:59,176 - DEBUG - stack ['$const46.10.0']
2025-07-25 10:06:59,176 - DEBUG - end state. edges=[]
2025-07-25 10:06:59,176 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:06:59,176 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-25 10:06:59,177 - DEBUG - defmap: {}
2025-07-25 10:06:59,177 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:06:59,177 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:06:59,177 - DEBUG - keep phismap: {}
2025-07-25 10:06:59,177 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 10:06:59,178 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:06:59,178 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10.0'}), (48, {'retval': '$const46.10.0', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:06:59,179 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000012C261423E0>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10.0 = const(NoneType, None)    ['$const46.10.0']
    $48return_value.11 = cast(value=$const46.10.0) ['$48return_value.11', '$const46.10.0']
    return $48return_value.11                ['$48return_value.11']

2025-07-25 10:06:59,180 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 10:06:59,181 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000012C261BA490>
2025-07-25 10:06:59,181 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,181 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,181 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,181 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,181 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,182 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,182 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,182 - DEBUG - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000012C261423E0>))
2025-07-25 10:06:59,182 - DEBUG - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,182 - DEBUG - on stmt: $const46.10.0 = const(NoneType, None)
2025-07-25 10:06:59,182 - DEBUG - on stmt: $48return_value.11 = cast(value=$const46.10.0)
2025-07-25 10:06:59,182 - DEBUG - on stmt: return $48return_value.11
2025-07-25 10:06:59,183 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x0000012C261BABD0>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x0000012C261BA890>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000012C261BBB90>,
                                  0)],
             '$const46.10.0': [(<numba.core.ir.Assign object at 0x0000012C261BAA10>,
                                0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000012C261EC0D0>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000012C261EC290>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000012C261B9690>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x0000012C261BBF90>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x0000012C261EC350>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x0000012C261EC210>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000012C261BBF50>, 0)]})
2025-07-25 10:06:59,184 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x0000012C261BA490>
2025-07-25 10:06:59,186 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
2025-07-25 10:06:59,191 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:06:59,191 - DEBUG - stack: []
2025-07-25 10:06:59,191 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:06:59,191 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-07-25 10:06:59,192 - DEBUG - stack []
2025-07-25 10:06:59,192 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
2025-07-25 10:06:59,192 - DEBUG - stack []
2025-07-25 10:06:59,192 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
2025-07-25 10:06:59,192 - DEBUG - stack []
2025-07-25 10:06:59,192 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
2025-07-25 10:06:59,192 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 10:06:59,192 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
2025-07-25 10:06:59,192 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
2025-07-25 10:06:59,193 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
2025-07-25 10:06:59,193 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
2025-07-25 10:06:59,193 - DEBUG - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
2025-07-25 10:06:59,193 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 10:06:59,193 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=9)
2025-07-25 10:06:59,193 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 10:06:59,193 - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
2025-07-25 10:06:59,193 - DEBUG - stack ['$28call.5']
2025-07-25 10:06:59,193 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
2025-07-25 10:06:59,193 - DEBUG - stack []
2025-07-25 10:06:59,193 - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
2025-07-25 10:06:59,193 - DEBUG - stack ['$const40.6.1']
2025-07-25 10:06:59,194 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
2025-07-25 10:06:59,194 - DEBUG - stack []
2025-07-25 10:06:59,194 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
2025-07-25 10:06:59,194 - DEBUG - stack ['$const44.7.2']
2025-07-25 10:06:59,194 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
2025-07-25 10:06:59,194 - DEBUG - stack []
2025-07-25 10:06:59,194 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
2025-07-25 10:06:59,194 - DEBUG - stack ['$const48.8.1']
2025-07-25 10:06:59,194 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
2025-07-25 10:06:59,194 - DEBUG - stack []
2025-07-25 10:06:59,194 - DEBUG - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
2025-07-25 10:06:59,194 - DEBUG - stack ['$const52.9.1']
2025-07-25 10:06:59,194 - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
2025-07-25 10:06:59,194 - DEBUG - stack []
2025-07-25 10:06:59,194 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
2025-07-25 10:06:59,194 - DEBUG - stack ['$const56.10.2']
2025-07-25 10:06:59,195 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
2025-07-25 10:06:59,195 - DEBUG - stack []
2025-07-25 10:06:59,195 - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
2025-07-25 10:06:59,195 - DEBUG - stack ['$const60.11.1']
2025-07-25 10:06:59,195 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
2025-07-25 10:06:59,195 - DEBUG - stack []
2025-07-25 10:06:59,195 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
2025-07-25 10:06:59,195 - DEBUG - stack ['$const64.12.1']
2025-07-25 10:06:59,196 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
2025-07-25 10:06:59,196 - DEBUG - stack []
2025-07-25 10:06:59,196 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
2025-07-25 10:06:59,196 - DEBUG - stack ['$interp_win68.13']
2025-07-25 10:06:59,196 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
2025-07-25 10:06:59,196 - DEBUG - stack ['$70load_attr.14']
2025-07-25 10:06:59,196 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-07-25 10:06:59,196 - DEBUG - stack ['$70load_attr.14', '$const80.15.2']
2025-07-25 10:06:59,196 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
2025-07-25 10:06:59,196 - DEBUG - stack ['$82binary_subscr.16']
2025-07-25 10:06:59,196 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
2025-07-25 10:06:59,196 - DEBUG - stack []
2025-07-25 10:06:59,197 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
2025-07-25 10:06:59,197 - DEBUG - stack ['$x94.17']
2025-07-25 10:06:59,197 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
2025-07-25 10:06:59,197 - DEBUG - stack ['$96load_attr.18']
2025-07-25 10:06:59,197 - DEBUG - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-07-25 10:06:59,197 - DEBUG - stack ['$96load_attr.18', '$const106.19.2']
2025-07-25 10:06:59,197 - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
2025-07-25 10:06:59,197 - DEBUG - stack ['$108binary_subscr.20']
2025-07-25 10:06:59,197 - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
2025-07-25 10:06:59,197 - DEBUG - stack []
2025-07-25 10:06:59,197 - DEBUG - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
2025-07-25 10:06:59,197 - DEBUG - stack ['$t_out120.21']
2025-07-25 10:06:59,198 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
2025-07-25 10:06:59,198 - DEBUG - stack ['$122load_attr.22']
2025-07-25 10:06:59,198 - DEBUG - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-07-25 10:06:59,198 - DEBUG - stack ['$122load_attr.22', '$const132.23.2']
2025-07-25 10:06:59,198 - DEBUG - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
2025-07-25 10:06:59,198 - DEBUG - stack ['$134binary_subscr.24']
2025-07-25 10:06:59,198 - DEBUG - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
2025-07-25 10:06:59,198 - DEBUG - stack []
2025-07-25 10:06:59,198 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
2025-07-25 10:06:59,198 - DEBUG - stack ['$null$146.26', '$146load_global.25']
2025-07-25 10:06:59,198 - DEBUG - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
2025-07-25 10:06:59,198 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 10:06:59,198 - DEBUG - dispatch pc=164, inst=CALL(arg=1, lineno=23)
2025-07-25 10:06:59,198 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 10:06:59,199 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
2025-07-25 10:06:59,199 - DEBUG - stack ['$164call.28']
2025-07-25 10:06:59,199 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
2025-07-25 10:06:59,199 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2025-07-25 10:06:59,199 - DEBUG - stack: ['$phi176.0']
2025-07-25 10:06:59,199 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2025-07-25 10:06:59,199 - DEBUG - dispatch pc=176, inst=NOP(arg=1, lineno=23)
2025-07-25 10:06:59,199 - DEBUG - stack ['$phi176.0']
2025-07-25 10:06:59,199 - DEBUG - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
2025-07-25 10:06:59,200 - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=1)])
2025-07-25 10:06:59,200 - DEBUG - stack: ['$phi178.0']
2025-07-25 10:06:59,200 - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=1)
2025-07-25 10:06:59,200 - DEBUG - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
2025-07-25 10:06:59,200 - DEBUG - stack ['$phi178.0']
2025-07-25 10:06:59,200 - DEBUG - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
2025-07-25 10:06:59,200 - DEBUG - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
2025-07-25 10:06:59,200 - DEBUG - stack: []
2025-07-25 10:06:59,200 - DEBUG - state.pc_initial: State(pc_initial=782 nstack_initial=0)
2025-07-25 10:06:59,200 - DEBUG - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
2025-07-25 10:06:59,201 - DEBUG - stack []
2025-07-25 10:06:59,201 - DEBUG - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
2025-07-25 10:06:59,201 - DEBUG - stack ['$const782.0.0']
2025-07-25 10:06:59,201 - DEBUG - end state. edges=[]
2025-07-25 10:06:59,201 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2025-07-25 10:06:59,201 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2025-07-25 10:06:59,201 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2025-07-25 10:06:59,201 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
2025-07-25 10:06:59,201 - DEBUG - stack ['$phi180.0', '$phi180.1']
2025-07-25 10:06:59,201 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
2025-07-25 10:06:59,201 - DEBUG - stack ['$phi180.0']
2025-07-25 10:06:59,201 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
2025-07-25 10:06:59,201 - DEBUG - stack ['$phi180.0', '$t_out182.2']
2025-07-25 10:06:59,201 - DEBUG - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-07-25 10:06:59,201 - DEBUG - stack ['$phi180.0', '$t_out182.2', '$t184.3']
2025-07-25 10:06:59,202 - DEBUG - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
2025-07-25 10:06:59,202 - DEBUG - stack ['$phi180.0', '$186binary_subscr.4']
2025-07-25 10:06:59,202 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
2025-07-25 10:06:59,202 - DEBUG - stack ['$phi180.0']
2025-07-25 10:06:59,202 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
2025-07-25 10:06:59,202 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
2025-07-25 10:06:59,202 - DEBUG - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
2025-07-25 10:06:59,202 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 10:06:59,202 - DEBUG - dispatch pc=216, inst=CALL(arg=1, lineno=27)
2025-07-25 10:06:59,202 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 10:06:59,203 - DEBUG - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
2025-07-25 10:06:59,203 - DEBUG - stack ['$phi180.0', '$216call.8']
2025-07-25 10:06:59,203 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
2025-07-25 10:06:59,203 - DEBUG - stack ['$phi180.0']
2025-07-25 10:06:59,203 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
2025-07-25 10:06:59,203 - DEBUG - stack ['$phi180.0', '$scale228.9']
2025-07-25 10:06:59,203 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
2025-07-25 10:06:59,203 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
2025-07-25 10:06:59,203 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
2025-07-25 10:06:59,203 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
2025-07-25 10:06:59,204 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
2025-07-25 10:06:59,204 - DEBUG - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
2025-07-25 10:06:59,204 - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
2025-07-25 10:06:59,204 - DEBUG - stack ['$phi180.0', '$binop_mul238.13']
2025-07-25 10:06:59,204 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
2025-07-25 10:06:59,204 - DEBUG - stack ['$phi180.0']
2025-07-25 10:06:59,204 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
2025-07-25 10:06:59,204 - DEBUG - stack ['$phi180.0', '$frac244.14']
2025-07-25 10:06:59,204 - DEBUG - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
2025-07-25 10:06:59,204 - DEBUG - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
2025-07-25 10:06:59,204 - DEBUG - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
2025-07-25 10:06:59,204 - DEBUG - stack ['$phi180.0', '$binop_mul248.16']
2025-07-25 10:06:59,205 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
2025-07-25 10:06:59,205 - DEBUG - stack ['$phi180.0']
2025-07-25 10:06:59,205 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
2025-07-25 10:06:59,205 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
2025-07-25 10:06:59,205 - DEBUG - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
2025-07-25 10:06:59,205 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 10:06:59,205 - DEBUG - dispatch pc=272, inst=CALL(arg=1, lineno=34)
2025-07-25 10:06:59,205 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 10:06:59,205 - DEBUG - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
2025-07-25 10:06:59,205 - DEBUG - stack ['$phi180.0', '$272call.20']
2025-07-25 10:06:59,205 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
2025-07-25 10:06:59,205 - DEBUG - stack ['$phi180.0']
2025-07-25 10:06:59,206 - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
2025-07-25 10:06:59,206 - DEBUG - stack ['$phi180.0', '$index_frac284.21']
2025-07-25 10:06:59,206 - DEBUG - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
2025-07-25 10:06:59,206 - DEBUG - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
2025-07-25 10:06:59,206 - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
2025-07-25 10:06:59,206 - DEBUG - stack ['$phi180.0', '$binop_sub288.23']
2025-07-25 10:06:59,206 - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
2025-07-25 10:06:59,206 - DEBUG - stack ['$phi180.0']
2025-07-25 10:06:59,206 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
2025-07-25 10:06:59,206 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
2025-07-25 10:06:59,206 - DEBUG - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
2025-07-25 10:06:59,206 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
2025-07-25 10:06:59,206 - DEBUG - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
2025-07-25 10:06:59,206 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27.3']
2025-07-25 10:06:59,207 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
2025-07-25 10:06:59,207 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
2025-07-25 10:06:59,207 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
2025-07-25 10:06:59,207 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
2025-07-25 10:06:59,207 - DEBUG - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
2025-07-25 10:06:59,207 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
2025-07-25 10:06:59,208 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
2025-07-25 10:06:59,208 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
2025-07-25 10:06:59,208 - DEBUG - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
2025-07-25 10:06:59,208 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
2025-07-25 10:06:59,208 - DEBUG - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
2025-07-25 10:06:59,208 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 10:06:59,208 - DEBUG - dispatch pc=332, inst=CALL(arg=2, lineno=40)
2025-07-25 10:06:59,208 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 10:06:59,209 - DEBUG - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
2025-07-25 10:06:59,209 - DEBUG - stack ['$phi180.0', '$332call.34']
2025-07-25 10:06:59,209 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
2025-07-25 10:06:59,209 - DEBUG - stack ['$phi180.0']
2025-07-25 10:06:59,209 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
2025-07-25 10:06:59,209 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
2025-07-25 10:06:59,209 - DEBUG - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
2025-07-25 10:06:59,209 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 10:06:59,209 - DEBUG - dispatch pc=362, inst=CALL(arg=1, lineno=41)
2025-07-25 10:06:59,209 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 10:06:59,209 - DEBUG - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
2025-07-25 10:06:59,209 - DEBUG - stack ['$phi180.0', '$362call.38']
2025-07-25 10:06:59,210 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
2025-07-25 10:06:59,210 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2)])
2025-07-25 10:06:59,210 - DEBUG - stack: ['$phi374.0', '$phi374.1']
2025-07-25 10:06:59,210 - DEBUG - state.pc_initial: State(pc_initial=374 nstack_initial=2)
2025-07-25 10:06:59,210 - DEBUG - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
2025-07-25 10:06:59,210 - DEBUG - stack ['$phi374.0', '$phi374.1']
2025-07-25 10:06:59,210 - DEBUG - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
2025-07-25 10:06:59,210 - DEBUG - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
2025-07-25 10:06:59,210 - DEBUG - stack: ['$phi500.0']
2025-07-25 10:06:59,210 - DEBUG - state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-07-25 10:06:59,210 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
2025-07-25 10:06:59,210 - DEBUG - stack ['$phi500.0']
2025-07-25 10:06:59,210 - DEBUG - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
2025-07-25 10:06:59,211 - DEBUG - stack ['$phi500.0', '$scale500.1']
2025-07-25 10:06:59,211 - DEBUG - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
2025-07-25 10:06:59,211 - DEBUG - stack ['$phi500.0', '$scale500.1', '$frac502.2']
2025-07-25 10:06:59,211 - DEBUG - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
2025-07-25 10:06:59,211 - DEBUG - stack ['$phi500.0', '$binop_sub504.3']
2025-07-25 10:06:59,211 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
2025-07-25 10:06:59,211 - DEBUG - stack ['$phi500.0']
2025-07-25 10:06:59,211 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
2025-07-25 10:06:59,211 - DEBUG - stack ['$phi500.0', '$frac510.4']
2025-07-25 10:06:59,211 - DEBUG - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
2025-07-25 10:06:59,211 - DEBUG - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
2025-07-25 10:06:59,211 - DEBUG - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
2025-07-25 10:06:59,212 - DEBUG - stack ['$phi500.0', '$binop_mul514.6']
2025-07-25 10:06:59,212 - DEBUG - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
2025-07-25 10:06:59,212 - DEBUG - stack ['$phi500.0']
2025-07-25 10:06:59,212 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
2025-07-25 10:06:59,212 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
2025-07-25 10:06:59,212 - DEBUG - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
2025-07-25 10:06:59,212 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 10:06:59,212 - DEBUG - dispatch pc=538, inst=CALL(arg=1, lineno=54)
2025-07-25 10:06:59,212 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 10:06:59,213 - DEBUG - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
2025-07-25 10:06:59,213 - DEBUG - stack ['$phi500.0', '$538call.10']
2025-07-25 10:06:59,213 - DEBUG - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
2025-07-25 10:06:59,213 - DEBUG - stack ['$phi500.0']
2025-07-25 10:06:59,213 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
2025-07-25 10:06:59,213 - DEBUG - stack ['$phi500.0', '$index_frac550.11']
2025-07-25 10:06:59,213 - DEBUG - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
2025-07-25 10:06:59,213 - DEBUG - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
2025-07-25 10:06:59,213 - DEBUG - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
2025-07-25 10:06:59,213 - DEBUG - stack ['$phi500.0', '$binop_sub554.13']
2025-07-25 10:06:59,213 - DEBUG - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
2025-07-25 10:06:59,213 - DEBUG - stack ['$phi500.0']
2025-07-25 10:06:59,214 - DEBUG - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
2025-07-25 10:06:59,214 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
2025-07-25 10:06:59,214 - DEBUG - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
2025-07-25 10:06:59,214 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
2025-07-25 10:06:59,214 - DEBUG - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:06:59,214 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
2025-07-25 10:06:59,214 - DEBUG - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
2025-07-25 10:06:59,214 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
2025-07-25 10:06:59,214 - DEBUG - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:06:59,214 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19.3']
2025-07-25 10:06:59,214 - DEBUG - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
2025-07-25 10:06:59,214 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
2025-07-25 10:06:59,214 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
2025-07-25 10:06:59,215 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
2025-07-25 10:06:59,215 - DEBUG - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:06:59,215 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
2025-07-25 10:06:59,215 - DEBUG - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
2025-07-25 10:06:59,215 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
2025-07-25 10:06:59,215 - DEBUG - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
2025-07-25 10:06:59,215 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
2025-07-25 10:06:59,215 - DEBUG - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
2025-07-25 10:06:59,215 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 10:06:59,215 - DEBUG - dispatch pc=604, inst=CALL(arg=2, lineno=60)
2025-07-25 10:06:59,215 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 10:06:59,216 - DEBUG - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
2025-07-25 10:06:59,216 - DEBUG - stack ['$phi500.0', '$604call.26']
2025-07-25 10:06:59,216 - DEBUG - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
2025-07-25 10:06:59,216 - DEBUG - stack ['$phi500.0']
2025-07-25 10:06:59,216 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
2025-07-25 10:06:59,216 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
2025-07-25 10:06:59,216 - DEBUG - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
2025-07-25 10:06:59,216 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 10:06:59,216 - DEBUG - dispatch pc=634, inst=CALL(arg=1, lineno=61)
2025-07-25 10:06:59,216 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 10:06:59,216 - DEBUG - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
2025-07-25 10:06:59,217 - DEBUG - stack ['$phi500.0', '$634call.30']
2025-07-25 10:06:59,217 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
2025-07-25 10:06:59,217 - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:06:59,217 - DEBUG - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 10:06:59,217 - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=3)
2025-07-25 10:06:59,217 - DEBUG - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
2025-07-25 10:06:59,217 - DEBUG - stack ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 10:06:59,217 - DEBUG - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
2025-07-25 10:06:59,217 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:06:59,217 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
2025-07-25 10:06:59,218 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
2025-07-25 10:06:59,218 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
2025-07-25 10:06:59,218 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
2025-07-25 10:06:59,218 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
2025-07-25 10:06:59,218 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
2025-07-25 10:06:59,218 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
2025-07-25 10:06:59,218 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
2025-07-25 10:06:59,218 - DEBUG - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 10:06:59,218 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
2025-07-25 10:06:59,218 - DEBUG - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-07-25 10:06:59,218 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
2025-07-25 10:06:59,218 - DEBUG - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
2025-07-25 10:06:59,218 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
2025-07-25 10:06:59,218 - DEBUG - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
2025-07-25 10:06:59,219 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
2025-07-25 10:06:59,219 - DEBUG - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
2025-07-25 10:06:59,219 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
2025-07-25 10:06:59,219 - DEBUG - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
2025-07-25 10:06:59,219 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
2025-07-25 10:06:59,219 - DEBUG - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
2025-07-25 10:06:59,219 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
2025-07-25 10:06:59,219 - DEBUG - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 10:06:59,219 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
2025-07-25 10:06:59,219 - DEBUG - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
2025-07-25 10:06:59,219 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
2025-07-25 10:06:59,219 - DEBUG - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-07-25 10:06:59,220 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
2025-07-25 10:06:59,220 - DEBUG - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 10:06:59,220 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
2025-07-25 10:06:59,220 - DEBUG - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 10:06:59,220 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
2025-07-25 10:06:59,220 - DEBUG - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
2025-07-25 10:06:59,220 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
2025-07-25 10:06:59,220 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
2025-07-25 10:06:59,220 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:06:59,220 - DEBUG - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
2025-07-25 10:06:59,220 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20']
2025-07-25 10:06:59,220 - DEBUG - dispatch pc=446, inst=COPY(arg=2, lineno=47)
2025-07-25 10:06:59,221 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
2025-07-25 10:06:59,221 - DEBUG - dispatch pc=448, inst=COPY(arg=2, lineno=47)
2025-07-25 10:06:59,221 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
2025-07-25 10:06:59,221 - DEBUG - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 10:06:59,221 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
2025-07-25 10:06:59,221 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
2025-07-25 10:06:59,221 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
2025-07-25 10:06:59,221 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
2025-07-25 10:06:59,221 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
2025-07-25 10:06:59,221 - DEBUG - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
2025-07-25 10:06:59,221 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
2025-07-25 10:06:59,221 - DEBUG - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
2025-07-25 10:06:59,222 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
2025-07-25 10:06:59,222 - DEBUG - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
2025-07-25 10:06:59,222 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
2025-07-25 10:06:59,222 - DEBUG - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 10:06:59,222 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
2025-07-25 10:06:59,222 - DEBUG - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
2025-07-25 10:06:59,222 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
2025-07-25 10:06:59,223 - DEBUG - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
2025-07-25 10:06:59,223 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
2025-07-25 10:06:59,223 - DEBUG - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
2025-07-25 10:06:59,223 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
2025-07-25 10:06:59,223 - DEBUG - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
2025-07-25 10:06:59,223 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
2025-07-25 10:06:59,223 - DEBUG - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-07-25 10:06:59,223 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
2025-07-25 10:06:59,223 - DEBUG - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
2025-07-25 10:06:59,223 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:06:59,224 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
2025-07-25 10:06:59,224 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
2025-07-25 10:06:59,224 - DEBUG - stack: ['$phi646.0', '$phi646.1']
2025-07-25 10:06:59,224 - DEBUG - state.pc_initial: State(pc_initial=646 nstack_initial=2)
2025-07-25 10:06:59,224 - DEBUG - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
2025-07-25 10:06:59,224 - DEBUG - stack ['$phi646.0', '$phi646.1']
2025-07-25 10:06:59,224 - DEBUG - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
2025-07-25 10:06:59,224 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 10:06:59,224 - DEBUG - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 10:06:59,225 - DEBUG - stack: ['$phi778.0']
2025-07-25 10:06:59,225 - DEBUG - state.pc_initial: State(pc_initial=778 nstack_initial=1)
2025-07-25 10:06:59,225 - DEBUG - dispatch pc=778, inst=NOP(arg=1, lineno=61)
2025-07-25 10:06:59,225 - DEBUG - stack ['$phi778.0']
2025-07-25 10:06:59,225 - DEBUG - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
2025-07-25 10:06:59,225 - DEBUG - stack ['$phi778.0']
2025-07-25 10:06:59,225 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
2025-07-25 10:06:59,225 - DEBUG - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
2025-07-25 10:06:59,225 - DEBUG - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 10:06:59,225 - DEBUG - state.pc_initial: State(pc_initial=648 nstack_initial=3)
2025-07-25 10:06:59,225 - DEBUG - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
2025-07-25 10:06:59,225 - DEBUG - stack ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 10:06:59,225 - DEBUG - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
2025-07-25 10:06:59,226 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:06:59,226 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
2025-07-25 10:06:59,226 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
2025-07-25 10:06:59,226 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
2025-07-25 10:06:59,226 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
2025-07-25 10:06:59,226 - DEBUG - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
2025-07-25 10:06:59,226 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
2025-07-25 10:06:59,226 - DEBUG - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
2025-07-25 10:06:59,226 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
2025-07-25 10:06:59,226 - DEBUG - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 10:06:59,226 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
2025-07-25 10:06:59,226 - DEBUG - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-07-25 10:06:59,227 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
2025-07-25 10:06:59,227 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
2025-07-25 10:06:59,227 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
2025-07-25 10:06:59,227 - DEBUG - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
2025-07-25 10:06:59,227 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
2025-07-25 10:06:59,227 - DEBUG - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
2025-07-25 10:06:59,227 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
2025-07-25 10:06:59,227 - DEBUG - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
2025-07-25 10:06:59,227 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
2025-07-25 10:06:59,227 - DEBUG - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
2025-07-25 10:06:59,227 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
2025-07-25 10:06:59,228 - DEBUG - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 10:06:59,228 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
2025-07-25 10:06:59,228 - DEBUG - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
2025-07-25 10:06:59,228 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
2025-07-25 10:06:59,228 - DEBUG - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-07-25 10:06:59,228 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
2025-07-25 10:06:59,228 - DEBUG - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 10:06:59,228 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
2025-07-25 10:06:59,228 - DEBUG - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 10:06:59,229 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
2025-07-25 10:06:59,229 - DEBUG - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
2025-07-25 10:06:59,229 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
2025-07-25 10:06:59,229 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
2025-07-25 10:06:59,229 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:06:59,229 - DEBUG - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
2025-07-25 10:06:59,229 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20']
2025-07-25 10:06:59,229 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=66)
2025-07-25 10:06:59,229 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
2025-07-25 10:06:59,229 - DEBUG - dispatch pc=720, inst=COPY(arg=2, lineno=66)
2025-07-25 10:06:59,230 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
2025-07-25 10:06:59,230 - DEBUG - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 10:06:59,230 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
2025-07-25 10:06:59,230 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
2025-07-25 10:06:59,230 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
2025-07-25 10:06:59,230 - DEBUG - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
2025-07-25 10:06:59,230 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
2025-07-25 10:06:59,230 - DEBUG - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
2025-07-25 10:06:59,230 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
2025-07-25 10:06:59,230 - DEBUG - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
2025-07-25 10:06:59,230 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
2025-07-25 10:06:59,230 - DEBUG - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 10:06:59,230 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
2025-07-25 10:06:59,231 - DEBUG - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
2025-07-25 10:06:59,231 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
2025-07-25 10:06:59,231 - DEBUG - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 10:06:59,231 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28.3']
2025-07-25 10:06:59,231 - DEBUG - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 10:06:59,231 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
2025-07-25 10:06:59,231 - DEBUG - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
2025-07-25 10:06:59,231 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
2025-07-25 10:06:59,231 - DEBUG - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
2025-07-25 10:06:59,231 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
2025-07-25 10:06:59,231 - DEBUG - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
2025-07-25 10:06:59,232 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
2025-07-25 10:06:59,232 - DEBUG - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
2025-07-25 10:06:59,232 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
2025-07-25 10:06:59,232 - DEBUG - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-07-25 10:06:59,232 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
2025-07-25 10:06:59,232 - DEBUG - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
2025-07-25 10:06:59,232 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:06:59,232 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
2025-07-25 10:06:59,232 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:06:59,233 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:06:59,233 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:06:59,233 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
2025-07-25 10:06:59,233 - DEBUG - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
2025-07-25 10:06:59,234 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
2025-07-25 10:06:59,235 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:06:59,237 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:06:59,238 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:06:59,239 - DEBUG - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
2025-07-25 10:06:59,239 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
2025-07-25 10:06:59,240 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:06:59,240 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6.1'}), (42, {'value': '$const40.6.1'}), (44, {'res': '$const44.7.2'}), (46, {'value': '$const44.7.2'}), (48, {'res': '$const48.8.1'}), (50, {'value': '$const48.8.1'}), (52, {'res': '$const52.9.1'}), (54, {'value': '$const52.9.1'}), (56, {'res': '$const56.10.2'}), (58, {'value': '$const56.10.2'}), (60, {'res': '$const60.11.1'}), (62, {'value': '$const60.11.1'}), (64, {'res': '$const64.12.1'}), (66, {'value': '$const64.12.1'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15.2'}), (82, {'index': '$const80.15.2', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19.2'}), (108, {'index': '$const106.19.2', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23.2'}), (134, {'index': '$const132.23.2', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
2025-07-25 10:06:59,240 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
2025-07-25 10:06:59,240 - DEBUG - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
2025-07-25 10:06:59,241 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27.3'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27.3', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
2025-07-25 10:06:59,241 - DEBUG - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
2025-07-25 10:06:59,241 - DEBUG - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
2025-07-25 10:06:59,242 - DEBUG - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19.3'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19.3', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
2025-07-25 10:06:59,242 - DEBUG - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
2025-07-25 10:06:59,243 - DEBUG - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28.3'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28.3', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
2025-07-25 10:06:59,243 - DEBUG - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
2025-07-25 10:06:59,243 - DEBUG - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0.0'}), (784, {'retval': '$const782.0.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:06:59,245 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15.2 = const(int, 0)            ['$const80.15.2']
    nwin = getitem(value=$70load_attr.14, index=$const80.15.2, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15.2', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19.2 = const(int, 0)           ['$const106.19.2']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19.2, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19.2', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23.2 = const(int, 0)           ['$const132.23.2']
    n_out = getitem(value=$122load_attr.22, index=$const132.23.2, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23.2', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27.3 = const(int, 1)           ['$const308.27.3']
    $binop_add310.28 = n + $const308.27.3    ['$binop_add310.28', '$const308.27.3', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19.3 = const(int, 1)           ['$const580.19.3']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19.3 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19.3']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28.3 = const(int, 1)           ['$const744.28.3']
    $binop_add746.29 = $binop_add740.27 + $const744.28.3 ['$binop_add740.27', '$binop_add746.29', '$const744.28.3']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0.0 = const(NoneType, None)    ['$const782.0.0']
    $784return_value.1 = cast(value=$const782.0.0) ['$784return_value.1', '$const782.0.0']
    return $784return_value.1                ['$784return_value.1']

2025-07-25 10:06:59,262 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 10:06:59,262 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000012C26167C90>
2025-07-25 10:06:59,262 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,262 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,262 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,263 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,263 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,263 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,263 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,263 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,263 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,263 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,263 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,263 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,263 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,263 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,263 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,263 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,264 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,264 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,264 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,264 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,264 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,264 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,265 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,265 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,265 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,265 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,265 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,265 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,266 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,266 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,266 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,266 - DEBUG - ==== SSA block analysis pass on 176
2025-07-25 10:06:59,266 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000012C26167C90>
2025-07-25 10:06:59,266 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,266 - DEBUG - ==== SSA block analysis pass on 178
2025-07-25 10:06:59,266 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000012C26167C90>
2025-07-25 10:06:59,267 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,267 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,267 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,267 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,267 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,267 - DEBUG - ==== SSA block analysis pass on 180
2025-07-25 10:06:59,267 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000012C26167C90>
2025-07-25 10:06:59,267 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,267 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,267 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,267 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,268 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:06:59,268 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:06:59,268 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,268 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,268 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,268 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,268 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,268 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,269 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:06:59,269 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:06:59,269 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,269 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,269 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,269 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,269 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,269 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,269 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,269 - DEBUG - ==== SSA block analysis pass on 374
2025-07-25 10:06:59,269 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000012C26167C90>
2025-07-25 10:06:59,270 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,270 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,270 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,270 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,270 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,270 - DEBUG - ==== SSA block analysis pass on 376
2025-07-25 10:06:59,270 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000012C26167C90>
2025-07-25 10:06:59,270 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,271 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,271 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:06:59,271 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,271 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,271 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:06:59,271 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,271 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,271 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,271 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,271 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:06:59,271 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,271 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,271 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,272 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,272 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,272 - DEBUG - ==== SSA block analysis pass on 500
2025-07-25 10:06:59,272 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000012C26167C90>
2025-07-25 10:06:59,272 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:06:59,272 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:06:59,272 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,272 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,273 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,273 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,273 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,273 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:06:59,273 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,273 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,273 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:06:59,273 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,273 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,273 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,273 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,274 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,274 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,274 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,274 - DEBUG - ==== SSA block analysis pass on 646
2025-07-25 10:06:59,274 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000012C26167C90>
2025-07-25 10:06:59,274 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,274 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,274 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,275 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,275 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,275 - DEBUG - ==== SSA block analysis pass on 648
2025-07-25 10:06:59,275 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000012C26167C90>
2025-07-25 10:06:59,275 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,275 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,275 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:06:59,275 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,275 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,275 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:06:59,275 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,275 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,275 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,276 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,276 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:06:59,276 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,276 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,276 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,276 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,276 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,276 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,276 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,276 - DEBUG - ==== SSA block analysis pass on 778
2025-07-25 10:06:59,276 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000012C26167C90>
2025-07-25 10:06:59,276 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,277 - DEBUG - ==== SSA block analysis pass on 782
2025-07-25 10:06:59,277 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000012C26167C90>
2025-07-25 10:06:59,277 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,277 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,277 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,277 - DEBUG - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x0000012C2613A810>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x0000012C260476D0>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x0000012C26041B90>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x0000012C260B7BD0>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x0000012C25EFD8D0>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x0000012C260B6710>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x0000012C263AAA90>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x0000012C263AA3D0>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x0000012C263A8C10>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x0000012C26165750>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x0000012C26166E10>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x0000012C26166950>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x0000012C26166690>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x0000012C263AA9D0>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x0000012C263A9BD0>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x0000012C263A88D0>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000012C261658D0>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000012C26150050>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000012C26151E10>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000012C26151490>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000012C261A3090>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x0000012C26153B90>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x0000012C263B5DD0>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x0000012C263B7550>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x0000012C263B7950>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x0000012C263B7BD0>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x0000012C263B60D0>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x0000012C263B5910>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x0000012C263B68D0>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000012C261ACA90>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000012C261AD850>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x0000012C26117990>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000012C261AE450>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000012C261AF290>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x0000012C261ADF50>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x0000012C2613BA10>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x0000012C26167F50>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x0000012C26165C10>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x0000012C260BDD10>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x0000012C261AC890>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x0000012C261AD690>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x0000012C261AED10>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x0000012C261AF090>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x0000012C26167590>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x0000012C263B6FD0>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x0000012C26150510>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x0000012C261AF690>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x0000012C261EC7D0>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x0000012C26164D10>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x0000012C260BF790>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x0000012C26153D50>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x0000012C26150310>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x0000012C261AC650>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x0000012C261AD490>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x0000012C261ADB90>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x0000012C261AF490>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x0000012C263A9310>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x0000012C261679D0>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x0000012C26151D10>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x0000012C26153C10>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x0000012C263B6350>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x0000012C263B6750>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x0000012C263B6C10>,
                                   500)],
             '$const106.19.2': [(<numba.core.ir.Assign object at 0x0000012C26138510>,
                                 0)],
             '$const132.23.2': [(<numba.core.ir.Assign object at 0x0000012C26138E50>,
                                 0)],
             '$const308.27.3': [(<numba.core.ir.Assign object at 0x0000012C26166E50>,
                                 180)],
             '$const580.19.3': [(<numba.core.ir.Assign object at 0x0000012C263B6550>,
                                 500)],
             '$const744.28.3': [(<numba.core.ir.Assign object at 0x0000012C261AEE90>,
                                 648)],
             '$const782.0.0': [(<numba.core.ir.Assign object at 0x0000012C261ACD10>,
                                782)],
             '$const80.15.2': [(<numba.core.ir.Assign object at 0x0000012C26117850>,
                                0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x0000012C261AB910>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x0000012C261EFC10>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x0000012C26181590>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x0000012C263A8A50>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x0000012C26150A90>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x0000012C263B6E50>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x0000012C25E0EE50>, 0),
                     (<numba.core.ir.Assign object at 0x0000012C263A8050>, 180),
                     (<numba.core.ir.Assign object at 0x0000012C263B5B10>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x0000012C26170590>, 0),
                      (<numba.core.ir.Assign object at 0x0000012C263A9550>,
                       180),
                      (<numba.core.ir.Assign object at 0x0000012C2613B250>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x0000012C261657D0>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x0000012C26167390>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x0000012C26170150>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000012C263A8F50>,
                             180),
                            (<numba.core.ir.Assign object at 0x0000012C26150B50>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x0000012C26181850>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000012C261BB8D0>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000012C2637D5D0>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x0000012C263B7D50>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x0000012C263B7250>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x0000012C26170710>, 0),
                   (<numba.core.ir.Assign object at 0x0000012C263AA0D0>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x0000012C26022110>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x0000012C26022890>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000012C261BB9D0>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x0000012C25C95690>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x0000012C260DB250>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000012C263A8850>,
                         180),
                        (<numba.core.ir.Assign object at 0x0000012C263B5490>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x0000012C261A01D0>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x0000012C263AACD0>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x0000012C25E93750>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x0000012C26170E90>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000012C263AA290>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x0000012C261173D0>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000012C261531D0>,
                         376),
                        (<numba.core.ir.Assign object at 0x0000012C261ADE10>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x0000012C2618BC50>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000012C261A0250>, 0)]})
2025-07-25 10:06:59,283 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x0000012C25DC0490>
2025-07-25 10:06:59,283 - DEBUG - Fix SSA violator on var time_register
2025-07-25 10:06:59,283 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,283 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637FA90>
2025-07-25 10:06:59,283 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,284 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,284 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,284 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,284 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,284 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,284 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,284 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,284 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,284 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,284 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,285 - DEBUG - first assign: time_register
2025-07-25 10:06:59,285 - DEBUG - replaced with: time_register = const(float, 0.0)
2025-07-25 10:06:59,285 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,285 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,285 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,285 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,285 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,285 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,285 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,285 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,286 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,286 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,286 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,286 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,286 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,286 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,286 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,286 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,287 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,287 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,287 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,287 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,287 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,287 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637FA90>
2025-07-25 10:06:59,287 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,287 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,287 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637FA90>
2025-07-25 10:06:59,287 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,287 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,288 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,288 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,288 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,288 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,288 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637FA90>
2025-07-25 10:06:59,288 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,288 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,288 - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,288 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,288 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,288 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:06:59,288 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:06:59,288 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,288 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,289 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,289 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,289 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,289 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,289 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:06:59,289 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:06:59,289 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,289 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,289 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,289 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,290 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,290 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,290 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,290 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,290 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637FA90>
2025-07-25 10:06:59,290 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,290 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,290 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,290 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,291 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,291 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,291 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637FA90>
2025-07-25 10:06:59,291 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,291 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,291 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:06:59,291 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,291 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,291 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:06:59,291 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,291 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,292 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,292 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,292 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:06:59,292 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,292 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,292 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,292 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,292 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,292 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,292 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637FA90>
2025-07-25 10:06:59,292 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:06:59,292 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:06:59,293 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,293 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,293 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,293 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,293 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,293 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:06:59,293 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,293 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,293 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:06:59,293 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,293 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,293 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,293 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,294 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,294 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,294 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,294 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,294 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637FA90>
2025-07-25 10:06:59,294 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,294 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,294 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,294 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,294 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,294 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,294 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637FA90>
2025-07-25 10:06:59,295 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,295 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,295 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:06:59,295 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,295 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,295 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:06:59,295 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,295 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,295 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,296 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,296 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:06:59,296 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,296 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,296 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,296 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,296 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,296 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,296 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,296 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,296 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637FA90>
2025-07-25 10:06:59,296 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,296 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,297 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637FA90>
2025-07-25 10:06:59,297 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,297 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,297 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,297 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000012C261B9350>],
             180: [<numba.core.ir.Assign object at 0x0000012C26189790>]})
2025-07-25 10:06:59,297 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,297 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189FD0>
2025-07-25 10:06:59,297 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,297 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,297 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,297 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,297 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,298 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,298 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,298 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,298 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,298 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,298 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,298 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,298 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,298 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,298 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,298 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,299 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,299 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,299 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,299 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,299 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,299 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,299 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,300 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,300 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,300 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,300 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,300 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,300 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,300 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,300 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,300 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,300 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189FD0>
2025-07-25 10:06:59,301 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,301 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,301 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189FD0>
2025-07-25 10:06:59,301 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,301 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,301 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,301 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,301 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,301 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,301 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189FD0>
2025-07-25 10:06:59,301 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,301 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,301 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,302 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,302 - DEBUG - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,302 - DEBUG - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,302 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:06:59,302 - DEBUG - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
2025-07-25 10:06:59,302 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:06:59,302 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:06:59,302 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,302 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,302 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,303 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,303 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,303 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,303 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:06:59,303 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:06:59,303 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,303 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,304 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,304 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,304 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,304 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,304 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,304 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,304 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189FD0>
2025-07-25 10:06:59,304 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,304 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,304 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,304 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,305 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,305 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,305 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189FD0>
2025-07-25 10:06:59,305 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,305 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,305 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:06:59,305 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,305 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,305 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:06:59,305 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,305 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,305 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,305 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,306 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:06:59,306 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,306 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,306 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,306 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,306 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,306 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,306 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189FD0>
2025-07-25 10:06:59,306 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:06:59,306 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:06:59,306 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,306 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,307 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,307 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,307 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,307 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:06:59,307 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,307 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,307 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:06:59,307 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,308 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,308 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,308 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,308 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,308 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,308 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,308 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,308 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189FD0>
2025-07-25 10:06:59,308 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,308 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,309 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,309 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,309 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,309 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,309 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189FD0>
2025-07-25 10:06:59,309 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,309 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,309 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:06:59,309 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,309 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,309 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:06:59,310 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,310 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,310 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,310 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,310 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:06:59,310 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,310 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,310 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,310 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,310 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,310 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,311 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,311 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,311 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189FD0>
2025-07-25 10:06:59,311 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,311 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,311 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189FD0>
2025-07-25 10:06:59,311 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,311 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,311 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,312 - DEBUG - Fix SSA violator on var n
2025-07-25 10:06:59,312 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,312 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637F350>
2025-07-25 10:06:59,312 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,312 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,312 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,313 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,313 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,313 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,313 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,313 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,313 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,313 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,313 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,314 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,314 - DEBUG - first assign: n
2025-07-25 10:06:59,314 - DEBUG - replaced with: n = const(int, 0)
2025-07-25 10:06:59,314 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,314 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,314 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,314 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,314 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,315 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,315 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,315 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,315 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,315 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,315 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,315 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,316 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,316 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,316 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,316 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,316 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,316 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,316 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,316 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,316 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637F350>
2025-07-25 10:06:59,317 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,317 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,317 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637F350>
2025-07-25 10:06:59,317 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,317 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,317 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,317 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,317 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,317 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,317 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637F350>
2025-07-25 10:06:59,317 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,317 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,317 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,317 - DEBUG - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,318 - DEBUG - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,318 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:06:59,318 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:06:59,318 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,318 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,318 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,318 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,318 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,318 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,319 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:06:59,319 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:06:59,319 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,319 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,319 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,319 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,319 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,319 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,319 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,319 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,319 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637F350>
2025-07-25 10:06:59,320 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,320 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,320 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,320 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,320 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,320 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,320 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637F350>
2025-07-25 10:06:59,320 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,320 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,320 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:06:59,320 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,321 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,321 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:06:59,321 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,321 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,321 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,321 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,321 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:06:59,321 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,321 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,321 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,321 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,321 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,322 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,322 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637F350>
2025-07-25 10:06:59,322 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:06:59,322 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:06:59,322 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,322 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,322 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,322 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,322 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,322 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:06:59,322 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,322 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,323 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:06:59,323 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,323 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,323 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,323 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,323 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,323 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,324 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,324 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,324 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637F350>
2025-07-25 10:06:59,324 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,324 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,324 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,324 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,324 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,325 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,325 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637F350>
2025-07-25 10:06:59,325 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,325 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,325 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:06:59,325 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,325 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,325 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:06:59,325 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,325 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,325 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,325 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,326 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:06:59,326 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,326 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,326 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,326 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,326 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,326 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,326 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,326 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,326 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637F350>
2025-07-25 10:06:59,326 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,326 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,327 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637F350>
2025-07-25 10:06:59,327 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,327 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,327 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,327 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000012C2637FC10>],
             180: [<numba.core.ir.Assign object at 0x0000012C26188350>]})
2025-07-25 10:06:59,327 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,327 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,327 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,327 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,327 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,327 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,327 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,327 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,328 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,328 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,328 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,328 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,328 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,328 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,328 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,328 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,328 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,329 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,329 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,329 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,329 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,329 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,329 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,329 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,329 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,329 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,329 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,329 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,329 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,330 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,330 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,330 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,330 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,330 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,330 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,330 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,330 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,330 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,330 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,330 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,330 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,330 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,331 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,331 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,331 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,331 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,331 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,331 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,331 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,331 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:06:59,332 - DEBUG - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
2025-07-25 10:06:59,332 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:06:59,332 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:06:59,332 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,332 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,332 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,332 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,332 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,333 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,333 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:06:59,333 - DEBUG - find_def var='n' stmt=$binop_add310.28 = n + $const308.27.3
2025-07-25 10:06:59,333 - DEBUG - replaced with: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:06:59,333 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:06:59,333 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,333 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,333 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,333 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,333 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,333 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,334 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,334 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,334 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,334 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,334 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,334 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,334 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,334 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,334 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,334 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,334 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,334 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,335 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:06:59,335 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,335 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,335 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:06:59,335 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,335 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,335 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,335 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,335 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:06:59,335 - DEBUG - find_def var='n' stmt=$binop_sub468.27 = n - i
2025-07-25 10:06:59,335 - DEBUG - find_def_from_top label 376
2025-07-25 10:06:59,335 - DEBUG - idom 374 from label 376
2025-07-25 10:06:59,335 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:06:59,335 - DEBUG - find_def_from_top label 374
2025-07-25 10:06:59,336 - DEBUG - idom 180 from label 374
2025-07-25 10:06:59,336 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:06:59,336 - DEBUG - replaced with: $binop_sub468.27 = n.1 - i
2025-07-25 10:06:59,336 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,336 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,336 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,336 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,336 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,337 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,337 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,337 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:06:59,337 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:06:59,337 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,337 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,337 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,337 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,337 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,337 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:06:59,337 - DEBUG - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
2025-07-25 10:06:59,338 - DEBUG - find_def_from_top label 500
2025-07-25 10:06:59,338 - DEBUG - idom 374 from label 500
2025-07-25 10:06:59,338 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:06:59,338 - DEBUG - find_def_from_top label 374
2025-07-25 10:06:59,338 - DEBUG - idom 180 from label 374
2025-07-25 10:06:59,338 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:06:59,338 - DEBUG - replaced with: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:06:59,338 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,338 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,338 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:06:59,338 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,338 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,339 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,339 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,339 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,339 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,339 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,339 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,339 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,339 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,339 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,339 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,339 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,339 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,339 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,339 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,340 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,340 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,340 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:06:59,340 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,340 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,340 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:06:59,340 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,340 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,340 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,341 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,341 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:06:59,341 - DEBUG - find_def var='n' stmt=$binop_add740.27 = n + k
2025-07-25 10:06:59,341 - DEBUG - find_def_from_top label 648
2025-07-25 10:06:59,341 - DEBUG - idom 646 from label 648
2025-07-25 10:06:59,341 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:06:59,341 - DEBUG - find_def_from_top label 646
2025-07-25 10:06:59,341 - DEBUG - idom 500 from label 646
2025-07-25 10:06:59,341 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:06:59,341 - DEBUG - find_def_from_top label 500
2025-07-25 10:06:59,341 - DEBUG - idom 374 from label 500
2025-07-25 10:06:59,342 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:06:59,342 - DEBUG - find_def_from_top label 374
2025-07-25 10:06:59,342 - DEBUG - idom 180 from label 374
2025-07-25 10:06:59,342 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:06:59,342 - DEBUG - replaced with: $binop_add740.27 = n.1 + k
2025-07-25 10:06:59,342 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,342 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,342 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,342 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,342 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,342 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,342 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,342 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,342 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,343 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,343 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,343 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,343 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,343 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,343 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,343 - DEBUG - Fix SSA violator on var frac
2025-07-25 10:06:59,343 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,343 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2618B690>
2025-07-25 10:06:59,343 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,343 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,343 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,343 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,343 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,344 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,344 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,344 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,344 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,344 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,344 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,344 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,344 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,344 - DEBUG - first assign: frac
2025-07-25 10:06:59,344 - DEBUG - replaced with: frac = const(float, 0.0)
2025-07-25 10:06:59,344 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,345 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,345 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,345 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,345 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,345 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,345 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,345 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,345 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,345 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,346 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,346 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,346 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,346 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,346 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,346 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,346 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,346 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,346 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,346 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2618B690>
2025-07-25 10:06:59,346 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,346 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,346 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2618B690>
2025-07-25 10:06:59,346 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,347 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,347 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,347 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,347 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,347 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,347 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2618B690>
2025-07-25 10:06:59,347 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,347 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,347 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,347 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,347 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:06:59,347 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:06:59,347 - DEBUG - replaced with: frac.1 = scale * $binop_sub234.12
2025-07-25 10:06:59,347 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,348 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,348 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,348 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,348 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,348 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,348 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:06:59,348 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:06:59,348 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,348 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,348 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,348 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,349 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,349 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,349 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,349 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,349 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2618B690>
2025-07-25 10:06:59,349 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,349 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,349 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,349 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,350 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,350 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,350 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2618B690>
2025-07-25 10:06:59,350 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,350 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,350 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:06:59,350 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,350 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,350 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:06:59,350 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,350 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,350 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,351 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,351 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:06:59,351 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,351 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,351 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,351 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,351 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,351 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,351 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2618B690>
2025-07-25 10:06:59,351 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:06:59,351 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:06:59,351 - DEBUG - replaced with: frac.2 = $binop_sub504.3
2025-07-25 10:06:59,351 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,351 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,352 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,352 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,352 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,352 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:06:59,352 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,352 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,352 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:06:59,352 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,352 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,352 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,352 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,352 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,352 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,353 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,353 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,353 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2618B690>
2025-07-25 10:06:59,353 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,353 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,353 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,353 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,353 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,354 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,354 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2618B690>
2025-07-25 10:06:59,354 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,354 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,354 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:06:59,354 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,354 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,354 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:06:59,354 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,354 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,354 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,354 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,355 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:06:59,355 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,355 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,355 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,355 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,355 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,355 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,355 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,355 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,355 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2618B690>
2025-07-25 10:06:59,355 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,355 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,355 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2618B690>
2025-07-25 10:06:59,356 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,356 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,356 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,356 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000012C261895D0>],
             180: [<numba.core.ir.Assign object at 0x0000012C26183110>],
             500: [<numba.core.ir.Assign object at 0x0000012C26183B50>]})
2025-07-25 10:06:59,356 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,356 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C260F5C50>
2025-07-25 10:06:59,356 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,356 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,356 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,356 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,356 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,356 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,357 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,357 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,357 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,357 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,357 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,357 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,357 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,357 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,357 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,358 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,358 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,358 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,358 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,358 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,358 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,358 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,358 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,358 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,358 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,358 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,358 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,359 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,359 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,359 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,359 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,359 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C260F5C50>
2025-07-25 10:06:59,359 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,359 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,359 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C260F5C50>
2025-07-25 10:06:59,359 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,359 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,359 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,360 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,360 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,360 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,360 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C260F5C50>
2025-07-25 10:06:59,360 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,360 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,360 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,360 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,360 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:06:59,360 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:06:59,360 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,360 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 10:06:59,361 - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-07-25 10:06:59,361 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,361 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,361 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,361 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,361 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,361 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:06:59,361 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:06:59,361 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,362 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,362 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,362 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,362 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,362 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,362 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,362 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,362 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C260F5C50>
2025-07-25 10:06:59,362 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,362 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,362 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,363 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,363 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,363 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,363 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C260F5C50>
2025-07-25 10:06:59,363 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,363 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,363 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:06:59,363 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,363 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,363 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:06:59,363 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,363 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,363 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,364 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,364 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:06:59,364 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,364 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,364 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,364 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,364 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,364 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,364 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C260F5C50>
2025-07-25 10:06:59,364 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:06:59,364 - DEBUG - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
2025-07-25 10:06:59,364 - DEBUG - find_def_from_top label 500
2025-07-25 10:06:59,365 - DEBUG - idom 374 from label 500
2025-07-25 10:06:59,365 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:06:59,365 - DEBUG - find_def_from_top label 374
2025-07-25 10:06:59,365 - DEBUG - idom 180 from label 374
2025-07-25 10:06:59,365 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:06:59,365 - DEBUG - replaced with: $binop_sub504.3 = scale - frac.1
2025-07-25 10:06:59,365 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:06:59,365 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:06:59,365 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 10:06:59,365 - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-07-25 10:06:59,366 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,366 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,366 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,366 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,366 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:06:59,366 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,366 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,366 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:06:59,366 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,367 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,367 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,367 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,367 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,367 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,367 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,367 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,367 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C260F5C50>
2025-07-25 10:06:59,367 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,367 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,367 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,367 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,368 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,368 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,368 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C260F5C50>
2025-07-25 10:06:59,368 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,368 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,368 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:06:59,368 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,368 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,368 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:06:59,368 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,368 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,368 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,368 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,368 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:06:59,368 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,369 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,369 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,369 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,369 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,369 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,369 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,369 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,369 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C260F5C50>
2025-07-25 10:06:59,369 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,370 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,370 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C260F5C50>
2025-07-25 10:06:59,370 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,370 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,370 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,370 - DEBUG - Fix SSA violator on var index_frac
2025-07-25 10:06:59,370 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,370 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637C290>
2025-07-25 10:06:59,370 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,370 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,370 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,371 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,371 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,371 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,371 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,371 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,371 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,371 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,371 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,371 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,371 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,371 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,371 - DEBUG - first assign: index_frac
2025-07-25 10:06:59,372 - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-07-25 10:06:59,372 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,372 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,372 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,372 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,372 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,372 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,372 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,372 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,372 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,372 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,372 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,373 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,373 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,373 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,373 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,373 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,373 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,373 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,373 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637C290>
2025-07-25 10:06:59,373 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,373 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,373 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637C290>
2025-07-25 10:06:59,374 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,374 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,374 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,374 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,374 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,374 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,374 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637C290>
2025-07-25 10:06:59,374 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,375 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,375 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,375 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,375 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:06:59,375 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:06:59,375 - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-07-25 10:06:59,375 - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-07-25 10:06:59,375 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,375 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,375 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,375 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,376 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,376 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:06:59,376 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:06:59,376 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,376 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,376 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,376 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,376 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,376 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,376 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,376 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,376 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637C290>
2025-07-25 10:06:59,376 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,376 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,377 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,377 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,377 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,377 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,377 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637C290>
2025-07-25 10:06:59,377 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,377 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,377 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:06:59,377 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,377 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,377 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:06:59,377 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,377 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,378 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,378 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,378 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:06:59,378 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,378 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,378 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,378 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,378 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,378 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,379 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637C290>
2025-07-25 10:06:59,379 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:06:59,379 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:06:59,379 - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-07-25 10:06:59,379 - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-07-25 10:06:59,379 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,379 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,379 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,379 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,379 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:06:59,380 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,380 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,380 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:06:59,380 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,380 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,380 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,380 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,380 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,380 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,380 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,381 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,381 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637C290>
2025-07-25 10:06:59,381 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,381 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,381 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,381 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,381 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,381 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,381 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637C290>
2025-07-25 10:06:59,381 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,382 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,382 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:06:59,382 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,382 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,382 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:06:59,382 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,382 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,383 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,383 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,383 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:06:59,383 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,383 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,383 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,383 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,383 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,383 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,383 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,383 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,383 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637C290>
2025-07-25 10:06:59,384 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,384 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,384 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C2637C290>
2025-07-25 10:06:59,384 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,384 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,384 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,384 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000012C260F5C50>],
             180: [<numba.core.ir.Assign object at 0x0000012C26180110>],
             500: [<numba.core.ir.Assign object at 0x0000012C26181990>]})
2025-07-25 10:06:59,384 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,384 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189810>
2025-07-25 10:06:59,384 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,384 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,385 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,385 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,385 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,385 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,385 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,385 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,385 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,385 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,385 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,385 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,385 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,385 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,385 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,385 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,386 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,386 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,386 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,386 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,386 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,386 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,386 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,386 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,387 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,387 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,387 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,387 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,387 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,387 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,387 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,387 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,387 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189810>
2025-07-25 10:06:59,387 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,387 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,388 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189810>
2025-07-25 10:06:59,388 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,388 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,388 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,388 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,388 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,388 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,388 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189810>
2025-07-25 10:06:59,388 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,388 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,388 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,388 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,388 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:06:59,388 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:06:59,389 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:06:59,389 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,389 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,389 - DEBUG - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,389 - DEBUG - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,389 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,389 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 10:06:59,389 - DEBUG - replaced with: eta = index_frac.1 - offset
2025-07-25 10:06:59,389 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,390 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,390 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:06:59,390 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:06:59,390 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,390 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,390 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,390 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,390 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,390 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,391 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,391 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,391 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189810>
2025-07-25 10:06:59,391 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,391 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,391 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,391 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,391 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,391 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,391 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189810>
2025-07-25 10:06:59,391 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,391 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,392 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:06:59,392 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,392 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,392 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:06:59,392 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,392 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,392 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,392 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,392 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:06:59,392 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,392 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,392 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,392 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,392 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,393 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,393 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189810>
2025-07-25 10:06:59,393 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:06:59,393 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:06:59,393 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:06:59,393 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,393 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,393 - DEBUG - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,393 - DEBUG - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,394 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:06:59,394 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 10:06:59,394 - DEBUG - replaced with: eta = index_frac.2 - offset
2025-07-25 10:06:59,394 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,394 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:06:59,394 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,394 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,394 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:06:59,394 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,395 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,395 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,395 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,395 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,395 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,395 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,395 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,395 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189810>
2025-07-25 10:06:59,395 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,395 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,396 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,396 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,396 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,396 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,396 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189810>
2025-07-25 10:06:59,396 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,396 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,396 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:06:59,396 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,396 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,396 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:06:59,396 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,396 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,396 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,397 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,397 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:06:59,397 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,397 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,397 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,397 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,397 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,397 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,397 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,397 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,398 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189810>
2025-07-25 10:06:59,398 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,398 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,398 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C26189810>
2025-07-25 10:06:59,398 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,398 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,398 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,398 - DEBUG - Fix SSA violator on var offset
2025-07-25 10:06:59,398 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,398 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C26182C10>
2025-07-25 10:06:59,398 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,398 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,399 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,399 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,399 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,399 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,399 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,399 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,399 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,399 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,400 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,400 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,400 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,400 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,400 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,400 - DEBUG - first assign: offset
2025-07-25 10:06:59,400 - DEBUG - replaced with: offset = const(int, 0)
2025-07-25 10:06:59,400 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,400 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,400 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,401 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,401 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,401 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,401 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,401 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,401 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,401 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,401 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,401 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,401 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,401 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,401 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,401 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,401 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,402 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C26182C10>
2025-07-25 10:06:59,402 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,402 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,402 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C26182C10>
2025-07-25 10:06:59,402 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,402 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,402 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,402 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,402 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,402 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,402 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C26182C10>
2025-07-25 10:06:59,402 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,402 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,402 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,403 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,403 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:06:59,403 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:06:59,403 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:06:59,403 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,403 - DEBUG - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,404 - DEBUG - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,404 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 10:06:59,404 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,404 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,404 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:06:59,404 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:06:59,404 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,404 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,404 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,404 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,405 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,405 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,405 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,405 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,405 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C26182C10>
2025-07-25 10:06:59,405 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,405 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,405 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,405 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,405 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,405 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,405 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C26182C10>
2025-07-25 10:06:59,405 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,405 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,406 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:06:59,406 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,406 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,406 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:06:59,406 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,406 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,406 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,406 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,406 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:06:59,406 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,406 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,406 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,406 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,406 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,407 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,407 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C26182C10>
2025-07-25 10:06:59,407 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:06:59,407 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:06:59,407 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:06:59,407 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,407 - DEBUG - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,408 - DEBUG - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,408 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 10:06:59,408 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,408 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:06:59,408 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,408 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,408 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:06:59,408 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,408 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,408 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,408 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,409 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,409 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,409 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,409 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,409 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C26182C10>
2025-07-25 10:06:59,409 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,409 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,409 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,409 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,409 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,409 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,409 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C26182C10>
2025-07-25 10:06:59,410 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,410 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,410 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:06:59,410 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,410 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,410 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:06:59,410 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,410 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,410 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,410 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,410 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:06:59,410 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,410 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,410 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,411 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,411 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,411 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,411 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,411 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,411 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C26182C10>
2025-07-25 10:06:59,411 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,411 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,411 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C26182C10>
2025-07-25 10:06:59,412 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,412 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,412 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,412 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000012C26182210>],
             180: [<numba.core.ir.Assign object at 0x0000012C26188290>],
             500: [<numba.core.ir.Assign object at 0x0000012C261A9310>]})
2025-07-25 10:06:59,412 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,412 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C25DFB450>
2025-07-25 10:06:59,412 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,412 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,412 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,413 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,413 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,413 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,413 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,413 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,413 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,413 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,413 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,413 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,413 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,413 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,413 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,413 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,413 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,413 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,414 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,414 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,414 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,414 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,414 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,414 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,414 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,414 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,414 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,414 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,414 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,415 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,415 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,415 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,415 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C25DFB450>
2025-07-25 10:06:59,415 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,415 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,415 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C25DFB450>
2025-07-25 10:06:59,415 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,415 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,416 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,416 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,416 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,416 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,416 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C25DFB450>
2025-07-25 10:06:59,416 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,416 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,416 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,416 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,416 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:06:59,416 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:06:59,417 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:06:59,417 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,417 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,417 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 10:06:59,417 - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-07-25 10:06:59,417 - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-07-25 10:06:59,417 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,417 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,417 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:06:59,417 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:06:59,417 - DEBUG - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
2025-07-25 10:06:59,417 - DEBUG - replaced with: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:06:59,418 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,418 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,418 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,418 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,418 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,418 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,418 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,418 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,418 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C25DFB450>
2025-07-25 10:06:59,418 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,418 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,418 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,418 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,419 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,419 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,419 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C25DFB450>
2025-07-25 10:06:59,419 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,419 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,419 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:06:59,419 - DEBUG - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:06:59,419 - DEBUG - find_def_from_top label 376
2025-07-25 10:06:59,419 - DEBUG - idom 374 from label 376
2025-07-25 10:06:59,419 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:06:59,419 - DEBUG - find_def_from_top label 374
2025-07-25 10:06:59,419 - DEBUG - idom 180 from label 374
2025-07-25 10:06:59,420 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:06:59,420 - DEBUG - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:06:59,420 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,420 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,420 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:06:59,420 - DEBUG - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:06:59,420 - DEBUG - find_def_from_top label 376
2025-07-25 10:06:59,420 - DEBUG - idom 374 from label 376
2025-07-25 10:06:59,421 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:06:59,421 - DEBUG - find_def_from_top label 374
2025-07-25 10:06:59,421 - DEBUG - idom 180 from label 374
2025-07-25 10:06:59,421 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:06:59,421 - DEBUG - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:06:59,421 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,421 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,421 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,421 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,421 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:06:59,421 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,421 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,421 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,422 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,422 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,422 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,422 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C25DFB450>
2025-07-25 10:06:59,422 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:06:59,422 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:06:59,422 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:06:59,422 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,422 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,422 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 10:06:59,422 - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-07-25 10:06:59,422 - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-07-25 10:06:59,422 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,422 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:06:59,423 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,423 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,423 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:06:59,423 - DEBUG - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
2025-07-25 10:06:59,423 - DEBUG - replaced with: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:06:59,423 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,423 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,423 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,423 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,423 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,423 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,423 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,423 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,424 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C25DFB450>
2025-07-25 10:06:59,424 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,424 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,424 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,424 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,424 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,424 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,424 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C25DFB450>
2025-07-25 10:06:59,425 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,425 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,425 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:06:59,425 - DEBUG - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:06:59,425 - DEBUG - find_def_from_top label 648
2025-07-25 10:06:59,425 - DEBUG - idom 646 from label 648
2025-07-25 10:06:59,425 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:06:59,425 - DEBUG - find_def_from_top label 646
2025-07-25 10:06:59,425 - DEBUG - idom 500 from label 646
2025-07-25 10:06:59,425 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:06:59,425 - DEBUG - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:06:59,425 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,425 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,426 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:06:59,426 - DEBUG - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:06:59,426 - DEBUG - find_def_from_top label 648
2025-07-25 10:06:59,426 - DEBUG - idom 646 from label 648
2025-07-25 10:06:59,426 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:06:59,426 - DEBUG - find_def_from_top label 646
2025-07-25 10:06:59,426 - DEBUG - idom 500 from label 646
2025-07-25 10:06:59,426 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:06:59,426 - DEBUG - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:06:59,426 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,426 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,426 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,426 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,426 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:06:59,427 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,427 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,427 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,427 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,427 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,427 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,427 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,427 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,427 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C25DFB450>
2025-07-25 10:06:59,427 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,427 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,427 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C25DFB450>
2025-07-25 10:06:59,427 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,427 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,427 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,428 - DEBUG - Fix SSA violator on var eta
2025-07-25 10:06:59,428 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,428 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,428 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,428 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,428 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,428 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,428 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,429 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,429 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,429 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,429 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,429 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,429 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,429 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,429 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,429 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,429 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,430 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,430 - DEBUG - first assign: eta
2025-07-25 10:06:59,430 - DEBUG - replaced with: eta = const(float, 0.0)
2025-07-25 10:06:59,430 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,430 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,430 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,430 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,430 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,430 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,431 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,431 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,431 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,431 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,431 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,431 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,431 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,431 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,431 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,431 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,431 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,431 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,432 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,432 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,432 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,432 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,432 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,432 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,432 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,432 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,432 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,433 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,433 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,433 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,433 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,433 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:06:59,433 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:06:59,433 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:06:59,433 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,433 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,433 - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-07-25 10:06:59,433 - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-07-25 10:06:59,433 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,433 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,434 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:06:59,434 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:06:59,434 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,434 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,434 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,434 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,434 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,434 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,434 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,434 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,434 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,435 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,435 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,435 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,435 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,435 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,435 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,435 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,435 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,436 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,436 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:06:59,436 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,436 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,436 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:06:59,436 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,436 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,436 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,437 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,437 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:06:59,437 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,437 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,437 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,437 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,437 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,437 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,437 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,437 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:06:59,437 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:06:59,437 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:06:59,438 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,438 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,438 - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-07-25 10:06:59,438 - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-07-25 10:06:59,438 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,438 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:06:59,438 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,438 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,438 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:06:59,438 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,438 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,438 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,438 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,439 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,439 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,439 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,439 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,439 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,439 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,439 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,439 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,439 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,440 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,440 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,440 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,440 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,440 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,440 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:06:59,440 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,440 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,440 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:06:59,440 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,441 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,441 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,441 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,441 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:06:59,441 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,441 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,441 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,441 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,441 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,442 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,442 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,442 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,442 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,442 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,442 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,442 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C259F7FD0>
2025-07-25 10:06:59,442 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,442 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,442 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,442 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000012C26189010>],
             180: [<numba.core.ir.Assign object at 0x0000012C26181510>],
             500: [<numba.core.ir.Assign object at 0x0000012C261AA410>]})
2025-07-25 10:06:59,442 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,443 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261A8F10>
2025-07-25 10:06:59,443 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,443 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,443 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,443 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,443 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,443 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,443 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,443 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,443 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,443 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,443 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,443 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,443 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,444 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,444 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,444 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,444 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,444 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,444 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,444 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,444 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,444 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,444 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,444 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,445 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,445 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,445 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,445 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,445 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,445 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,445 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,445 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,446 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261A8F10>
2025-07-25 10:06:59,446 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,446 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,446 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261A8F10>
2025-07-25 10:06:59,446 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,446 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,446 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,446 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,446 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,446 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,446 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261A8F10>
2025-07-25 10:06:59,446 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,446 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,446 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,447 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,447 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:06:59,447 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:06:59,447 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:06:59,447 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,447 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,447 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:06:59,447 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,447 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,447 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:06:59,447 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:06:59,447 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,448 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,448 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,448 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,448 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,448 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,448 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,448 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,448 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261A8F10>
2025-07-25 10:06:59,448 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,448 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,448 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,448 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,448 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,449 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,449 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261A8F10>
2025-07-25 10:06:59,449 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,449 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,449 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:06:59,449 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,449 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,449 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:06:59,450 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,450 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,450 - DEBUG - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:06:59,450 - DEBUG - find_def_from_top label 376
2025-07-25 10:06:59,450 - DEBUG - idom 374 from label 376
2025-07-25 10:06:59,450 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:06:59,450 - DEBUG - find_def_from_top label 374
2025-07-25 10:06:59,450 - DEBUG - idom 180 from label 374
2025-07-25 10:06:59,450 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:06:59,450 - DEBUG - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:06:59,450 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,450 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,451 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:06:59,451 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,451 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,451 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,451 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,451 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,451 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,451 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261A8F10>
2025-07-25 10:06:59,451 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:06:59,451 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:06:59,451 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:06:59,451 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,451 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,452 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:06:59,452 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,452 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:06:59,452 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,452 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,452 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:06:59,452 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,452 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,452 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,452 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,452 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,452 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,452 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,453 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,453 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261A8F10>
2025-07-25 10:06:59,453 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,453 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,453 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,453 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,453 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,453 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,453 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261A8F10>
2025-07-25 10:06:59,454 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,454 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,454 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:06:59,454 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,454 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,454 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:06:59,454 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,454 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,454 - DEBUG - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:06:59,454 - DEBUG - find_def_from_top label 648
2025-07-25 10:06:59,454 - DEBUG - idom 646 from label 648
2025-07-25 10:06:59,454 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:06:59,455 - DEBUG - find_def_from_top label 646
2025-07-25 10:06:59,455 - DEBUG - idom 500 from label 646
2025-07-25 10:06:59,455 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:06:59,455 - DEBUG - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:06:59,455 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,455 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,455 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:06:59,455 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,455 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,455 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,455 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,455 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,456 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,456 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,456 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,456 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261A8F10>
2025-07-25 10:06:59,456 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,456 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,456 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261A8F10>
2025-07-25 10:06:59,456 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,456 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,456 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,456 - DEBUG - Fix SSA violator on var weight
2025-07-25 10:06:59,456 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,456 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C261AE010>
2025-07-25 10:06:59,456 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,456 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,457 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,457 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,457 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,457 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,457 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,457 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,457 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,457 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,458 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,458 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,458 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,458 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,458 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,458 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,458 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,458 - DEBUG - first assign: weight
2025-07-25 10:06:59,458 - DEBUG - replaced with: weight = const(float, 0.0)
2025-07-25 10:06:59,458 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,458 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,458 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,459 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,459 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,459 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,459 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,459 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,459 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,459 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,459 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,459 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,459 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,459 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,459 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,460 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C261AE010>
2025-07-25 10:06:59,460 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,460 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,460 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C261AE010>
2025-07-25 10:06:59,460 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,460 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,460 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,460 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,460 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,460 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,460 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C261AE010>
2025-07-25 10:06:59,460 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,461 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,461 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,461 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,461 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:06:59,461 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:06:59,461 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:06:59,462 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,462 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,462 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:06:59,462 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,462 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,462 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:06:59,462 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:06:59,463 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,463 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,463 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,463 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,463 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,463 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,463 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,463 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,463 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C261AE010>
2025-07-25 10:06:59,463 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,463 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,463 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,463 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,464 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,464 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,464 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C261AE010>
2025-07-25 10:06:59,464 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,464 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,464 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:06:59,464 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,464 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,464 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:06:59,464 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,464 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:06:59,464 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,464 - DEBUG - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,464 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,465 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:06:59,465 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,465 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,465 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,465 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,465 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,465 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,465 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C261AE010>
2025-07-25 10:06:59,465 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:06:59,465 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:06:59,465 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:06:59,465 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,466 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,466 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:06:59,466 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,466 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:06:59,466 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,466 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,466 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:06:59,467 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,467 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,467 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,467 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,467 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,467 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,467 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,467 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,467 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C261AE010>
2025-07-25 10:06:59,467 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,467 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,467 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,468 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,468 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,468 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,468 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C261AE010>
2025-07-25 10:06:59,468 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,468 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,468 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:06:59,468 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,468 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,468 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:06:59,468 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,468 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:06:59,468 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,469 - DEBUG - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,469 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,469 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:06:59,469 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,469 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,469 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,469 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,469 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,469 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,469 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,469 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,469 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C261AE010>
2025-07-25 10:06:59,469 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,469 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,470 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000012C261AE010>
2025-07-25 10:06:59,470 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,470 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,470 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,470 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000012C25DFB450>],
             376: [<numba.core.ir.Assign object at 0x0000012C261EDED0>],
             648: [<numba.core.ir.Assign object at 0x0000012C261EED50>]})
2025-07-25 10:06:59,470 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:06:59,471 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261AB050>
2025-07-25 10:06:59,471 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:06:59,471 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:06:59,471 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:06:59,471 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:06:59,471 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:06:59,471 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:06:59,471 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:06:59,471 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:06:59,471 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:06:59,471 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,471 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:06:59,472 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:06:59,472 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:06:59,472 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:06:59,472 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:06:59,472 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:06:59,472 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:06:59,472 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:06:59,472 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:06:59,472 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,472 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:06:59,472 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:06:59,472 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,472 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:06:59,472 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:06:59,473 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:06:59,473 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:06:59,473 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,473 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:06:59,473 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:06:59,473 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,473 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:06:59,473 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261AB050>
2025-07-25 10:06:59,473 - DEBUG - on stmt: jump 178
2025-07-25 10:06:59,473 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:06:59,473 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261AB050>
2025-07-25 10:06:59,473 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:06:59,473 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:06:59,473 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:06:59,474 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:06:59,474 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:06:59,474 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:06:59,474 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261AB050>
2025-07-25 10:06:59,474 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:06:59,474 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,474 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:06:59,474 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,474 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:06:59,474 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:06:59,475 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:06:59,475 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:06:59,475 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,475 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:06:59,475 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:06:59,475 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:06:59,475 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:06:59,475 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:06:59,475 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:06:59,475 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,476 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:06:59,476 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,476 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:06:59,476 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:06:59,476 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,476 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:06:59,476 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261AB050>
2025-07-25 10:06:59,476 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:06:59,476 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:06:59,476 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:06:59,476 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:06:59,476 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:06:59,477 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:06:59,477 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261AB050>
2025-07-25 10:06:59,477 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:06:59,477 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:06:59,477 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:06:59,477 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,477 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:06:59,477 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:06:59,477 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,477 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:06:59,477 - DEBUG - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:06:59,477 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,477 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:06:59,478 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:06:59,478 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,478 - DEBUG - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:06:59,478 - DEBUG - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
2025-07-25 10:06:59,478 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,478 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:06:59,478 - DEBUG - on stmt: jump 374
2025-07-25 10:06:59,478 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:06:59,479 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261AB050>
2025-07-25 10:06:59,479 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:06:59,479 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:06:59,479 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:06:59,479 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:06:59,479 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,479 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:06:59,479 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:06:59,479 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:06:59,480 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:06:59,480 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:06:59,480 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:06:59,480 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:06:59,480 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,480 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:06:59,480 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:06:59,481 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:06:59,481 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:06:59,481 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,481 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:06:59,481 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261AB050>
2025-07-25 10:06:59,481 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:06:59,481 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:06:59,481 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:06:59,481 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:06:59,481 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:06:59,481 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:06:59,481 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261AB050>
2025-07-25 10:06:59,481 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:06:59,482 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:06:59,482 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:06:59,482 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:06:59,482 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:06:59,482 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:06:59,482 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:06:59,482 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:06:59,482 - DEBUG - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:06:59,482 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:06:59,482 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:06:59,482 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:06:59,482 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:06:59,483 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:06:59,483 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,483 - DEBUG - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:06:59,483 - DEBUG - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
2025-07-25 10:06:59,483 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:06:59,483 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:06:59,483 - DEBUG - on stmt: jump 646
2025-07-25 10:06:59,483 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:06:59,483 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261AB050>
2025-07-25 10:06:59,484 - DEBUG - on stmt: jump 176
2025-07-25 10:06:59,484 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:06:59,484 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000012C261AB050>
2025-07-25 10:06:59,484 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:06:59,484 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:06:59,484 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:06:59,859 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-07-25 10:06:59,860 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:06:59,860 - DEBUG - stack: []
2025-07-25 10:06:59,860 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:06:59,860 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-07-25 10:06:59,861 - DEBUG - stack []
2025-07-25 10:06:59,861 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-07-25 10:06:59,861 - DEBUG - stack []
2025-07-25 10:06:59,861 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:06:59,861 - DEBUG - stack []
2025-07-25 10:06:59,861 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-07-25 10:06:59,861 - DEBUG - stack ['$x4.0']
2025-07-25 10:06:59,861 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:06:59,861 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-07-25 10:06:59,862 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:06:59,862 - DEBUG - stack ['$8binary_subscr.2']
2025-07-25 10:06:59,862 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-07-25 10:06:59,862 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-07-25 10:06:59,862 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:06:59,862 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-07-25 10:06:59,862 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-07-25 10:06:59,862 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-07-25 10:06:59,862 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-07-25 10:06:59,863 - DEBUG - stack ['$binop_add32.6']
2025-07-25 10:06:59,863 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:06:59,863 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-07-25 10:06:59,863 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-07-25 10:06:59,863 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-07-25 10:06:59,863 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:06:59,863 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-07-25 10:06:59,863 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-07-25 10:06:59,863 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-07-25 10:06:59,864 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-07-25 10:06:59,864 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-07-25 10:06:59,864 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-07-25 10:06:59,864 - DEBUG - stack ['$binop_sub56.12']
2025-07-25 10:06:59,864 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 10:06:59,864 - DEBUG - stack []
2025-07-25 10:06:59,864 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-07-25 10:06:59,865 - DEBUG - stack ['$x62.13']
2025-07-25 10:06:59,865 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 10:06:59,865 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-07-25 10:06:59,865 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 10:06:59,865 - DEBUG - stack ['$66binary_subscr.15']
2025-07-25 10:06:59,865 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-07-25 10:06:59,866 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-07-25 10:06:59,866 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 10:06:59,866 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-07-25 10:06:59,866 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-07-25 10:06:59,866 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-07-25 10:06:59,867 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-07-25 10:06:59,867 - DEBUG - stack ['$binop_sub90.19']
2025-07-25 10:06:59,867 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-07-25 10:06:59,867 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-07-25 10:06:59,867 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-07-25 10:06:59,867 - DEBUG - stack ['$binop_truediv96.21']
2025-07-25 10:06:59,867 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 10:06:59,867 - DEBUG - stack []
2025-07-25 10:06:59,867 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 10:06:59,867 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-07-25 10:06:59,868 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-07-25 10:06:59,868 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-07-25 10:06:59,868 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-07-25 10:06:59,868 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 10:06:59,868 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-07-25 10:06:59,868 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 10:06:59,868 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 10:06:59,868 - DEBUG - stack ['$130call.26']
2025-07-25 10:06:59,868 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 10:06:59,868 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-07-25 10:06:59,869 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-07-25 10:06:59,869 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-07-25 10:06:59,869 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-07-25 10:06:59,869 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 10:06:59,869 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-07-25 10:06:59,869 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 10:06:59,869 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-07-25 10:06:59,869 - DEBUG - stack ['$130call.26', '$168call.31']
2025-07-25 10:06:59,869 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-07-25 10:06:59,869 - DEBUG - stack ['$178compare_op.32']
2025-07-25 10:06:59,870 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-25 10:06:59,870 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-25 10:06:59,870 - DEBUG - stack: []
2025-07-25 10:06:59,870 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-07-25 10:06:59,870 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-07-25 10:06:59,870 - DEBUG - stack []
2025-07-25 10:06:59,871 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-07-25 10:06:59,871 - DEBUG - stack ['$const186.0.4']
2025-07-25 10:06:59,871 - DEBUG - end state. edges=[]
2025-07-25 10:06:59,871 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-07-25 10:06:59,871 - DEBUG - stack: []
2025-07-25 10:06:59,871 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-25 10:06:59,871 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-07-25 10:06:59,871 - DEBUG - stack []
2025-07-25 10:06:59,872 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-07-25 10:06:59,872 - DEBUG - stack ['$b190.0']
2025-07-25 10:06:59,872 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-07-25 10:06:59,872 - DEBUG - stack ['$192unary_negative.1']
2025-07-25 10:06:59,872 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-07-25 10:06:59,872 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-07-25 10:06:59,872 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-07-25 10:06:59,872 - DEBUG - stack ['$binop_truediv196.3']
2025-07-25 10:06:59,872 - DEBUG - end state. edges=[]
2025-07-25 10:06:59,872 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:06:59,873 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-25 10:06:59,873 - DEBUG - defmap: {}
2025-07-25 10:06:59,873 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:06:59,873 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:06:59,873 - DEBUG - keep phismap: {}
2025-07-25 10:06:59,873 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 10:06:59,873 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:06:59,873 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-07-25 10:06:59,874 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:06:59,874 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:06:59,875 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-07-25 10:06:59,929 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 10:07:26,827 - INFO - Tags gespeichert für: data\03. Der Sandmann (Feat. Chakuza & Saad).mp3
2025-07-25 10:07:26,827 - ERROR - Fehler bei der Verarbeitung von data\03. Der Sandmann (Feat. Chakuza & Saad).mp3: 'NoneType' object is not subscriptable
2025-07-25 10:07:26,828 - INFO - Verarbeite Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:07:26,828 - INFO - Beginne Verarbeitung der Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:07:26,832 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Untergrund (Feat. Eko Fresh)
2025-07-25 10:07:26,832 - INFO - Lade und speichere Lyrics für: Bushido - Untergrund (Feat. Eko Fresh)
2025-07-25 10:07:26,834 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:07:27,027 - DEBUG - https://genius.com:443 "GET /bushido-untergrund-lyrics HTTP/1.1" 301 None
2025-07-25 10:07:27,055 - DEBUG - https://genius.com:443 "GET /Bushido-untergrund-lyrics HTTP/1.1" 200 None
2025-07-25 10:07:27,291 - DEBUG - BPM-Wert ermittelt: 172
2025-07-25 10:07:54,166 - INFO - Tags gespeichert für: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:07:54,166 - ERROR - Fehler bei der Verarbeitung von data\05. Untergrund (Feat. Eko Fresh).mp3: 'NoneType' object is not subscriptable
2025-07-25 10:07:54,166 - INFO - Verarbeite Datei: data\08. Das Leben ist hart.mp3
2025-07-25 10:07:54,167 - INFO - Beginne Verarbeitung der Datei: data\08. Das Leben ist hart.mp3
2025-07-25 10:07:54,171 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Das Leben ist hart
2025-07-25 10:07:54,171 - INFO - Lade und speichere Lyrics für: Bushido - Das Leben ist hart
2025-07-25 10:07:54,173 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:07:54,596 - DEBUG - https://genius.com:443 "GET /bushido-das-leben-ist-hart-lyrics HTTP/1.1" 301 None
2025-07-25 10:07:54,625 - DEBUG - https://genius.com:443 "GET /Bushido-das-leben-ist-hart-lyrics HTTP/1.1" 200 None
2025-07-25 10:07:54,868 - DEBUG - BPM-Wert ermittelt: 83
2025-07-25 10:09:32,696 - DEBUG - Starte die Anwendung...
2025-07-25 10:09:32,696 - INFO - Verarbeite MP3-Datei...
2025-07-25 10:09:32,697 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 10:09:32,700 - DEBUG - Using proactor: IocpProactor
2025-07-25 10:09:32,702 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 10:09:32,853 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 10:09:32,860 - DEBUG - Using proactor: IocpProactor
2025-07-25 10:09:32,966 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 10:09:33,026 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=None socket_options=None
2025-07-25 10:09:33,027 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F1D5D264D0>
2025-07-25 10:09:33,027 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 10:09:33,027 - DEBUG - send_request_headers.complete
2025-07-25 10:09:33,028 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 10:09:33,028 - DEBUG - send_request_body.complete
2025-07-25 10:09:33,028 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 10:09:33,028 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 08:09:32 GMT'), (b'server', b'uvicorn'), (b'content-length', b'4'), (b'content-type', b'application/json')])
2025-07-25 10:09:33,029 - INFO - HTTP Request: GET http://127.0.0.1:7860/gradio_api/startup-events "HTTP/1.1 200 OK"
2025-07-25 10:09:33,029 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 10:09:33,029 - DEBUG - receive_response_body.complete
2025-07-25 10:09:33,029 - DEBUG - response_closed.started
2025-07-25 10:09:33,029 - DEBUG - response_closed.complete
2025-07-25 10:09:33,029 - DEBUG - close.started
2025-07-25 10:09:33,030 - DEBUG - close.complete
2025-07-25 10:09:33,030 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=3 socket_options=None
2025-07-25 10:09:33,041 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F1D5CA4190>
2025-07-25 10:09:33,041 - DEBUG - send_request_headers.started request=<Request [b'HEAD']>
2025-07-25 10:09:33,041 - DEBUG - send_request_headers.complete
2025-07-25 10:09:33,041 - DEBUG - send_request_body.started request=<Request [b'HEAD']>
2025-07-25 10:09:33,042 - DEBUG - send_request_body.complete
2025-07-25 10:09:33,042 - DEBUG - receive_response_headers.started request=<Request [b'HEAD']>
2025-07-25 10:09:33,051 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 08:09:32 GMT'), (b'server', b'uvicorn'), (b'content-length', b'26551'), (b'content-type', b'text/html; charset=utf-8')])
2025-07-25 10:09:33,051 - INFO - HTTP Request: HEAD http://127.0.0.1:7860/ "HTTP/1.1 200 OK"
2025-07-25 10:09:33,052 - DEBUG - receive_response_body.started request=<Request [b'HEAD']>
2025-07-25 10:09:33,052 - DEBUG - receive_response_body.complete
2025-07-25 10:09:33,052 - DEBUG - response_closed.started
2025-07-25 10:09:33,052 - DEBUG - response_closed.complete
2025-07-25 10:09:33,052 - DEBUG - close.started
2025-07-25 10:09:33,052 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F1D5C8CC10>
2025-07-25 10:09:33,053 - DEBUG - close.complete
2025-07-25 10:09:33,053 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F1D5A37920> server_hostname='api.gradio.app' timeout=3
2025-07-25 10:09:33,055 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 10:09:33,203 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/launched HTTP/1.1" 200 0
2025-07-25 10:09:33,398 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F1D5C8C6D0>
2025-07-25 10:09:33,398 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 10:09:33,398 - DEBUG - send_request_headers.complete
2025-07-25 10:09:33,398 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 10:09:33,399 - DEBUG - send_request_body.complete
2025-07-25 10:09:33,399 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 10:09:33,570 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 08:09:33 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 10:09:33,571 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 10:09:33,571 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 10:09:33,571 - DEBUG - receive_response_body.complete
2025-07-25 10:09:33,571 - DEBUG - response_closed.started
2025-07-25 10:09:33,572 - DEBUG - response_closed.complete
2025-07-25 10:09:33,572 - DEBUG - close.started
2025-07-25 10:09:33,572 - DEBUG - close.complete
2025-07-25 10:09:56,589 - DEBUG - matplotlib data path: Z:\AI\software\miniconda3\envs\ace-data_env\Lib\site-packages\matplotlib\mpl-data
2025-07-25 10:09:56,592 - DEBUG - CONFIGDIR=C:\Users\methm\.matplotlib
2025-07-25 10:09:56,593 - DEBUG - interactive is False
2025-07-25 10:09:56,593 - DEBUG - platform is win32
2025-07-25 10:09:56,627 - DEBUG - CACHEDIR=C:\Users\methm\.matplotlib
2025-07-25 10:09:56,633 - DEBUG - Using fontManager instance from C:\Users\methm\.matplotlib\fontlist-v390.json
2025-07-25 10:09:56,753 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 10:09:56,753 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 10:09:56,754 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 10:09:56,754 - INFO - Verarbeite Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:09:56,754 - INFO - Beginne Verarbeitung der Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:09:56,758 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Untergrund (Feat. Eko Fresh)
2025-07-25 10:09:56,758 - INFO - Lade und speichere Lyrics für: Bushido - Untergrund (Feat. Eko Fresh)
2025-07-25 10:09:56,760 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:09:56,978 - DEBUG - https://genius.com:443 "GET /bushido-untergrund-lyrics HTTP/1.1" 301 None
2025-07-25 10:09:57,314 - DEBUG - https://genius.com:443 "GET /Bushido-untergrund-lyrics HTTP/1.1" 200 None
2025-07-25 10:09:57,416 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
2025-07-25 10:09:57,416 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:09:57,416 - DEBUG - stack: []
2025-07-25 10:09:57,417 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:09:57,417 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-07-25 10:09:57,417 - DEBUG - stack []
2025-07-25 10:09:57,417 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
2025-07-25 10:09:57,417 - DEBUG - stack []
2025-07-25 10:09:57,418 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
2025-07-25 10:09:57,418 - DEBUG - stack []
2025-07-25 10:09:57,418 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
2025-07-25 10:09:57,418 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 10:09:57,418 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
2025-07-25 10:09:57,418 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2025-07-25 10:09:57,418 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
2025-07-25 10:09:57,418 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
2025-07-25 10:09:57,419 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
2025-07-25 10:09:57,419 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
2025-07-25 10:09:57,419 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
2025-07-25 10:09:57,419 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
2025-07-25 10:09:57,419 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
2025-07-25 10:09:57,419 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
2025-07-25 10:09:57,419 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
2025-07-25 10:09:57,419 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
2025-07-25 10:09:57,420 - DEBUG - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
2025-07-25 10:09:57,420 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 10:09:57,420 - DEBUG - dispatch pc=34, inst=CALL(arg=7, lineno=86)
2025-07-25 10:09:57,420 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 10:09:57,420 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
2025-07-25 10:09:57,420 - DEBUG - stack ['$34call.9']
2025-07-25 10:09:57,420 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
2025-07-25 10:09:57,421 - DEBUG - stack []
2025-07-25 10:09:57,421 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
2025-07-25 10:09:57,421 - DEBUG - stack ['$const46.10.0']
2025-07-25 10:09:57,421 - DEBUG - end state. edges=[]
2025-07-25 10:09:57,421 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:09:57,421 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-25 10:09:57,422 - DEBUG - defmap: {}
2025-07-25 10:09:57,422 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:09:57,422 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:09:57,422 - DEBUG - keep phismap: {}
2025-07-25 10:09:57,422 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 10:09:57,423 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:09:57,423 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10.0'}), (48, {'retval': '$const46.10.0', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:09:57,423 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000001F1D7FDC0E0>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10.0 = const(NoneType, None)    ['$const46.10.0']
    $48return_value.11 = cast(value=$const46.10.0) ['$48return_value.11', '$const46.10.0']
    return $48return_value.11                ['$48return_value.11']

2025-07-25 10:09:57,425 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 10:09:57,425 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F1D7D1FD90>
2025-07-25 10:09:57,425 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,426 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,426 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,426 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,426 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,426 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,426 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,426 - DEBUG - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000001F1D7FDC0E0>))
2025-07-25 10:09:57,426 - DEBUG - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,427 - DEBUG - on stmt: $const46.10.0 = const(NoneType, None)
2025-07-25 10:09:57,427 - DEBUG - on stmt: $48return_value.11 = cast(value=$const46.10.0)
2025-07-25 10:09:57,427 - DEBUG - on stmt: return $48return_value.11
2025-07-25 10:09:57,427 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x000001F1D80215D0>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x000001F1D8021A50>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F1D80206D0>,
                                  0)],
             '$const46.10.0': [(<numba.core.ir.Assign object at 0x000001F1D8021810>,
                                0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000001F1D8020110>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000001F1D1347FD0>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000001F1D8020210>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x000001F1D8020350>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x000001F1D1347ED0>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x000001F1D7D58AD0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001F1D8020450>, 0)]})
2025-07-25 10:09:57,428 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F1D7D1FD90>
2025-07-25 10:09:57,430 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
2025-07-25 10:09:57,435 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:09:57,435 - DEBUG - stack: []
2025-07-25 10:09:57,435 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:09:57,435 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-07-25 10:09:57,435 - DEBUG - stack []
2025-07-25 10:09:57,435 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
2025-07-25 10:09:57,436 - DEBUG - stack []
2025-07-25 10:09:57,436 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
2025-07-25 10:09:57,436 - DEBUG - stack []
2025-07-25 10:09:57,436 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
2025-07-25 10:09:57,436 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 10:09:57,436 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
2025-07-25 10:09:57,436 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
2025-07-25 10:09:57,437 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
2025-07-25 10:09:57,437 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
2025-07-25 10:09:57,437 - DEBUG - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
2025-07-25 10:09:57,437 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 10:09:57,437 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=9)
2025-07-25 10:09:57,437 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 10:09:57,437 - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
2025-07-25 10:09:57,437 - DEBUG - stack ['$28call.5']
2025-07-25 10:09:57,438 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
2025-07-25 10:09:57,438 - DEBUG - stack []
2025-07-25 10:09:57,438 - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
2025-07-25 10:09:57,438 - DEBUG - stack ['$const40.6.1']
2025-07-25 10:09:57,438 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
2025-07-25 10:09:57,438 - DEBUG - stack []
2025-07-25 10:09:57,438 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
2025-07-25 10:09:57,438 - DEBUG - stack ['$const44.7.2']
2025-07-25 10:09:57,438 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
2025-07-25 10:09:57,438 - DEBUG - stack []
2025-07-25 10:09:57,438 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
2025-07-25 10:09:57,438 - DEBUG - stack ['$const48.8.1']
2025-07-25 10:09:57,438 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
2025-07-25 10:09:57,439 - DEBUG - stack []
2025-07-25 10:09:57,439 - DEBUG - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
2025-07-25 10:09:57,439 - DEBUG - stack ['$const52.9.1']
2025-07-25 10:09:57,439 - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
2025-07-25 10:09:57,439 - DEBUG - stack []
2025-07-25 10:09:57,439 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
2025-07-25 10:09:57,439 - DEBUG - stack ['$const56.10.2']
2025-07-25 10:09:57,439 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
2025-07-25 10:09:57,439 - DEBUG - stack []
2025-07-25 10:09:57,439 - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
2025-07-25 10:09:57,439 - DEBUG - stack ['$const60.11.1']
2025-07-25 10:09:57,439 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
2025-07-25 10:09:57,440 - DEBUG - stack []
2025-07-25 10:09:57,440 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
2025-07-25 10:09:57,440 - DEBUG - stack ['$const64.12.1']
2025-07-25 10:09:57,440 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
2025-07-25 10:09:57,440 - DEBUG - stack []
2025-07-25 10:09:57,440 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
2025-07-25 10:09:57,440 - DEBUG - stack ['$interp_win68.13']
2025-07-25 10:09:57,440 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
2025-07-25 10:09:57,441 - DEBUG - stack ['$70load_attr.14']
2025-07-25 10:09:57,441 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-07-25 10:09:57,441 - DEBUG - stack ['$70load_attr.14', '$const80.15.2']
2025-07-25 10:09:57,441 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
2025-07-25 10:09:57,441 - DEBUG - stack ['$82binary_subscr.16']
2025-07-25 10:09:57,441 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
2025-07-25 10:09:57,441 - DEBUG - stack []
2025-07-25 10:09:57,441 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
2025-07-25 10:09:57,441 - DEBUG - stack ['$x94.17']
2025-07-25 10:09:57,441 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
2025-07-25 10:09:57,441 - DEBUG - stack ['$96load_attr.18']
2025-07-25 10:09:57,442 - DEBUG - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-07-25 10:09:57,442 - DEBUG - stack ['$96load_attr.18', '$const106.19.2']
2025-07-25 10:09:57,442 - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
2025-07-25 10:09:57,442 - DEBUG - stack ['$108binary_subscr.20']
2025-07-25 10:09:57,442 - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
2025-07-25 10:09:57,442 - DEBUG - stack []
2025-07-25 10:09:57,442 - DEBUG - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
2025-07-25 10:09:57,442 - DEBUG - stack ['$t_out120.21']
2025-07-25 10:09:57,442 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
2025-07-25 10:09:57,442 - DEBUG - stack ['$122load_attr.22']
2025-07-25 10:09:57,442 - DEBUG - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-07-25 10:09:57,442 - DEBUG - stack ['$122load_attr.22', '$const132.23.2']
2025-07-25 10:09:57,442 - DEBUG - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
2025-07-25 10:09:57,442 - DEBUG - stack ['$134binary_subscr.24']
2025-07-25 10:09:57,443 - DEBUG - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
2025-07-25 10:09:57,443 - DEBUG - stack []
2025-07-25 10:09:57,443 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
2025-07-25 10:09:57,443 - DEBUG - stack ['$null$146.26', '$146load_global.25']
2025-07-25 10:09:57,443 - DEBUG - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
2025-07-25 10:09:57,443 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 10:09:57,443 - DEBUG - dispatch pc=164, inst=CALL(arg=1, lineno=23)
2025-07-25 10:09:57,443 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 10:09:57,443 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
2025-07-25 10:09:57,443 - DEBUG - stack ['$164call.28']
2025-07-25 10:09:57,443 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
2025-07-25 10:09:57,443 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2025-07-25 10:09:57,443 - DEBUG - stack: ['$phi176.0']
2025-07-25 10:09:57,443 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2025-07-25 10:09:57,444 - DEBUG - dispatch pc=176, inst=NOP(arg=1, lineno=23)
2025-07-25 10:09:57,444 - DEBUG - stack ['$phi176.0']
2025-07-25 10:09:57,444 - DEBUG - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
2025-07-25 10:09:57,444 - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=1)])
2025-07-25 10:09:57,444 - DEBUG - stack: ['$phi178.0']
2025-07-25 10:09:57,444 - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=1)
2025-07-25 10:09:57,444 - DEBUG - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
2025-07-25 10:09:57,444 - DEBUG - stack ['$phi178.0']
2025-07-25 10:09:57,444 - DEBUG - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
2025-07-25 10:09:57,445 - DEBUG - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
2025-07-25 10:09:57,445 - DEBUG - stack: []
2025-07-25 10:09:57,445 - DEBUG - state.pc_initial: State(pc_initial=782 nstack_initial=0)
2025-07-25 10:09:57,445 - DEBUG - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
2025-07-25 10:09:57,445 - DEBUG - stack []
2025-07-25 10:09:57,445 - DEBUG - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
2025-07-25 10:09:57,445 - DEBUG - stack ['$const782.0.0']
2025-07-25 10:09:57,445 - DEBUG - end state. edges=[]
2025-07-25 10:09:57,445 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2025-07-25 10:09:57,446 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2025-07-25 10:09:57,446 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2025-07-25 10:09:57,446 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
2025-07-25 10:09:57,446 - DEBUG - stack ['$phi180.0', '$phi180.1']
2025-07-25 10:09:57,446 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
2025-07-25 10:09:57,446 - DEBUG - stack ['$phi180.0']
2025-07-25 10:09:57,446 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
2025-07-25 10:09:57,446 - DEBUG - stack ['$phi180.0', '$t_out182.2']
2025-07-25 10:09:57,446 - DEBUG - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-07-25 10:09:57,446 - DEBUG - stack ['$phi180.0', '$t_out182.2', '$t184.3']
2025-07-25 10:09:57,446 - DEBUG - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
2025-07-25 10:09:57,446 - DEBUG - stack ['$phi180.0', '$186binary_subscr.4']
2025-07-25 10:09:57,447 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
2025-07-25 10:09:57,447 - DEBUG - stack ['$phi180.0']
2025-07-25 10:09:57,447 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
2025-07-25 10:09:57,447 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
2025-07-25 10:09:57,447 - DEBUG - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
2025-07-25 10:09:57,447 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 10:09:57,447 - DEBUG - dispatch pc=216, inst=CALL(arg=1, lineno=27)
2025-07-25 10:09:57,447 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 10:09:57,447 - DEBUG - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
2025-07-25 10:09:57,447 - DEBUG - stack ['$phi180.0', '$216call.8']
2025-07-25 10:09:57,447 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
2025-07-25 10:09:57,447 - DEBUG - stack ['$phi180.0']
2025-07-25 10:09:57,447 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
2025-07-25 10:09:57,447 - DEBUG - stack ['$phi180.0', '$scale228.9']
2025-07-25 10:09:57,447 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
2025-07-25 10:09:57,448 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
2025-07-25 10:09:57,448 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
2025-07-25 10:09:57,448 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
2025-07-25 10:09:57,448 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
2025-07-25 10:09:57,448 - DEBUG - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
2025-07-25 10:09:57,448 - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
2025-07-25 10:09:57,448 - DEBUG - stack ['$phi180.0', '$binop_mul238.13']
2025-07-25 10:09:57,448 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
2025-07-25 10:09:57,448 - DEBUG - stack ['$phi180.0']
2025-07-25 10:09:57,448 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
2025-07-25 10:09:57,449 - DEBUG - stack ['$phi180.0', '$frac244.14']
2025-07-25 10:09:57,449 - DEBUG - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
2025-07-25 10:09:57,449 - DEBUG - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
2025-07-25 10:09:57,449 - DEBUG - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
2025-07-25 10:09:57,449 - DEBUG - stack ['$phi180.0', '$binop_mul248.16']
2025-07-25 10:09:57,449 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
2025-07-25 10:09:57,449 - DEBUG - stack ['$phi180.0']
2025-07-25 10:09:57,449 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
2025-07-25 10:09:57,450 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
2025-07-25 10:09:57,450 - DEBUG - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
2025-07-25 10:09:57,450 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 10:09:57,450 - DEBUG - dispatch pc=272, inst=CALL(arg=1, lineno=34)
2025-07-25 10:09:57,450 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 10:09:57,450 - DEBUG - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
2025-07-25 10:09:57,450 - DEBUG - stack ['$phi180.0', '$272call.20']
2025-07-25 10:09:57,450 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
2025-07-25 10:09:57,450 - DEBUG - stack ['$phi180.0']
2025-07-25 10:09:57,450 - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
2025-07-25 10:09:57,450 - DEBUG - stack ['$phi180.0', '$index_frac284.21']
2025-07-25 10:09:57,451 - DEBUG - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
2025-07-25 10:09:57,451 - DEBUG - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
2025-07-25 10:09:57,451 - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
2025-07-25 10:09:57,451 - DEBUG - stack ['$phi180.0', '$binop_sub288.23']
2025-07-25 10:09:57,451 - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
2025-07-25 10:09:57,451 - DEBUG - stack ['$phi180.0']
2025-07-25 10:09:57,451 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
2025-07-25 10:09:57,451 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
2025-07-25 10:09:57,451 - DEBUG - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
2025-07-25 10:09:57,451 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
2025-07-25 10:09:57,451 - DEBUG - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
2025-07-25 10:09:57,451 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27.3']
2025-07-25 10:09:57,451 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
2025-07-25 10:09:57,452 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
2025-07-25 10:09:57,452 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
2025-07-25 10:09:57,452 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
2025-07-25 10:09:57,452 - DEBUG - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
2025-07-25 10:09:57,452 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
2025-07-25 10:09:57,452 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
2025-07-25 10:09:57,452 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
2025-07-25 10:09:57,452 - DEBUG - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
2025-07-25 10:09:57,452 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
2025-07-25 10:09:57,452 - DEBUG - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
2025-07-25 10:09:57,453 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 10:09:57,453 - DEBUG - dispatch pc=332, inst=CALL(arg=2, lineno=40)
2025-07-25 10:09:57,453 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 10:09:57,453 - DEBUG - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
2025-07-25 10:09:57,453 - DEBUG - stack ['$phi180.0', '$332call.34']
2025-07-25 10:09:57,453 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
2025-07-25 10:09:57,453 - DEBUG - stack ['$phi180.0']
2025-07-25 10:09:57,453 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
2025-07-25 10:09:57,454 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
2025-07-25 10:09:57,454 - DEBUG - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
2025-07-25 10:09:57,454 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 10:09:57,454 - DEBUG - dispatch pc=362, inst=CALL(arg=1, lineno=41)
2025-07-25 10:09:57,454 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 10:09:57,454 - DEBUG - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
2025-07-25 10:09:57,454 - DEBUG - stack ['$phi180.0', '$362call.38']
2025-07-25 10:09:57,454 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
2025-07-25 10:09:57,454 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2)])
2025-07-25 10:09:57,455 - DEBUG - stack: ['$phi374.0', '$phi374.1']
2025-07-25 10:09:57,455 - DEBUG - state.pc_initial: State(pc_initial=374 nstack_initial=2)
2025-07-25 10:09:57,455 - DEBUG - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
2025-07-25 10:09:57,455 - DEBUG - stack ['$phi374.0', '$phi374.1']
2025-07-25 10:09:57,455 - DEBUG - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
2025-07-25 10:09:57,455 - DEBUG - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
2025-07-25 10:09:57,455 - DEBUG - stack: ['$phi500.0']
2025-07-25 10:09:57,455 - DEBUG - state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-07-25 10:09:57,455 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
2025-07-25 10:09:57,455 - DEBUG - stack ['$phi500.0']
2025-07-25 10:09:57,455 - DEBUG - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
2025-07-25 10:09:57,455 - DEBUG - stack ['$phi500.0', '$scale500.1']
2025-07-25 10:09:57,456 - DEBUG - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
2025-07-25 10:09:57,456 - DEBUG - stack ['$phi500.0', '$scale500.1', '$frac502.2']
2025-07-25 10:09:57,456 - DEBUG - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
2025-07-25 10:09:57,456 - DEBUG - stack ['$phi500.0', '$binop_sub504.3']
2025-07-25 10:09:57,456 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
2025-07-25 10:09:57,456 - DEBUG - stack ['$phi500.0']
2025-07-25 10:09:57,456 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
2025-07-25 10:09:57,456 - DEBUG - stack ['$phi500.0', '$frac510.4']
2025-07-25 10:09:57,456 - DEBUG - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
2025-07-25 10:09:57,456 - DEBUG - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
2025-07-25 10:09:57,457 - DEBUG - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
2025-07-25 10:09:57,457 - DEBUG - stack ['$phi500.0', '$binop_mul514.6']
2025-07-25 10:09:57,457 - DEBUG - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
2025-07-25 10:09:57,457 - DEBUG - stack ['$phi500.0']
2025-07-25 10:09:57,457 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
2025-07-25 10:09:57,457 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
2025-07-25 10:09:57,457 - DEBUG - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
2025-07-25 10:09:57,458 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 10:09:57,458 - DEBUG - dispatch pc=538, inst=CALL(arg=1, lineno=54)
2025-07-25 10:09:57,458 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 10:09:57,458 - DEBUG - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
2025-07-25 10:09:57,458 - DEBUG - stack ['$phi500.0', '$538call.10']
2025-07-25 10:09:57,458 - DEBUG - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
2025-07-25 10:09:57,458 - DEBUG - stack ['$phi500.0']
2025-07-25 10:09:57,458 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
2025-07-25 10:09:57,458 - DEBUG - stack ['$phi500.0', '$index_frac550.11']
2025-07-25 10:09:57,458 - DEBUG - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
2025-07-25 10:09:57,458 - DEBUG - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
2025-07-25 10:09:57,458 - DEBUG - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
2025-07-25 10:09:57,458 - DEBUG - stack ['$phi500.0', '$binop_sub554.13']
2025-07-25 10:09:57,459 - DEBUG - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
2025-07-25 10:09:57,459 - DEBUG - stack ['$phi500.0']
2025-07-25 10:09:57,459 - DEBUG - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
2025-07-25 10:09:57,459 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
2025-07-25 10:09:57,459 - DEBUG - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
2025-07-25 10:09:57,459 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
2025-07-25 10:09:57,459 - DEBUG - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:09:57,459 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
2025-07-25 10:09:57,459 - DEBUG - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
2025-07-25 10:09:57,459 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
2025-07-25 10:09:57,459 - DEBUG - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:09:57,459 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19.3']
2025-07-25 10:09:57,459 - DEBUG - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
2025-07-25 10:09:57,459 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
2025-07-25 10:09:57,460 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
2025-07-25 10:09:57,460 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
2025-07-25 10:09:57,460 - DEBUG - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:09:57,460 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
2025-07-25 10:09:57,460 - DEBUG - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
2025-07-25 10:09:57,460 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
2025-07-25 10:09:57,460 - DEBUG - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
2025-07-25 10:09:57,460 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
2025-07-25 10:09:57,461 - DEBUG - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
2025-07-25 10:09:57,461 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 10:09:57,461 - DEBUG - dispatch pc=604, inst=CALL(arg=2, lineno=60)
2025-07-25 10:09:57,461 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 10:09:57,461 - DEBUG - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
2025-07-25 10:09:57,462 - DEBUG - stack ['$phi500.0', '$604call.26']
2025-07-25 10:09:57,462 - DEBUG - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
2025-07-25 10:09:57,462 - DEBUG - stack ['$phi500.0']
2025-07-25 10:09:57,462 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
2025-07-25 10:09:57,462 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
2025-07-25 10:09:57,462 - DEBUG - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
2025-07-25 10:09:57,462 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 10:09:57,462 - DEBUG - dispatch pc=634, inst=CALL(arg=1, lineno=61)
2025-07-25 10:09:57,463 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 10:09:57,463 - DEBUG - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
2025-07-25 10:09:57,463 - DEBUG - stack ['$phi500.0', '$634call.30']
2025-07-25 10:09:57,463 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
2025-07-25 10:09:57,463 - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:09:57,463 - DEBUG - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 10:09:57,463 - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=3)
2025-07-25 10:09:57,463 - DEBUG - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
2025-07-25 10:09:57,463 - DEBUG - stack ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 10:09:57,463 - DEBUG - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
2025-07-25 10:09:57,463 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:09:57,463 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
2025-07-25 10:09:57,463 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
2025-07-25 10:09:57,464 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
2025-07-25 10:09:57,464 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
2025-07-25 10:09:57,464 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
2025-07-25 10:09:57,464 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
2025-07-25 10:09:57,464 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
2025-07-25 10:09:57,464 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
2025-07-25 10:09:57,464 - DEBUG - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 10:09:57,464 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
2025-07-25 10:09:57,464 - DEBUG - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-07-25 10:09:57,464 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
2025-07-25 10:09:57,464 - DEBUG - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
2025-07-25 10:09:57,464 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
2025-07-25 10:09:57,464 - DEBUG - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
2025-07-25 10:09:57,465 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
2025-07-25 10:09:57,465 - DEBUG - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
2025-07-25 10:09:57,465 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
2025-07-25 10:09:57,465 - DEBUG - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
2025-07-25 10:09:57,465 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
2025-07-25 10:09:57,465 - DEBUG - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
2025-07-25 10:09:57,465 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
2025-07-25 10:09:57,466 - DEBUG - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 10:09:57,466 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
2025-07-25 10:09:57,466 - DEBUG - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
2025-07-25 10:09:57,466 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
2025-07-25 10:09:57,466 - DEBUG - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-07-25 10:09:57,466 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
2025-07-25 10:09:57,466 - DEBUG - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 10:09:57,467 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
2025-07-25 10:09:57,467 - DEBUG - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 10:09:57,467 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
2025-07-25 10:09:57,467 - DEBUG - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
2025-07-25 10:09:57,467 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
2025-07-25 10:09:57,467 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
2025-07-25 10:09:57,467 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:09:57,467 - DEBUG - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
2025-07-25 10:09:57,467 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20']
2025-07-25 10:09:57,467 - DEBUG - dispatch pc=446, inst=COPY(arg=2, lineno=47)
2025-07-25 10:09:57,468 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
2025-07-25 10:09:57,468 - DEBUG - dispatch pc=448, inst=COPY(arg=2, lineno=47)
2025-07-25 10:09:57,468 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
2025-07-25 10:09:57,468 - DEBUG - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 10:09:57,468 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
2025-07-25 10:09:57,468 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
2025-07-25 10:09:57,468 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
2025-07-25 10:09:57,468 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
2025-07-25 10:09:57,468 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
2025-07-25 10:09:57,468 - DEBUG - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
2025-07-25 10:09:57,468 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
2025-07-25 10:09:57,468 - DEBUG - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
2025-07-25 10:09:57,468 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
2025-07-25 10:09:57,468 - DEBUG - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
2025-07-25 10:09:57,469 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
2025-07-25 10:09:57,469 - DEBUG - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 10:09:57,469 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
2025-07-25 10:09:57,469 - DEBUG - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
2025-07-25 10:09:57,469 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
2025-07-25 10:09:57,469 - DEBUG - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
2025-07-25 10:09:57,469 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
2025-07-25 10:09:57,469 - DEBUG - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
2025-07-25 10:09:57,469 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
2025-07-25 10:09:57,470 - DEBUG - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
2025-07-25 10:09:57,470 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
2025-07-25 10:09:57,470 - DEBUG - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-07-25 10:09:57,470 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
2025-07-25 10:09:57,470 - DEBUG - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
2025-07-25 10:09:57,470 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:09:57,470 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
2025-07-25 10:09:57,471 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
2025-07-25 10:09:57,471 - DEBUG - stack: ['$phi646.0', '$phi646.1']
2025-07-25 10:09:57,471 - DEBUG - state.pc_initial: State(pc_initial=646 nstack_initial=2)
2025-07-25 10:09:57,471 - DEBUG - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
2025-07-25 10:09:57,471 - DEBUG - stack ['$phi646.0', '$phi646.1']
2025-07-25 10:09:57,471 - DEBUG - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
2025-07-25 10:09:57,471 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 10:09:57,471 - DEBUG - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 10:09:57,471 - DEBUG - stack: ['$phi778.0']
2025-07-25 10:09:57,471 - DEBUG - state.pc_initial: State(pc_initial=778 nstack_initial=1)
2025-07-25 10:09:57,471 - DEBUG - dispatch pc=778, inst=NOP(arg=1, lineno=61)
2025-07-25 10:09:57,471 - DEBUG - stack ['$phi778.0']
2025-07-25 10:09:57,472 - DEBUG - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
2025-07-25 10:09:57,472 - DEBUG - stack ['$phi778.0']
2025-07-25 10:09:57,472 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
2025-07-25 10:09:57,472 - DEBUG - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
2025-07-25 10:09:57,472 - DEBUG - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 10:09:57,472 - DEBUG - state.pc_initial: State(pc_initial=648 nstack_initial=3)
2025-07-25 10:09:57,472 - DEBUG - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
2025-07-25 10:09:57,472 - DEBUG - stack ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 10:09:57,472 - DEBUG - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
2025-07-25 10:09:57,472 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:09:57,472 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
2025-07-25 10:09:57,472 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
2025-07-25 10:09:57,472 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
2025-07-25 10:09:57,473 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
2025-07-25 10:09:57,473 - DEBUG - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
2025-07-25 10:09:57,473 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
2025-07-25 10:09:57,473 - DEBUG - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
2025-07-25 10:09:57,473 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
2025-07-25 10:09:57,473 - DEBUG - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 10:09:57,473 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
2025-07-25 10:09:57,474 - DEBUG - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-07-25 10:09:57,474 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
2025-07-25 10:09:57,474 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
2025-07-25 10:09:57,474 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
2025-07-25 10:09:57,474 - DEBUG - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
2025-07-25 10:09:57,474 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
2025-07-25 10:09:57,474 - DEBUG - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
2025-07-25 10:09:57,474 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
2025-07-25 10:09:57,474 - DEBUG - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
2025-07-25 10:09:57,474 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
2025-07-25 10:09:57,475 - DEBUG - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
2025-07-25 10:09:57,475 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
2025-07-25 10:09:57,475 - DEBUG - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 10:09:57,475 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
2025-07-25 10:09:57,475 - DEBUG - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
2025-07-25 10:09:57,475 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
2025-07-25 10:09:57,475 - DEBUG - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-07-25 10:09:57,475 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
2025-07-25 10:09:57,475 - DEBUG - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 10:09:57,475 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
2025-07-25 10:09:57,476 - DEBUG - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 10:09:57,476 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
2025-07-25 10:09:57,476 - DEBUG - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
2025-07-25 10:09:57,476 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
2025-07-25 10:09:57,476 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
2025-07-25 10:09:57,476 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:09:57,476 - DEBUG - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
2025-07-25 10:09:57,476 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20']
2025-07-25 10:09:57,476 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=66)
2025-07-25 10:09:57,476 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
2025-07-25 10:09:57,476 - DEBUG - dispatch pc=720, inst=COPY(arg=2, lineno=66)
2025-07-25 10:09:57,476 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
2025-07-25 10:09:57,477 - DEBUG - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 10:09:57,477 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
2025-07-25 10:09:57,477 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
2025-07-25 10:09:57,477 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
2025-07-25 10:09:57,477 - DEBUG - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
2025-07-25 10:09:57,477 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
2025-07-25 10:09:57,477 - DEBUG - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
2025-07-25 10:09:57,477 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
2025-07-25 10:09:57,477 - DEBUG - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
2025-07-25 10:09:57,477 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
2025-07-25 10:09:57,477 - DEBUG - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 10:09:57,478 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
2025-07-25 10:09:57,478 - DEBUG - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
2025-07-25 10:09:57,478 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
2025-07-25 10:09:57,478 - DEBUG - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 10:09:57,478 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28.3']
2025-07-25 10:09:57,478 - DEBUG - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 10:09:57,478 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
2025-07-25 10:09:57,479 - DEBUG - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
2025-07-25 10:09:57,479 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
2025-07-25 10:09:57,479 - DEBUG - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
2025-07-25 10:09:57,479 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
2025-07-25 10:09:57,479 - DEBUG - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
2025-07-25 10:09:57,479 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
2025-07-25 10:09:57,479 - DEBUG - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
2025-07-25 10:09:57,479 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
2025-07-25 10:09:57,479 - DEBUG - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-07-25 10:09:57,479 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
2025-07-25 10:09:57,479 - DEBUG - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
2025-07-25 10:09:57,479 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:09:57,479 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
2025-07-25 10:09:57,480 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:09:57,480 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:09:57,480 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:09:57,480 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
2025-07-25 10:09:57,480 - DEBUG - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
2025-07-25 10:09:57,481 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
2025-07-25 10:09:57,482 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:09:57,483 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:09:57,484 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:09:57,485 - DEBUG - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
2025-07-25 10:09:57,486 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
2025-07-25 10:09:57,486 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:09:57,486 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6.1'}), (42, {'value': '$const40.6.1'}), (44, {'res': '$const44.7.2'}), (46, {'value': '$const44.7.2'}), (48, {'res': '$const48.8.1'}), (50, {'value': '$const48.8.1'}), (52, {'res': '$const52.9.1'}), (54, {'value': '$const52.9.1'}), (56, {'res': '$const56.10.2'}), (58, {'value': '$const56.10.2'}), (60, {'res': '$const60.11.1'}), (62, {'value': '$const60.11.1'}), (64, {'res': '$const64.12.1'}), (66, {'value': '$const64.12.1'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15.2'}), (82, {'index': '$const80.15.2', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19.2'}), (108, {'index': '$const106.19.2', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23.2'}), (134, {'index': '$const132.23.2', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
2025-07-25 10:09:57,487 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
2025-07-25 10:09:57,487 - DEBUG - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
2025-07-25 10:09:57,487 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27.3'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27.3', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
2025-07-25 10:09:57,488 - DEBUG - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
2025-07-25 10:09:57,488 - DEBUG - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
2025-07-25 10:09:57,489 - DEBUG - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19.3'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19.3', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
2025-07-25 10:09:57,489 - DEBUG - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
2025-07-25 10:09:57,489 - DEBUG - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28.3'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28.3', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
2025-07-25 10:09:57,490 - DEBUG - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
2025-07-25 10:09:57,490 - DEBUG - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0.0'}), (784, {'retval': '$const782.0.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:09:57,492 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15.2 = const(int, 0)            ['$const80.15.2']
    nwin = getitem(value=$70load_attr.14, index=$const80.15.2, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15.2', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19.2 = const(int, 0)           ['$const106.19.2']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19.2, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19.2', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23.2 = const(int, 0)           ['$const132.23.2']
    n_out = getitem(value=$122load_attr.22, index=$const132.23.2, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23.2', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27.3 = const(int, 1)           ['$const308.27.3']
    $binop_add310.28 = n + $const308.27.3    ['$binop_add310.28', '$const308.27.3', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19.3 = const(int, 1)           ['$const580.19.3']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19.3 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19.3']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28.3 = const(int, 1)           ['$const744.28.3']
    $binop_add746.29 = $binop_add740.27 + $const744.28.3 ['$binop_add740.27', '$binop_add746.29', '$const744.28.3']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0.0 = const(NoneType, None)    ['$const782.0.0']
    $784return_value.1 = cast(value=$const782.0.0) ['$784return_value.1', '$const782.0.0']
    return $784return_value.1                ['$784return_value.1']

2025-07-25 10:09:57,509 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 10:09:57,509 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F1D1346850>
2025-07-25 10:09:57,509 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,509 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,509 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,509 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,510 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,510 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,510 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,510 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,510 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,510 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,510 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,511 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,511 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,511 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,511 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,511 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,511 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,511 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,511 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,512 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,512 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,512 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,512 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,512 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,512 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,513 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,513 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,513 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,513 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,513 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,513 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,513 - DEBUG - ==== SSA block analysis pass on 176
2025-07-25 10:09:57,513 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F1D1346850>
2025-07-25 10:09:57,513 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,513 - DEBUG - ==== SSA block analysis pass on 178
2025-07-25 10:09:57,513 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F1D1346850>
2025-07-25 10:09:57,514 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,514 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,514 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,514 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,514 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,514 - DEBUG - ==== SSA block analysis pass on 180
2025-07-25 10:09:57,514 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F1D1346850>
2025-07-25 10:09:57,514 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,515 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,515 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,515 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,515 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:09:57,515 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:09:57,515 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,516 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,516 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,516 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,516 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,516 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,516 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:09:57,516 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:09:57,516 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,516 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,516 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,517 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,517 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,517 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,517 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,517 - DEBUG - ==== SSA block analysis pass on 374
2025-07-25 10:09:57,517 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F1D1346850>
2025-07-25 10:09:57,517 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,517 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,517 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,517 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,517 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,517 - DEBUG - ==== SSA block analysis pass on 376
2025-07-25 10:09:57,517 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F1D1346850>
2025-07-25 10:09:57,518 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,518 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,518 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:09:57,518 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,518 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,518 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:09:57,518 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,518 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,518 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,518 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,518 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:09:57,518 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,518 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,519 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,519 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,519 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,519 - DEBUG - ==== SSA block analysis pass on 500
2025-07-25 10:09:57,519 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F1D1346850>
2025-07-25 10:09:57,520 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:09:57,520 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:09:57,520 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,520 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,520 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,520 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,520 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,520 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:09:57,521 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,521 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,521 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:09:57,521 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,521 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,521 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,521 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,521 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,521 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,521 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,521 - DEBUG - ==== SSA block analysis pass on 646
2025-07-25 10:09:57,521 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F1D1346850>
2025-07-25 10:09:57,521 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,522 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,522 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,522 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,522 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,522 - DEBUG - ==== SSA block analysis pass on 648
2025-07-25 10:09:57,522 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F1D1346850>
2025-07-25 10:09:57,522 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,522 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,522 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:09:57,522 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,522 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,522 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:09:57,522 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,522 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,522 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,523 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,523 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:09:57,523 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,523 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,523 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,523 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,523 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,524 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,524 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,524 - DEBUG - ==== SSA block analysis pass on 778
2025-07-25 10:09:57,524 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F1D1346850>
2025-07-25 10:09:57,524 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,524 - DEBUG - ==== SSA block analysis pass on 782
2025-07-25 10:09:57,524 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001F1D1346850>
2025-07-25 10:09:57,524 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,524 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,525 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,525 - DEBUG - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x000001F1D7E2FCD0>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x000001F1D7E30550>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x000001F1D7E30A10>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x000001F1D7E30D50>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x000001F1D7E30BD0>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x000001F1D7E30F10>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x000001F1D7E31090>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x000001F1D7E31C10>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x000001F1D7E335D0>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x000001F1D7E34390>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x000001F1D7E35A90>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x000001F1D7E35ED0>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x000001F1D7E36190>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x000001F1D7E31650>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x000001F1D7E32790>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x000001F1D7E33450>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001F1D7E36CD0>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x000001F1D7E37A90>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x000001F1D7E385D0>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x000001F1D7E39050>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001F1D7E12650>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x000001F1D7E39E50>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x000001F1D7E3AC50>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x000001F1D7E40510>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x000001F1D7E40910>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x000001F1D7E40C10>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x000001F1D7E397D0>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x000001F1D7E3AA10>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x000001F1D7E3B910>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001F1D7E41A90>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x000001F1D7E42790>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x000001F1D7E2EA10>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x000001F1D7E43250>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x000001F1D7E48090>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x000001F1D7E433D0>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x000001F1D7E2F2D0>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x000001F1D7E34A10>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x000001F1D7E36A90>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x000001F1D7E37850>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x000001F1D7E41890>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x000001F1D7E42550>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x000001F1D7E43A50>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x000001F1D7E43E50>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x000001F1D7E35390>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x000001F1D7E3BF90>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x000001F1D7E39510>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x000001F1D7E48550>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x000001F1D7E12DD0>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x000001F1D7E36890>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x000001F1D7E37610>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x000001F1D7E37D50>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x000001F1D7E39350>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x000001F1D7E41690>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x000001F1D7E42350>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x000001F1D7E42990>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x000001F1D7E48310>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x000001F1D7E329D0>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x000001F1D7E34F90>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x000001F1D7E38E10>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x000001F1D7E380D0>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x000001F1D7E3B250>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x000001F1D7E3B650>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x000001F1D7E3BB50>,
                                   500)],
             '$const106.19.2': [(<numba.core.ir.Assign object at 0x000001F1D7E2F550>,
                                 0)],
             '$const132.23.2': [(<numba.core.ir.Assign object at 0x000001F1D7E2FF50>,
                                 0)],
             '$const308.27.3': [(<numba.core.ir.Assign object at 0x000001F1D7E347D0>,
                                 180)],
             '$const580.19.3': [(<numba.core.ir.Assign object at 0x000001F1D7E3B450>,
                                 500)],
             '$const744.28.3': [(<numba.core.ir.Assign object at 0x000001F1D7E43C10>,
                                 648)],
             '$const782.0.0': [(<numba.core.ir.Assign object at 0x000001F1D7E41D50>,
                                782)],
             '$const80.15.2': [(<numba.core.ir.Assign object at 0x000001F1D7E2EC10>,
                                0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x000001F1D8032390>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x000001F1D7E27AD0>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x000001F1D8033990>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x000001F1D7E33190>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x000001F1D7E36E50>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x000001F1D7E40350>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x000001F1D7E2E1D0>, 0),
                     (<numba.core.ir.Assign object at 0x000001F1D7E340D0>, 180),
                     (<numba.core.ir.Assign object at 0x000001F1D7E3A950>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x000001F1D7E2D890>, 0),
                      (<numba.core.ir.Assign object at 0x000001F1D7E32C10>,
                       180),
                      (<numba.core.ir.Assign object at 0x000001F1D8031950>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x000001F1D7E341D0>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x000001F1D7E35650>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x000001F1D7E2DB50>,
                             0),
                            (<numba.core.ir.Assign object at 0x000001F1D7E332D0>,
                             180),
                            (<numba.core.ir.Assign object at 0x000001F1D7E39BD0>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x000001F1D80300D0>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000001F1D7E19050>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000001F1D7E1AA50>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x000001F1D7E40E10>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x000001F1D7E40210>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x000001F1D7FDB650>, 0),
                   (<numba.core.ir.Assign object at 0x000001F1D7E32190>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x000001F1D7E1CE10>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x000001F1D79DCF50>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000001F1D7BB9F90>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x000001F1D7CF88D0>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x000001F1D7E2DE90>,
                         0),
                        (<numba.core.ir.Assign object at 0x000001F1D7E33AD0>,
                         180),
                        (<numba.core.ir.Assign object at 0x000001F1D7E3A2D0>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x000001F1D8020910>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x000001F1D7E31350>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x000001F1D7E1ADD0>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x000001F1D7E24C10>,
                                0),
                               (<numba.core.ir.Assign object at 0x000001F1D7E31890>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x000001F1D7E2E510>,
                         0),
                        (<numba.core.ir.Assign object at 0x000001F1D7E37F90>,
                         376),
                        (<numba.core.ir.Assign object at 0x000001F1D7E42BD0>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x000001F1D7E1AF10>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001F1D8020E10>, 0)]})
2025-07-25 10:09:57,531 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001F1D13462D0>
2025-07-25 10:09:57,531 - DEBUG - Fix SSA violator on var time_register
2025-07-25 10:09:57,531 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,531 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1ABD0>
2025-07-25 10:09:57,531 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,531 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,532 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,532 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,532 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,532 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,532 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,532 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,532 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,532 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,533 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,533 - DEBUG - first assign: time_register
2025-07-25 10:09:57,533 - DEBUG - replaced with: time_register = const(float, 0.0)
2025-07-25 10:09:57,533 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,533 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,533 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,533 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,533 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,533 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,533 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,533 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,534 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,534 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,534 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,534 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,534 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,534 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,534 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,534 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,534 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,534 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,534 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,535 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,535 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,535 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1ABD0>
2025-07-25 10:09:57,535 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,535 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,535 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1ABD0>
2025-07-25 10:09:57,535 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,535 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,535 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,536 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,536 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,536 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,536 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1ABD0>
2025-07-25 10:09:57,536 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,536 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,536 - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,536 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,537 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,537 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:09:57,537 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:09:57,537 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,537 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,537 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,537 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,537 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,537 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,537 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:09:57,537 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:09:57,538 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,538 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,538 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,538 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,538 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,538 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,538 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,538 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,538 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1ABD0>
2025-07-25 10:09:57,538 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,538 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,538 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,538 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,539 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,539 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,539 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1ABD0>
2025-07-25 10:09:57,539 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,539 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,539 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:09:57,539 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,539 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,539 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:09:57,539 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,539 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,540 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,540 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,540 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:09:57,540 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,540 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,540 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,541 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,541 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,541 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,541 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1ABD0>
2025-07-25 10:09:57,541 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:09:57,541 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:09:57,541 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,541 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,541 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,541 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,541 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,542 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:09:57,542 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,542 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,542 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:09:57,542 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,542 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,542 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,542 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,542 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,542 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,542 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,542 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,542 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1ABD0>
2025-07-25 10:09:57,543 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,543 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,543 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,543 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,543 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,543 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,543 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1ABD0>
2025-07-25 10:09:57,543 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,543 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,543 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:09:57,543 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,543 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,543 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:09:57,543 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,544 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,544 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,544 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,544 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:09:57,544 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,544 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,544 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,545 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,545 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,545 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,545 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,545 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,545 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1ABD0>
2025-07-25 10:09:57,545 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,545 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,545 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1ABD0>
2025-07-25 10:09:57,545 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,545 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,546 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,546 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001F1D7E1AAD0>],
             180: [<numba.core.ir.Assign object at 0x000001F1D7E2F390>]})
2025-07-25 10:09:57,546 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,546 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E24ED0>
2025-07-25 10:09:57,546 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,546 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,546 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,546 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,546 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,547 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,547 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,547 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,547 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,547 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,547 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,547 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,547 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,547 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,547 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,547 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,547 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,547 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,548 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,548 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,548 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,548 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,548 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,548 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,548 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,548 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,548 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,549 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,549 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,549 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,549 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,549 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,549 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E24ED0>
2025-07-25 10:09:57,549 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,549 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,550 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E24ED0>
2025-07-25 10:09:57,550 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,550 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,550 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,550 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,550 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,550 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,550 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E24ED0>
2025-07-25 10:09:57,550 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,550 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,550 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,550 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,550 - DEBUG - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,551 - DEBUG - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,551 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:09:57,551 - DEBUG - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
2025-07-25 10:09:57,551 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:09:57,551 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:09:57,551 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,551 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,551 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,551 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,551 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,551 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,552 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:09:57,552 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:09:57,552 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,552 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,552 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,552 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,552 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,552 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,552 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,552 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,553 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E24ED0>
2025-07-25 10:09:57,553 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,553 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,553 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,553 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,553 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,553 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,553 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E24ED0>
2025-07-25 10:09:57,554 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,554 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,554 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:09:57,554 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,554 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,554 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:09:57,554 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,554 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,554 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,555 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,555 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:09:57,555 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,555 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,555 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,555 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,555 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,555 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,555 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E24ED0>
2025-07-25 10:09:57,555 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:09:57,555 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:09:57,555 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,556 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,556 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,556 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,556 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,556 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:09:57,556 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,556 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,556 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:09:57,556 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,556 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,557 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,557 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,557 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,557 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,557 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,557 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,557 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E24ED0>
2025-07-25 10:09:57,557 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,558 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,558 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,558 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,558 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,558 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,558 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E24ED0>
2025-07-25 10:09:57,558 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,558 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,558 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:09:57,558 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,559 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,559 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:09:57,559 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,559 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,559 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,559 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,559 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:09:57,559 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,560 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,560 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,560 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,560 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,560 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,560 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,560 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,560 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E24ED0>
2025-07-25 10:09:57,561 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,561 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,561 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E24ED0>
2025-07-25 10:09:57,561 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,561 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,561 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,561 - DEBUG - Fix SSA violator on var n
2025-07-25 10:09:57,561 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,562 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7CE4410>
2025-07-25 10:09:57,562 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,562 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,562 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,562 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,562 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,562 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,562 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,562 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,562 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,562 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,563 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,563 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,563 - DEBUG - first assign: n
2025-07-25 10:09:57,563 - DEBUG - replaced with: n = const(int, 0)
2025-07-25 10:09:57,563 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,563 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,563 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,563 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,563 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,563 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,563 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,563 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,563 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,563 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,564 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,564 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,564 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,564 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,564 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,564 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,564 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,564 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,564 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,564 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7CE4410>
2025-07-25 10:09:57,565 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,565 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7CE4410>
2025-07-25 10:09:57,565 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,565 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,565 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,566 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,566 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,566 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,566 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7CE4410>
2025-07-25 10:09:57,566 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,566 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,566 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,566 - DEBUG - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,566 - DEBUG - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,567 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:09:57,567 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:09:57,567 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,567 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,567 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,567 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,567 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,567 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,567 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:09:57,567 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:09:57,567 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,568 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,568 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,568 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,568 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,568 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,568 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,568 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,568 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7CE4410>
2025-07-25 10:09:57,568 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,568 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,569 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,569 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,569 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,569 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,569 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7CE4410>
2025-07-25 10:09:57,569 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,569 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,569 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:09:57,570 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,570 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,570 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:09:57,570 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,570 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,570 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,570 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,570 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:09:57,570 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,570 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,571 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,571 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,571 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,571 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,571 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7CE4410>
2025-07-25 10:09:57,571 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:09:57,571 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:09:57,571 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,571 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,571 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,571 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,571 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,572 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:09:57,572 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,572 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,572 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:09:57,572 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,572 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,572 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,572 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,572 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,572 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,572 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,572 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,573 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7CE4410>
2025-07-25 10:09:57,573 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,573 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,573 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,573 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,573 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,573 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,573 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7CE4410>
2025-07-25 10:09:57,573 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,574 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,574 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:09:57,574 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,574 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,574 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:09:57,574 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,574 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,574 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,575 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,575 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:09:57,575 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,575 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,575 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,575 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,575 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,575 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,575 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,575 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,575 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7CE4410>
2025-07-25 10:09:57,576 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,576 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,576 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7CE4410>
2025-07-25 10:09:57,576 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,576 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,576 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,576 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001F1D7E1B110>],
             180: [<numba.core.ir.Assign object at 0x000001F1D7E24490>]})
2025-07-25 10:09:57,576 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,576 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D30DD0>
2025-07-25 10:09:57,576 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,576 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,576 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,576 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,576 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,577 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,577 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,577 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,577 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,577 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,577 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,577 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,577 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,577 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,577 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,578 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,578 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,578 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,578 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,578 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,578 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,578 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,578 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,579 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,579 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,579 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,579 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,579 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,579 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,579 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,579 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,579 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,579 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D30DD0>
2025-07-25 10:09:57,580 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,580 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,580 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D30DD0>
2025-07-25 10:09:57,580 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,580 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,580 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,580 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,580 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,580 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,580 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D30DD0>
2025-07-25 10:09:57,580 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,580 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,581 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,581 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,581 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:09:57,581 - DEBUG - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
2025-07-25 10:09:57,581 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:09:57,581 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:09:57,581 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,581 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,581 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,581 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,581 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,582 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,582 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:09:57,582 - DEBUG - find_def var='n' stmt=$binop_add310.28 = n + $const308.27.3
2025-07-25 10:09:57,582 - DEBUG - replaced with: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:09:57,582 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:09:57,582 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,582 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,583 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,583 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,583 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,583 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,583 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,583 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,583 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D30DD0>
2025-07-25 10:09:57,583 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,583 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,583 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,583 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,584 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,584 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,584 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D30DD0>
2025-07-25 10:09:57,584 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,584 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,584 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:09:57,584 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,584 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,584 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:09:57,584 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,584 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,585 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,585 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,585 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:09:57,585 - DEBUG - find_def var='n' stmt=$binop_sub468.27 = n - i
2025-07-25 10:09:57,585 - DEBUG - find_def_from_top label 376
2025-07-25 10:09:57,585 - DEBUG - idom 374 from label 376
2025-07-25 10:09:57,585 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:09:57,585 - DEBUG - find_def_from_top label 374
2025-07-25 10:09:57,585 - DEBUG - idom 180 from label 374
2025-07-25 10:09:57,585 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:09:57,585 - DEBUG - replaced with: $binop_sub468.27 = n.1 - i
2025-07-25 10:09:57,586 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,586 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,586 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,586 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,586 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,586 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,586 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D30DD0>
2025-07-25 10:09:57,586 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:09:57,587 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:09:57,587 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,587 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,587 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,587 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,587 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,587 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:09:57,587 - DEBUG - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
2025-07-25 10:09:57,587 - DEBUG - find_def_from_top label 500
2025-07-25 10:09:57,587 - DEBUG - idom 374 from label 500
2025-07-25 10:09:57,587 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:09:57,588 - DEBUG - find_def_from_top label 374
2025-07-25 10:09:57,588 - DEBUG - idom 180 from label 374
2025-07-25 10:09:57,588 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:09:57,588 - DEBUG - replaced with: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:09:57,588 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,588 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,588 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:09:57,588 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,588 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,588 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,588 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,589 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,589 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,589 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,589 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,589 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D30DD0>
2025-07-25 10:09:57,589 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,589 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,589 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,590 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,590 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,590 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,590 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D30DD0>
2025-07-25 10:09:57,590 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,590 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,590 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:09:57,590 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,591 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,591 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:09:57,591 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,591 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,591 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,591 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,591 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:09:57,591 - DEBUG - find_def var='n' stmt=$binop_add740.27 = n + k
2025-07-25 10:09:57,592 - DEBUG - find_def_from_top label 648
2025-07-25 10:09:57,592 - DEBUG - idom 646 from label 648
2025-07-25 10:09:57,592 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:09:57,592 - DEBUG - find_def_from_top label 646
2025-07-25 10:09:57,592 - DEBUG - idom 500 from label 646
2025-07-25 10:09:57,592 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:09:57,592 - DEBUG - find_def_from_top label 500
2025-07-25 10:09:57,592 - DEBUG - idom 374 from label 500
2025-07-25 10:09:57,592 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:09:57,592 - DEBUG - find_def_from_top label 374
2025-07-25 10:09:57,593 - DEBUG - idom 180 from label 374
2025-07-25 10:09:57,593 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:09:57,593 - DEBUG - replaced with: $binop_add740.27 = n.1 + k
2025-07-25 10:09:57,593 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,593 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,593 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,593 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,593 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,593 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,594 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,594 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,594 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D30DD0>
2025-07-25 10:09:57,594 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,594 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,595 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D30DD0>
2025-07-25 10:09:57,595 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,595 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,595 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,595 - DEBUG - Fix SSA violator on var frac
2025-07-25 10:09:57,595 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,595 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E242D0>
2025-07-25 10:09:57,595 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,596 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,596 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,596 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,596 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,596 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,596 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,596 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,596 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,596 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,596 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,596 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,597 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,597 - DEBUG - first assign: frac
2025-07-25 10:09:57,597 - DEBUG - replaced with: frac = const(float, 0.0)
2025-07-25 10:09:57,597 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,597 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,597 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,597 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,597 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,597 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,597 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,597 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,598 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,598 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,598 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,598 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,598 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,598 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,598 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,599 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,599 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,599 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,599 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,599 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E242D0>
2025-07-25 10:09:57,599 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,599 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,600 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E242D0>
2025-07-25 10:09:57,600 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,600 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,600 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,600 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,600 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,600 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,600 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E242D0>
2025-07-25 10:09:57,600 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,600 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,600 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,601 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,601 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:09:57,601 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:09:57,601 - DEBUG - replaced with: frac.1 = scale * $binop_sub234.12
2025-07-25 10:09:57,601 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,601 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,601 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,601 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,601 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,601 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,601 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:09:57,601 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:09:57,601 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,602 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,602 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,602 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,602 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,602 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,602 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,602 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,602 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E242D0>
2025-07-25 10:09:57,602 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,602 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,603 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,603 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,603 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,603 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,603 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E242D0>
2025-07-25 10:09:57,603 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,603 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,603 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:09:57,603 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,604 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,604 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:09:57,604 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,604 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,604 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,604 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,604 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:09:57,604 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,604 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,604 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,605 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,605 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,605 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,605 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E242D0>
2025-07-25 10:09:57,605 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:09:57,605 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:09:57,605 - DEBUG - replaced with: frac.2 = $binop_sub504.3
2025-07-25 10:09:57,605 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,605 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,605 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,605 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,606 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,606 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:09:57,606 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,606 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,606 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:09:57,606 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,606 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,606 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,606 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,606 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,606 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,607 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,607 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,607 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E242D0>
2025-07-25 10:09:57,607 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,607 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,607 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,607 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,607 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,608 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,608 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E242D0>
2025-07-25 10:09:57,608 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,608 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,608 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:09:57,608 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,608 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,608 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:09:57,608 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,608 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,608 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,608 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,608 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:09:57,609 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,609 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,609 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,609 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,609 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,609 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,609 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,609 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,609 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E242D0>
2025-07-25 10:09:57,609 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,609 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,610 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E242D0>
2025-07-25 10:09:57,610 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,610 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,610 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,610 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001F1D7D30DD0>],
             180: [<numba.core.ir.Assign object at 0x000001F1D7E1F6D0>],
             500: [<numba.core.ir.Assign object at 0x000001F1D7E1D150>]})
2025-07-25 10:09:57,610 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,610 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E33690>
2025-07-25 10:09:57,611 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,611 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,611 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,611 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,611 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,611 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,611 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,612 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,612 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,612 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,612 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,612 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,612 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,612 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,612 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,613 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,613 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,613 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,613 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,613 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,613 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,613 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,613 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,613 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,613 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,613 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,613 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,613 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,614 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,614 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,614 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,614 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,614 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E33690>
2025-07-25 10:09:57,614 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,614 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,614 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E33690>
2025-07-25 10:09:57,614 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,614 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,614 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,615 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,615 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,615 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,615 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E33690>
2025-07-25 10:09:57,615 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,615 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,615 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,615 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,615 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:09:57,615 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:09:57,616 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,616 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 10:09:57,616 - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-07-25 10:09:57,616 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,616 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,616 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,616 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,617 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,617 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:09:57,617 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:09:57,617 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,617 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,617 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,617 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,617 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,617 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,617 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,618 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E33690>
2025-07-25 10:09:57,618 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,618 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,618 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,618 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,618 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,618 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,618 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E33690>
2025-07-25 10:09:57,618 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,618 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,618 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:09:57,618 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,618 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,618 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:09:57,619 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,619 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,619 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,619 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,619 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:09:57,619 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,619 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,620 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,620 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,620 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,620 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,620 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E33690>
2025-07-25 10:09:57,620 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:09:57,620 - DEBUG - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
2025-07-25 10:09:57,620 - DEBUG - find_def_from_top label 500
2025-07-25 10:09:57,620 - DEBUG - idom 374 from label 500
2025-07-25 10:09:57,620 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:09:57,620 - DEBUG - find_def_from_top label 374
2025-07-25 10:09:57,621 - DEBUG - idom 180 from label 374
2025-07-25 10:09:57,621 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:09:57,621 - DEBUG - replaced with: $binop_sub504.3 = scale - frac.1
2025-07-25 10:09:57,621 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:09:57,621 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:09:57,621 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 10:09:57,621 - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-07-25 10:09:57,621 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,621 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,621 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,621 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,621 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:09:57,622 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,622 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,622 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:09:57,622 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,622 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,622 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,622 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,622 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,622 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,622 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,622 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E33690>
2025-07-25 10:09:57,623 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,623 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,623 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,623 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,623 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,623 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,623 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E33690>
2025-07-25 10:09:57,623 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,623 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,623 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:09:57,624 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,624 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,624 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:09:57,624 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,624 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,624 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,624 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,624 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:09:57,625 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,625 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,625 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,625 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,625 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,625 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,625 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,625 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,625 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E33690>
2025-07-25 10:09:57,625 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,625 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,626 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7E33690>
2025-07-25 10:09:57,626 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,626 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,626 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,626 - DEBUG - Fix SSA violator on var index_frac
2025-07-25 10:09:57,626 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,626 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1B390>
2025-07-25 10:09:57,626 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,626 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,626 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,626 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,626 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,626 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,626 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,627 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,627 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,627 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,627 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,627 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,627 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,627 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,627 - DEBUG - first assign: index_frac
2025-07-25 10:09:57,627 - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-07-25 10:09:57,627 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,628 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,628 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,628 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,628 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,628 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,628 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,628 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,628 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,628 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,629 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,629 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,629 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,629 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,629 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,629 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,629 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,629 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,629 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1B390>
2025-07-25 10:09:57,630 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,630 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,630 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1B390>
2025-07-25 10:09:57,630 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,630 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,630 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,630 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,630 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,630 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,630 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1B390>
2025-07-25 10:09:57,630 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,630 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,630 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,630 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,631 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:09:57,631 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:09:57,631 - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-07-25 10:09:57,631 - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-07-25 10:09:57,631 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,631 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,631 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,631 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,631 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,632 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:09:57,632 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:09:57,632 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,632 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,632 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,632 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,632 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,632 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,633 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,633 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,633 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1B390>
2025-07-25 10:09:57,633 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,633 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,633 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,633 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,633 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,633 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,633 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1B390>
2025-07-25 10:09:57,633 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,633 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,633 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:09:57,633 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,634 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,634 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:09:57,634 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,634 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,634 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,634 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,634 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:09:57,634 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,634 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,634 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,634 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,635 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,635 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,635 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1B390>
2025-07-25 10:09:57,635 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:09:57,635 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:09:57,635 - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-07-25 10:09:57,635 - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-07-25 10:09:57,635 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,635 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,635 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,635 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,636 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:09:57,636 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,636 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,636 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:09:57,636 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,636 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,636 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,637 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,637 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,637 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,637 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,637 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,637 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1B390>
2025-07-25 10:09:57,637 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,637 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,637 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,637 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,637 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,637 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,637 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1B390>
2025-07-25 10:09:57,638 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,638 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,638 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:09:57,638 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,638 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,638 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:09:57,638 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,638 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,638 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,638 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,638 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:09:57,638 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,638 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,639 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,639 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,639 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,639 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,639 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,639 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,639 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1B390>
2025-07-25 10:09:57,639 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,639 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,639 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1B390>
2025-07-25 10:09:57,639 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,640 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,640 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,640 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001F1D7E33690>],
             180: [<numba.core.ir.Assign object at 0x000001F1D7E1C390>],
             500: [<numba.core.ir.Assign object at 0x000001F1D7E1CA10>]})
2025-07-25 10:09:57,640 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,640 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7AF1CD0>
2025-07-25 10:09:57,640 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,640 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,641 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,641 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,641 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,641 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,641 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,641 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,641 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,641 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,641 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,641 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,642 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,642 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,642 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,642 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,642 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,642 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,642 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,642 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,642 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,642 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,642 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,642 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,643 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,643 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,643 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,643 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,643 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,643 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,643 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,643 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,643 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7AF1CD0>
2025-07-25 10:09:57,643 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,643 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,643 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7AF1CD0>
2025-07-25 10:09:57,643 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,644 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,644 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,644 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,644 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,644 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,644 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7AF1CD0>
2025-07-25 10:09:57,644 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,644 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,645 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,645 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,645 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:09:57,645 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:09:57,645 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:09:57,645 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,645 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,645 - DEBUG - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,645 - DEBUG - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,646 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,646 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 10:09:57,646 - DEBUG - replaced with: eta = index_frac.1 - offset
2025-07-25 10:09:57,646 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,646 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,646 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:09:57,646 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:09:57,646 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,646 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,646 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,647 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,647 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,647 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,647 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,647 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,647 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7AF1CD0>
2025-07-25 10:09:57,647 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,647 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,647 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,647 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,647 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,647 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,648 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7AF1CD0>
2025-07-25 10:09:57,648 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,648 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,648 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:09:57,648 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,648 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,648 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:09:57,648 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,649 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,649 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,649 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,649 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:09:57,649 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,649 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,649 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,649 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,650 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,650 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,650 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7AF1CD0>
2025-07-25 10:09:57,650 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:09:57,650 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:09:57,650 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:09:57,650 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,650 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,650 - DEBUG - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,650 - DEBUG - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,651 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:09:57,651 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 10:09:57,651 - DEBUG - replaced with: eta = index_frac.2 - offset
2025-07-25 10:09:57,651 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,651 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:09:57,651 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,651 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,651 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:09:57,651 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,651 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,651 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,652 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,652 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,652 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,652 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,652 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7AF1CD0>
2025-07-25 10:09:57,652 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,652 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,652 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,652 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,653 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,653 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,653 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7AF1CD0>
2025-07-25 10:09:57,653 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,653 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,653 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:09:57,653 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,653 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,654 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:09:57,654 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,654 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,654 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,654 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,654 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:09:57,654 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,654 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,654 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,655 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,655 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,655 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,655 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,655 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7AF1CD0>
2025-07-25 10:09:57,655 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,655 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,655 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7AF1CD0>
2025-07-25 10:09:57,655 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,656 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,656 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,656 - DEBUG - Fix SSA violator on var offset
2025-07-25 10:09:57,656 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,656 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E24290>
2025-07-25 10:09:57,656 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,656 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,656 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,656 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,656 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,656 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,657 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,657 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,657 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,657 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,657 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,657 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,657 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,658 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,658 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,658 - DEBUG - first assign: offset
2025-07-25 10:09:57,658 - DEBUG - replaced with: offset = const(int, 0)
2025-07-25 10:09:57,658 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,658 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,658 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,658 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,658 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,658 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,658 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,658 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,658 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,658 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,659 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,659 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,659 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,659 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,659 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,659 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,659 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,659 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E24290>
2025-07-25 10:09:57,659 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,659 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,660 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E24290>
2025-07-25 10:09:57,660 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,660 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,660 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,660 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,660 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,660 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,660 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E24290>
2025-07-25 10:09:57,660 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,660 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,660 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,661 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,661 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:09:57,661 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:09:57,661 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:09:57,661 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,661 - DEBUG - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,661 - DEBUG - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,662 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 10:09:57,662 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,662 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,662 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:09:57,662 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:09:57,662 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,662 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,662 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,662 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,662 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,662 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,662 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,663 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,663 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E24290>
2025-07-25 10:09:57,663 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,663 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,663 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,663 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,663 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,663 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,663 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E24290>
2025-07-25 10:09:57,663 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,663 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,663 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:09:57,663 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,663 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,664 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:09:57,664 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,664 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,664 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,664 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,664 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:09:57,664 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,664 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,664 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,664 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,665 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,665 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,665 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E24290>
2025-07-25 10:09:57,665 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:09:57,665 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:09:57,665 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:09:57,665 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,666 - DEBUG - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,666 - DEBUG - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,666 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 10:09:57,666 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,666 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:09:57,666 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,666 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,666 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:09:57,667 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,667 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,667 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,667 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,667 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,667 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,667 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,667 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,667 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E24290>
2025-07-25 10:09:57,667 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,667 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,668 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,668 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,668 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,668 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,668 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E24290>
2025-07-25 10:09:57,668 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,668 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,668 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:09:57,668 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,668 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,668 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:09:57,668 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,668 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,668 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,669 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,669 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:09:57,669 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,669 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,669 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,669 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,669 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,669 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,670 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,670 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,670 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E24290>
2025-07-25 10:09:57,670 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,670 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,670 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E24290>
2025-07-25 10:09:57,670 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,670 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,670 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,670 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001F1D7E24610>],
             180: [<numba.core.ir.Assign object at 0x000001F1D7E1C790>],
             500: [<numba.core.ir.Assign object at 0x000001F1D7E1E5D0>]})
2025-07-25 10:09:57,671 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,671 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D8033610>
2025-07-25 10:09:57,671 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,671 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,671 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,671 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,671 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,671 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,671 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,671 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,671 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,671 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,672 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,672 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,672 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,672 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,672 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,672 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,672 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,672 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,672 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,672 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,672 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,672 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,672 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,672 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,673 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,673 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,673 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,673 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,673 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,673 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,673 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,673 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,673 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D8033610>
2025-07-25 10:09:57,673 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,674 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,674 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D8033610>
2025-07-25 10:09:57,674 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,674 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,674 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,674 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,674 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,675 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,675 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D8033610>
2025-07-25 10:09:57,675 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,675 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,675 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,675 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,675 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:09:57,675 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:09:57,676 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:09:57,676 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,676 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,676 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 10:09:57,676 - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-07-25 10:09:57,676 - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-07-25 10:09:57,676 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,676 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,676 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:09:57,676 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:09:57,676 - DEBUG - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
2025-07-25 10:09:57,676 - DEBUG - replaced with: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:09:57,676 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,677 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,677 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,677 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,677 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,677 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,677 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,677 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,677 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D8033610>
2025-07-25 10:09:57,677 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,677 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,678 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,678 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,678 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,678 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,678 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D8033610>
2025-07-25 10:09:57,678 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,678 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,678 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:09:57,679 - DEBUG - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:09:57,679 - DEBUG - find_def_from_top label 376
2025-07-25 10:09:57,679 - DEBUG - idom 374 from label 376
2025-07-25 10:09:57,679 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:09:57,679 - DEBUG - find_def_from_top label 374
2025-07-25 10:09:57,679 - DEBUG - idom 180 from label 374
2025-07-25 10:09:57,679 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:09:57,679 - DEBUG - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:09:57,679 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,679 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,679 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:09:57,680 - DEBUG - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:09:57,680 - DEBUG - find_def_from_top label 376
2025-07-25 10:09:57,680 - DEBUG - idom 374 from label 376
2025-07-25 10:09:57,680 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:09:57,680 - DEBUG - find_def_from_top label 374
2025-07-25 10:09:57,680 - DEBUG - idom 180 from label 374
2025-07-25 10:09:57,680 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:09:57,680 - DEBUG - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:09:57,680 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,680 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,680 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,680 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,681 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:09:57,681 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,681 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,681 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,681 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,681 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,681 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,681 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D8033610>
2025-07-25 10:09:57,681 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:09:57,681 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:09:57,681 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:09:57,681 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,682 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,682 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 10:09:57,682 - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-07-25 10:09:57,682 - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-07-25 10:09:57,682 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,682 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:09:57,682 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,683 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,683 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:09:57,683 - DEBUG - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
2025-07-25 10:09:57,683 - DEBUG - replaced with: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:09:57,683 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,683 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,683 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,683 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,683 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,683 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,684 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,684 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,684 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D8033610>
2025-07-25 10:09:57,684 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,684 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,684 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,684 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,684 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,684 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,685 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D8033610>
2025-07-25 10:09:57,685 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,685 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,685 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:09:57,685 - DEBUG - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:09:57,685 - DEBUG - find_def_from_top label 648
2025-07-25 10:09:57,685 - DEBUG - idom 646 from label 648
2025-07-25 10:09:57,685 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:09:57,686 - DEBUG - find_def_from_top label 646
2025-07-25 10:09:57,686 - DEBUG - idom 500 from label 646
2025-07-25 10:09:57,686 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:09:57,686 - DEBUG - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:09:57,686 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,686 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,686 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:09:57,687 - DEBUG - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:09:57,687 - DEBUG - find_def_from_top label 648
2025-07-25 10:09:57,687 - DEBUG - idom 646 from label 648
2025-07-25 10:09:57,687 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:09:57,687 - DEBUG - find_def_from_top label 646
2025-07-25 10:09:57,687 - DEBUG - idom 500 from label 646
2025-07-25 10:09:57,687 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:09:57,687 - DEBUG - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:09:57,687 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,687 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,687 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,687 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,687 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:09:57,688 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,688 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,688 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,688 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,688 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,688 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,688 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,688 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,688 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D8033610>
2025-07-25 10:09:57,688 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,688 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,688 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D8033610>
2025-07-25 10:09:57,688 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,688 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,689 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,689 - DEBUG - Fix SSA violator on var eta
2025-07-25 10:09:57,689 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,689 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1F710>
2025-07-25 10:09:57,689 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,689 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,689 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,689 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,689 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,689 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,689 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,689 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,690 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,690 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,690 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,690 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,690 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,690 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,691 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,691 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,691 - DEBUG - first assign: eta
2025-07-25 10:09:57,691 - DEBUG - replaced with: eta = const(float, 0.0)
2025-07-25 10:09:57,691 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,691 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,691 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,691 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,691 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,691 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,691 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,692 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,692 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,692 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,692 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,692 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,692 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,692 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,692 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,692 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,692 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1F710>
2025-07-25 10:09:57,692 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,692 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,693 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1F710>
2025-07-25 10:09:57,693 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,693 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,693 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,693 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,693 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,693 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,693 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1F710>
2025-07-25 10:09:57,693 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,693 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,693 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,693 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,693 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:09:57,693 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:09:57,693 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:09:57,694 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,694 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,694 - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-07-25 10:09:57,694 - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-07-25 10:09:57,694 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,694 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,694 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:09:57,695 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:09:57,695 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,695 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,695 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,695 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,695 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,695 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,695 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,695 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,695 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1F710>
2025-07-25 10:09:57,696 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,696 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,696 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,696 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,696 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,696 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,696 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1F710>
2025-07-25 10:09:57,696 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,696 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,696 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:09:57,696 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,696 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,696 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:09:57,696 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,696 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,697 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,697 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,697 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:09:57,697 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,697 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,697 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,697 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,697 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,697 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,697 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1F710>
2025-07-25 10:09:57,697 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:09:57,697 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:09:57,697 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:09:57,697 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,698 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,698 - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-07-25 10:09:57,698 - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-07-25 10:09:57,698 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,698 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:09:57,698 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,698 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,698 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:09:57,698 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,699 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,699 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,699 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,699 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,699 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,699 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,699 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,699 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1F710>
2025-07-25 10:09:57,700 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,700 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,700 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,700 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,700 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,700 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,700 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1F710>
2025-07-25 10:09:57,700 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,700 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,700 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:09:57,701 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,701 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,701 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:09:57,701 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,701 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,701 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,701 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,701 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:09:57,701 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,701 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,701 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,701 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,701 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,702 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,702 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,702 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,702 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1F710>
2025-07-25 10:09:57,702 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,702 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,702 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1F710>
2025-07-25 10:09:57,702 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,702 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,702 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,703 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001F1D7E1F890>],
             180: [<numba.core.ir.Assign object at 0x000001F1D7E1C710>],
             500: [<numba.core.ir.Assign object at 0x000001F1D7E129D0>]})
2025-07-25 10:09:57,703 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,703 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D10650>
2025-07-25 10:09:57,703 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,703 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,703 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,703 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,703 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,703 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,704 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,704 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,704 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,704 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,704 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,704 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,704 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,704 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,704 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,704 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,704 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,705 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,705 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,705 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,705 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,705 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,705 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,705 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,705 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,705 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,705 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,705 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,705 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,706 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,706 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,706 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,706 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D10650>
2025-07-25 10:09:57,706 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,706 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,706 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D10650>
2025-07-25 10:09:57,706 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,706 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,707 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,707 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,707 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,707 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,707 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D10650>
2025-07-25 10:09:57,707 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,707 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,707 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,708 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,708 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:09:57,708 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:09:57,708 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:09:57,708 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,708 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,708 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:09:57,708 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,708 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,708 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:09:57,708 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:09:57,708 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,709 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,709 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,709 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,709 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,709 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,709 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,709 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,709 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D10650>
2025-07-25 10:09:57,709 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,710 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,710 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,710 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,710 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,710 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,710 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D10650>
2025-07-25 10:09:57,710 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,710 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,710 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:09:57,710 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,710 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,710 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:09:57,711 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,711 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,711 - DEBUG - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:09:57,711 - DEBUG - find_def_from_top label 376
2025-07-25 10:09:57,711 - DEBUG - idom 374 from label 376
2025-07-25 10:09:57,711 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:09:57,711 - DEBUG - find_def_from_top label 374
2025-07-25 10:09:57,712 - DEBUG - idom 180 from label 374
2025-07-25 10:09:57,712 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:09:57,712 - DEBUG - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:09:57,712 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,712 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,712 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:09:57,712 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,712 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,712 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,712 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,712 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,712 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,713 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D10650>
2025-07-25 10:09:57,713 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:09:57,713 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:09:57,713 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:09:57,713 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,713 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,713 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:09:57,713 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,713 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:09:57,713 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,713 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,713 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:09:57,713 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,714 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,714 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,714 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,714 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,714 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,714 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,714 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,714 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D10650>
2025-07-25 10:09:57,714 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,714 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,715 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,715 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,715 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,715 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,715 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D10650>
2025-07-25 10:09:57,715 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,715 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,715 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:09:57,716 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,716 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,716 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:09:57,716 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,716 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,716 - DEBUG - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:09:57,716 - DEBUG - find_def_from_top label 648
2025-07-25 10:09:57,716 - DEBUG - idom 646 from label 648
2025-07-25 10:09:57,716 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:09:57,716 - DEBUG - find_def_from_top label 646
2025-07-25 10:09:57,716 - DEBUG - idom 500 from label 646
2025-07-25 10:09:57,717 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:09:57,717 - DEBUG - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:09:57,717 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,717 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,717 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:09:57,717 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,717 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,717 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,717 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,717 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,717 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,717 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,718 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,718 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D10650>
2025-07-25 10:09:57,718 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,718 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,718 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7D10650>
2025-07-25 10:09:57,718 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,718 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,718 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,718 - DEBUG - Fix SSA violator on var weight
2025-07-25 10:09:57,718 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,718 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1C110>
2025-07-25 10:09:57,718 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,718 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,718 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,718 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,719 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,719 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,719 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,719 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,719 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,719 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,719 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,719 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,720 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,720 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,720 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,720 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,720 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,720 - DEBUG - first assign: weight
2025-07-25 10:09:57,720 - DEBUG - replaced with: weight = const(float, 0.0)
2025-07-25 10:09:57,720 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,720 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,720 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,721 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,721 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,721 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,721 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,721 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,721 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,721 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,721 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,721 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,721 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,721 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,721 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,721 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1C110>
2025-07-25 10:09:57,721 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,722 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,722 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1C110>
2025-07-25 10:09:57,722 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,722 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,722 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,722 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,722 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,722 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,722 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1C110>
2025-07-25 10:09:57,722 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,722 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,722 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,722 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,723 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:09:57,723 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:09:57,723 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:09:57,723 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,723 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,723 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:09:57,723 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,723 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,723 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:09:57,724 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:09:57,724 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,724 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,724 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,724 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,724 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,724 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,725 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,725 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,725 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1C110>
2025-07-25 10:09:57,725 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,725 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,725 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,725 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,725 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,725 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,725 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1C110>
2025-07-25 10:09:57,725 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,725 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,725 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:09:57,726 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,726 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,726 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:09:57,726 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,726 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:09:57,726 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,726 - DEBUG - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,726 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,726 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:09:57,726 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,726 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,726 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,726 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,726 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,726 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,727 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1C110>
2025-07-25 10:09:57,727 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:09:57,727 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:09:57,727 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:09:57,727 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,727 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,727 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:09:57,727 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,727 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:09:57,728 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,728 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,728 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:09:57,728 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,728 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,728 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,728 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,728 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,729 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,729 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,729 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,729 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1C110>
2025-07-25 10:09:57,729 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,729 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,729 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,729 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,729 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,729 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,729 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1C110>
2025-07-25 10:09:57,730 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,730 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,730 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:09:57,730 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,730 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,730 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:09:57,730 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,730 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:09:57,730 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,730 - DEBUG - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,730 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,731 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:09:57,731 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,731 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,731 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,731 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,731 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,731 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,731 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,731 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,731 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1C110>
2025-07-25 10:09:57,731 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,731 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,732 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001F1D7E1C110>
2025-07-25 10:09:57,732 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,732 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,732 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:57,732 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001F1D7D10650>],
             376: [<numba.core.ir.Assign object at 0x000001F1D7E13810>],
             648: [<numba.core.ir.Assign object at 0x000001F1D7E13E90>]})
2025-07-25 10:09:57,732 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:09:57,732 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7BC1890>
2025-07-25 10:09:57,733 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:09:57,733 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:09:57,733 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:09:57,733 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:09:57,733 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:09:57,733 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:09:57,733 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:09:57,733 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:09:57,733 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:09:57,733 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,733 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:09:57,733 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:09:57,734 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:09:57,734 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:09:57,734 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:09:57,734 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:09:57,734 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:09:57,734 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:09:57,734 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:09:57,734 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,734 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:09:57,734 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:09:57,734 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,734 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:09:57,735 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:09:57,735 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:09:57,735 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:09:57,735 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,735 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:09:57,735 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:09:57,735 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,735 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:09:57,735 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7BC1890>
2025-07-25 10:09:57,735 - DEBUG - on stmt: jump 178
2025-07-25 10:09:57,735 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:09:57,736 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7BC1890>
2025-07-25 10:09:57,736 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:09:57,736 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:09:57,736 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:09:57,736 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:09:57,736 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:09:57,736 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:09:57,736 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7BC1890>
2025-07-25 10:09:57,737 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:09:57,737 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,737 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:09:57,737 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,737 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:09:57,737 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:09:57,737 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:09:57,737 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:09:57,737 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,737 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:09:57,737 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:09:57,737 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:09:57,738 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:09:57,738 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:09:57,738 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:09:57,738 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,738 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:09:57,738 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,738 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:09:57,738 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:09:57,738 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,738 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:09:57,738 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7BC1890>
2025-07-25 10:09:57,738 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:09:57,738 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:09:57,739 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:09:57,739 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:09:57,739 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:09:57,739 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:09:57,739 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7BC1890>
2025-07-25 10:09:57,739 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:09:57,739 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:09:57,739 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:09:57,739 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,739 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:09:57,739 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:09:57,740 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,740 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:09:57,740 - DEBUG - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:09:57,740 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,740 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:09:57,740 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:09:57,741 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,741 - DEBUG - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:09:57,741 - DEBUG - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
2025-07-25 10:09:57,741 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,741 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:09:57,741 - DEBUG - on stmt: jump 374
2025-07-25 10:09:57,741 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:09:57,741 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7BC1890>
2025-07-25 10:09:57,741 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:09:57,741 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:09:57,741 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:09:57,742 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:09:57,742 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,742 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:09:57,742 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:09:57,742 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:09:57,742 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:09:57,742 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:09:57,742 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:09:57,742 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:09:57,742 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,742 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:09:57,742 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:09:57,742 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:09:57,743 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:09:57,743 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,743 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:09:57,743 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7BC1890>
2025-07-25 10:09:57,743 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:09:57,743 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:09:57,743 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:09:57,743 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:09:57,743 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:09:57,743 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:09:57,743 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7BC1890>
2025-07-25 10:09:57,743 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:09:57,743 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:09:57,743 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:09:57,743 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:09:57,743 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:09:57,744 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:09:57,744 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:09:57,744 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:09:57,744 - DEBUG - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:09:57,744 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:09:57,744 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:09:57,744 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:09:57,745 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:09:57,745 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:09:57,745 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,745 - DEBUG - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:09:57,745 - DEBUG - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
2025-07-25 10:09:57,745 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:09:57,745 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:09:57,745 - DEBUG - on stmt: jump 646
2025-07-25 10:09:57,745 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:09:57,745 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7BC1890>
2025-07-25 10:09:57,745 - DEBUG - on stmt: jump 176
2025-07-25 10:09:57,746 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:09:57,746 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001F1D7BC1890>
2025-07-25 10:09:57,746 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:09:57,746 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:09:57,746 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:09:58,120 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-07-25 10:09:58,121 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:09:58,121 - DEBUG - stack: []
2025-07-25 10:09:58,121 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:09:58,122 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-07-25 10:09:58,122 - DEBUG - stack []
2025-07-25 10:09:58,122 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-07-25 10:09:58,122 - DEBUG - stack []
2025-07-25 10:09:58,122 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:09:58,122 - DEBUG - stack []
2025-07-25 10:09:58,122 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-07-25 10:09:58,122 - DEBUG - stack ['$x4.0']
2025-07-25 10:09:58,123 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:09:58,123 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-07-25 10:09:58,123 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:09:58,123 - DEBUG - stack ['$8binary_subscr.2']
2025-07-25 10:09:58,123 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-07-25 10:09:58,123 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-07-25 10:09:58,123 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:09:58,123 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-07-25 10:09:58,124 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-07-25 10:09:58,124 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-07-25 10:09:58,124 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-07-25 10:09:58,124 - DEBUG - stack ['$binop_add32.6']
2025-07-25 10:09:58,124 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:09:58,124 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-07-25 10:09:58,124 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-07-25 10:09:58,124 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-07-25 10:09:58,124 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:09:58,124 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-07-25 10:09:58,125 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-07-25 10:09:58,125 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-07-25 10:09:58,125 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-07-25 10:09:58,125 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-07-25 10:09:58,125 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-07-25 10:09:58,125 - DEBUG - stack ['$binop_sub56.12']
2025-07-25 10:09:58,125 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 10:09:58,126 - DEBUG - stack []
2025-07-25 10:09:58,126 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-07-25 10:09:58,126 - DEBUG - stack ['$x62.13']
2025-07-25 10:09:58,126 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 10:09:58,126 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-07-25 10:09:58,127 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 10:09:58,127 - DEBUG - stack ['$66binary_subscr.15']
2025-07-25 10:09:58,127 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-07-25 10:09:58,127 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-07-25 10:09:58,127 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 10:09:58,127 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-07-25 10:09:58,127 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-07-25 10:09:58,128 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-07-25 10:09:58,128 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-07-25 10:09:58,128 - DEBUG - stack ['$binop_sub90.19']
2025-07-25 10:09:58,128 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-07-25 10:09:58,128 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-07-25 10:09:58,128 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-07-25 10:09:58,129 - DEBUG - stack ['$binop_truediv96.21']
2025-07-25 10:09:58,129 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 10:09:58,129 - DEBUG - stack []
2025-07-25 10:09:58,129 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 10:09:58,129 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-07-25 10:09:58,129 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-07-25 10:09:58,129 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-07-25 10:09:58,129 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-07-25 10:09:58,129 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 10:09:58,129 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-07-25 10:09:58,129 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 10:09:58,130 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 10:09:58,130 - DEBUG - stack ['$130call.26']
2025-07-25 10:09:58,130 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 10:09:58,130 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-07-25 10:09:58,130 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-07-25 10:09:58,130 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-07-25 10:09:58,130 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-07-25 10:09:58,130 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 10:09:58,130 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-07-25 10:09:58,131 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 10:09:58,131 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-07-25 10:09:58,131 - DEBUG - stack ['$130call.26', '$168call.31']
2025-07-25 10:09:58,131 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-07-25 10:09:58,131 - DEBUG - stack ['$178compare_op.32']
2025-07-25 10:09:58,131 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-25 10:09:58,131 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-25 10:09:58,131 - DEBUG - stack: []
2025-07-25 10:09:58,131 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-07-25 10:09:58,132 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-07-25 10:09:58,132 - DEBUG - stack []
2025-07-25 10:09:58,132 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-07-25 10:09:58,132 - DEBUG - stack ['$const186.0.4']
2025-07-25 10:09:58,132 - DEBUG - end state. edges=[]
2025-07-25 10:09:58,132 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-07-25 10:09:58,133 - DEBUG - stack: []
2025-07-25 10:09:58,133 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-25 10:09:58,133 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-07-25 10:09:58,133 - DEBUG - stack []
2025-07-25 10:09:58,133 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-07-25 10:09:58,133 - DEBUG - stack ['$b190.0']
2025-07-25 10:09:58,133 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-07-25 10:09:58,133 - DEBUG - stack ['$192unary_negative.1']
2025-07-25 10:09:58,133 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-07-25 10:09:58,133 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-07-25 10:09:58,134 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-07-25 10:09:58,134 - DEBUG - stack ['$binop_truediv196.3']
2025-07-25 10:09:58,134 - DEBUG - end state. edges=[]
2025-07-25 10:09:58,134 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:09:58,134 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-25 10:09:58,134 - DEBUG - defmap: {}
2025-07-25 10:09:58,134 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:09:58,134 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:09:58,134 - DEBUG - keep phismap: {}
2025-07-25 10:09:58,135 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 10:09:58,135 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:09:58,135 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-07-25 10:09:58,135 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:09:58,135 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:09:58,136 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-07-25 10:09:58,191 - DEBUG - BPM-Wert ermittelt: 172
2025-07-25 10:10:25,077 - INFO - Tags gespeichert für: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:10:25,077 - ERROR - Fehler bei der Verarbeitung von data\05. Untergrund (Feat. Eko Fresh).mp3: 'NoneType' object is not subscriptable
2025-07-25 10:10:25,078 - INFO - Verarbeite Datei: data\08. Das Leben ist hart.mp3
2025-07-25 10:10:25,078 - INFO - Beginne Verarbeitung der Datei: data\08. Das Leben ist hart.mp3
2025-07-25 10:10:25,083 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Das Leben ist hart
2025-07-25 10:10:25,083 - INFO - Lade und speichere Lyrics für: Bushido - Das Leben ist hart
2025-07-25 10:10:25,085 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:10:25,287 - DEBUG - https://genius.com:443 "GET /bushido-das-leben-ist-hart-lyrics HTTP/1.1" 301 None
2025-07-25 10:10:25,646 - DEBUG - https://genius.com:443 "GET /Bushido-das-leben-ist-hart-lyrics HTTP/1.1" 200 None
2025-07-25 10:10:25,883 - DEBUG - BPM-Wert ermittelt: 83
2025-07-25 10:10:52,767 - INFO - Tags gespeichert für: data\08. Das Leben ist hart.mp3
2025-07-25 10:10:52,767 - ERROR - Fehler bei der Verarbeitung von data\08. Das Leben ist hart.mp3: 'NoneType' object is not subscriptable
2025-07-25 10:10:52,768 - INFO - Verarbeite Datei: data\09. Hast du was bist du was.mp3
2025-07-25 10:10:52,768 - INFO - Beginne Verarbeitung der Datei: data\09. Hast du was bist du was.mp3
2025-07-25 10:10:52,772 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Hast du was bist du was
2025-07-25 10:10:52,773 - INFO - Lade und speichere Lyrics für: Bushido - Hast du was bist du was
2025-07-25 10:10:52,775 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:10:53,159 - DEBUG - https://genius.com:443 "GET /bushido-hast-du-was-bist-du-was-lyrics HTTP/1.1" 301 None
2025-07-25 10:10:53,325 - DEBUG - https://genius.com:443 "GET /Bushido-hast-du-was-bist-du-was-lyrics HTTP/1.1" 200 None
2025-07-25 10:10:53,564 - DEBUG - BPM-Wert ermittelt: 129
2025-07-25 10:26:31,911 - DEBUG - Starte die Anwendung...
2025-07-25 10:26:31,911 - INFO - Verarbeite MP3-Datei...
2025-07-25 10:26:31,911 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 10:26:31,914 - DEBUG - Using proactor: IocpProactor
2025-07-25 10:26:31,917 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 10:26:32,068 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 10:26:32,081 - DEBUG - Using proactor: IocpProactor
2025-07-25 10:26:32,169 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 10:26:32,245 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=None socket_options=None
2025-07-25 10:26:32,245 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021F6C7BAF50>
2025-07-25 10:26:32,246 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 10:26:32,246 - DEBUG - send_request_headers.complete
2025-07-25 10:26:32,247 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 10:26:32,247 - DEBUG - send_request_body.complete
2025-07-25 10:26:32,247 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 10:26:32,248 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 08:26:32 GMT'), (b'server', b'uvicorn'), (b'content-length', b'4'), (b'content-type', b'application/json')])
2025-07-25 10:26:32,248 - INFO - HTTP Request: GET http://127.0.0.1:7860/gradio_api/startup-events "HTTP/1.1 200 OK"
2025-07-25 10:26:32,248 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 10:26:32,248 - DEBUG - receive_response_body.complete
2025-07-25 10:26:32,249 - DEBUG - response_closed.started
2025-07-25 10:26:32,249 - DEBUG - response_closed.complete
2025-07-25 10:26:32,249 - DEBUG - close.started
2025-07-25 10:26:32,249 - DEBUG - close.complete
2025-07-25 10:26:32,250 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=3 socket_options=None
2025-07-25 10:26:32,262 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021F6CA001D0>
2025-07-25 10:26:32,262 - DEBUG - send_request_headers.started request=<Request [b'HEAD']>
2025-07-25 10:26:32,262 - DEBUG - send_request_headers.complete
2025-07-25 10:26:32,262 - DEBUG - send_request_body.started request=<Request [b'HEAD']>
2025-07-25 10:26:32,263 - DEBUG - send_request_body.complete
2025-07-25 10:26:32,263 - DEBUG - receive_response_headers.started request=<Request [b'HEAD']>
2025-07-25 10:26:32,272 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 08:26:32 GMT'), (b'server', b'uvicorn'), (b'content-length', b'25375'), (b'content-type', b'text/html; charset=utf-8')])
2025-07-25 10:26:32,273 - INFO - HTTP Request: HEAD http://127.0.0.1:7860/ "HTTP/1.1 200 OK"
2025-07-25 10:26:32,273 - DEBUG - receive_response_body.started request=<Request [b'HEAD']>
2025-07-25 10:26:32,273 - DEBUG - receive_response_body.complete
2025-07-25 10:26:32,273 - DEBUG - response_closed.started
2025-07-25 10:26:32,273 - DEBUG - response_closed.complete
2025-07-25 10:26:32,274 - DEBUG - close.started
2025-07-25 10:26:32,274 - DEBUG - close.complete
2025-07-25 10:26:32,276 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 10:26:32,277 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021F6C9369D0>
2025-07-25 10:26:32,277 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021F6C62F530> server_hostname='api.gradio.app' timeout=3
2025-07-25 10:26:32,421 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/launched HTTP/1.1" 200 0
2025-07-25 10:26:32,622 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021F6CC1B210>
2025-07-25 10:26:32,622 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 10:26:32,623 - DEBUG - send_request_headers.complete
2025-07-25 10:26:32,623 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 10:26:32,623 - DEBUG - send_request_body.complete
2025-07-25 10:26:32,623 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 10:26:32,799 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 08:26:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 10:26:32,799 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 10:26:32,800 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 10:26:32,800 - DEBUG - receive_response_body.complete
2025-07-25 10:26:32,800 - DEBUG - response_closed.started
2025-07-25 10:26:32,800 - DEBUG - response_closed.complete
2025-07-25 10:26:32,801 - DEBUG - close.started
2025-07-25 10:26:32,801 - DEBUG - close.complete
2025-07-25 10:26:47,331 - DEBUG - matplotlib data path: Z:\AI\software\miniconda3\envs\ace-data_env\Lib\site-packages\matplotlib\mpl-data
2025-07-25 10:26:47,335 - DEBUG - CONFIGDIR=C:\Users\methm\.matplotlib
2025-07-25 10:26:47,336 - DEBUG - interactive is False
2025-07-25 10:26:47,336 - DEBUG - platform is win32
2025-07-25 10:26:47,372 - DEBUG - CACHEDIR=C:\Users\methm\.matplotlib
2025-07-25 10:26:47,379 - DEBUG - Using fontManager instance from C:\Users\methm\.matplotlib\fontlist-v390.json
2025-07-25 10:26:47,506 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 10:26:47,507 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 10:26:47,507 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 10:26:47,508 - INFO - Verarbeite Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:26:47,508 - INFO - Beginne Verarbeitung der Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:26:47,511 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Untergrund (Feat. Eko Fresh)
2025-07-25 10:26:47,512 - INFO - Lade und speichere Lyrics für: Bushido - Untergrund (Feat. Eko Fresh)
2025-07-25 10:26:47,514 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:26:47,911 - DEBUG - https://genius.com:443 "GET /bushido-untergrund-lyrics HTTP/1.1" 301 None
2025-07-25 10:26:48,299 - DEBUG - https://genius.com:443 "GET /Bushido-untergrund-lyrics HTTP/1.1" 200 None
2025-07-25 10:26:48,399 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
2025-07-25 10:26:48,400 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:26:48,400 - DEBUG - stack: []
2025-07-25 10:26:48,400 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:26:48,401 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-07-25 10:26:48,401 - DEBUG - stack []
2025-07-25 10:26:48,401 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
2025-07-25 10:26:48,401 - DEBUG - stack []
2025-07-25 10:26:48,401 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
2025-07-25 10:26:48,401 - DEBUG - stack []
2025-07-25 10:26:48,401 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
2025-07-25 10:26:48,401 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 10:26:48,401 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
2025-07-25 10:26:48,401 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2025-07-25 10:26:48,402 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
2025-07-25 10:26:48,402 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
2025-07-25 10:26:48,402 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
2025-07-25 10:26:48,402 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
2025-07-25 10:26:48,402 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
2025-07-25 10:26:48,402 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
2025-07-25 10:26:48,402 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
2025-07-25 10:26:48,402 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
2025-07-25 10:26:48,402 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
2025-07-25 10:26:48,403 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
2025-07-25 10:26:48,403 - DEBUG - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
2025-07-25 10:26:48,403 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 10:26:48,403 - DEBUG - dispatch pc=34, inst=CALL(arg=7, lineno=86)
2025-07-25 10:26:48,403 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 10:26:48,403 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
2025-07-25 10:26:48,403 - DEBUG - stack ['$34call.9']
2025-07-25 10:26:48,404 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
2025-07-25 10:26:48,404 - DEBUG - stack []
2025-07-25 10:26:48,404 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
2025-07-25 10:26:48,404 - DEBUG - stack ['$const46.10.0']
2025-07-25 10:26:48,404 - DEBUG - end state. edges=[]
2025-07-25 10:26:48,404 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:26:48,404 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-25 10:26:48,404 - DEBUG - defmap: {}
2025-07-25 10:26:48,404 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:26:48,404 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:26:48,404 - DEBUG - keep phismap: {}
2025-07-25 10:26:48,404 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 10:26:48,404 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:26:48,405 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10.0'}), (48, {'retval': '$const46.10.0', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:26:48,405 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000021F6E9E67A0>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10.0 = const(NoneType, None)    ['$const46.10.0']
    $48return_value.11 = cast(value=$const46.10.0) ['$48return_value.11', '$const46.10.0']
    return $48return_value.11                ['$48return_value.11']

2025-07-25 10:26:48,408 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 10:26:48,408 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021F6E9F4450>
2025-07-25 10:26:48,408 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,409 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,409 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,409 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,409 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,409 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,409 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,409 - DEBUG - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000021F6E9E67A0>))
2025-07-25 10:26:48,409 - DEBUG - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,410 - DEBUG - on stmt: $const46.10.0 = const(NoneType, None)
2025-07-25 10:26:48,410 - DEBUG - on stmt: $48return_value.11 = cast(value=$const46.10.0)
2025-07-25 10:26:48,410 - DEBUG - on stmt: return $48return_value.11
2025-07-25 10:26:48,410 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x0000021F6ECA3810>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x0000021F6ECA8A10>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000021F6ECA36D0>,
                                  0)],
             '$const46.10.0': [(<numba.core.ir.Assign object at 0x0000021F6ECA87D0>,
                                0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000021F6ECA3110>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000021F6ECA3010>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000021F6ECA3210>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x0000021F6ECA3350>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x0000021F6ECA2F10>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x0000021F6ECA2350>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000021F6ECA3450>, 0)]})
2025-07-25 10:26:48,411 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x0000021F6E9F4450>
2025-07-25 10:26:48,414 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
2025-07-25 10:26:48,418 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:26:48,418 - DEBUG - stack: []
2025-07-25 10:26:48,418 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:26:48,418 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-07-25 10:26:48,419 - DEBUG - stack []
2025-07-25 10:26:48,419 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
2025-07-25 10:26:48,419 - DEBUG - stack []
2025-07-25 10:26:48,419 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
2025-07-25 10:26:48,419 - DEBUG - stack []
2025-07-25 10:26:48,419 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
2025-07-25 10:26:48,420 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 10:26:48,420 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
2025-07-25 10:26:48,420 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
2025-07-25 10:26:48,420 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
2025-07-25 10:26:48,420 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
2025-07-25 10:26:48,421 - DEBUG - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
2025-07-25 10:26:48,421 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 10:26:48,421 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=9)
2025-07-25 10:26:48,421 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 10:26:48,421 - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
2025-07-25 10:26:48,421 - DEBUG - stack ['$28call.5']
2025-07-25 10:26:48,421 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
2025-07-25 10:26:48,421 - DEBUG - stack []
2025-07-25 10:26:48,421 - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
2025-07-25 10:26:48,421 - DEBUG - stack ['$const40.6.1']
2025-07-25 10:26:48,421 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
2025-07-25 10:26:48,421 - DEBUG - stack []
2025-07-25 10:26:48,422 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
2025-07-25 10:26:48,422 - DEBUG - stack ['$const44.7.2']
2025-07-25 10:26:48,422 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
2025-07-25 10:26:48,422 - DEBUG - stack []
2025-07-25 10:26:48,422 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
2025-07-25 10:26:48,422 - DEBUG - stack ['$const48.8.1']
2025-07-25 10:26:48,422 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
2025-07-25 10:26:48,422 - DEBUG - stack []
2025-07-25 10:26:48,422 - DEBUG - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
2025-07-25 10:26:48,422 - DEBUG - stack ['$const52.9.1']
2025-07-25 10:26:48,422 - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
2025-07-25 10:26:48,422 - DEBUG - stack []
2025-07-25 10:26:48,422 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
2025-07-25 10:26:48,422 - DEBUG - stack ['$const56.10.2']
2025-07-25 10:26:48,423 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
2025-07-25 10:26:48,423 - DEBUG - stack []
2025-07-25 10:26:48,423 - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
2025-07-25 10:26:48,423 - DEBUG - stack ['$const60.11.1']
2025-07-25 10:26:48,423 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
2025-07-25 10:26:48,423 - DEBUG - stack []
2025-07-25 10:26:48,423 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
2025-07-25 10:26:48,423 - DEBUG - stack ['$const64.12.1']
2025-07-25 10:26:48,423 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
2025-07-25 10:26:48,423 - DEBUG - stack []
2025-07-25 10:26:48,423 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
2025-07-25 10:26:48,423 - DEBUG - stack ['$interp_win68.13']
2025-07-25 10:26:48,423 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
2025-07-25 10:26:48,423 - DEBUG - stack ['$70load_attr.14']
2025-07-25 10:26:48,424 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-07-25 10:26:48,424 - DEBUG - stack ['$70load_attr.14', '$const80.15.2']
2025-07-25 10:26:48,424 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
2025-07-25 10:26:48,424 - DEBUG - stack ['$82binary_subscr.16']
2025-07-25 10:26:48,424 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
2025-07-25 10:26:48,424 - DEBUG - stack []
2025-07-25 10:26:48,424 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
2025-07-25 10:26:48,424 - DEBUG - stack ['$x94.17']
2025-07-25 10:26:48,424 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
2025-07-25 10:26:48,424 - DEBUG - stack ['$96load_attr.18']
2025-07-25 10:26:48,425 - DEBUG - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-07-25 10:26:48,425 - DEBUG - stack ['$96load_attr.18', '$const106.19.2']
2025-07-25 10:26:48,425 - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
2025-07-25 10:26:48,425 - DEBUG - stack ['$108binary_subscr.20']
2025-07-25 10:26:48,425 - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
2025-07-25 10:26:48,425 - DEBUG - stack []
2025-07-25 10:26:48,425 - DEBUG - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
2025-07-25 10:26:48,425 - DEBUG - stack ['$t_out120.21']
2025-07-25 10:26:48,425 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
2025-07-25 10:26:48,425 - DEBUG - stack ['$122load_attr.22']
2025-07-25 10:26:48,425 - DEBUG - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-07-25 10:26:48,425 - DEBUG - stack ['$122load_attr.22', '$const132.23.2']
2025-07-25 10:26:48,426 - DEBUG - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
2025-07-25 10:26:48,426 - DEBUG - stack ['$134binary_subscr.24']
2025-07-25 10:26:48,426 - DEBUG - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
2025-07-25 10:26:48,426 - DEBUG - stack []
2025-07-25 10:26:48,426 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
2025-07-25 10:26:48,426 - DEBUG - stack ['$null$146.26', '$146load_global.25']
2025-07-25 10:26:48,426 - DEBUG - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
2025-07-25 10:26:48,426 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 10:26:48,426 - DEBUG - dispatch pc=164, inst=CALL(arg=1, lineno=23)
2025-07-25 10:26:48,426 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 10:26:48,426 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
2025-07-25 10:26:48,426 - DEBUG - stack ['$164call.28']
2025-07-25 10:26:48,426 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
2025-07-25 10:26:48,426 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2025-07-25 10:26:48,427 - DEBUG - stack: ['$phi176.0']
2025-07-25 10:26:48,427 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2025-07-25 10:26:48,427 - DEBUG - dispatch pc=176, inst=NOP(arg=1, lineno=23)
2025-07-25 10:26:48,427 - DEBUG - stack ['$phi176.0']
2025-07-25 10:26:48,427 - DEBUG - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
2025-07-25 10:26:48,427 - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=1)])
2025-07-25 10:26:48,427 - DEBUG - stack: ['$phi178.0']
2025-07-25 10:26:48,427 - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=1)
2025-07-25 10:26:48,427 - DEBUG - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
2025-07-25 10:26:48,427 - DEBUG - stack ['$phi178.0']
2025-07-25 10:26:48,427 - DEBUG - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
2025-07-25 10:26:48,427 - DEBUG - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
2025-07-25 10:26:48,427 - DEBUG - stack: []
2025-07-25 10:26:48,428 - DEBUG - state.pc_initial: State(pc_initial=782 nstack_initial=0)
2025-07-25 10:26:48,428 - DEBUG - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
2025-07-25 10:26:48,428 - DEBUG - stack []
2025-07-25 10:26:48,428 - DEBUG - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
2025-07-25 10:26:48,428 - DEBUG - stack ['$const782.0.0']
2025-07-25 10:26:48,428 - DEBUG - end state. edges=[]
2025-07-25 10:26:48,428 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2025-07-25 10:26:48,428 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2025-07-25 10:26:48,428 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2025-07-25 10:26:48,428 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
2025-07-25 10:26:48,429 - DEBUG - stack ['$phi180.0', '$phi180.1']
2025-07-25 10:26:48,429 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
2025-07-25 10:26:48,429 - DEBUG - stack ['$phi180.0']
2025-07-25 10:26:48,429 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
2025-07-25 10:26:48,429 - DEBUG - stack ['$phi180.0', '$t_out182.2']
2025-07-25 10:26:48,429 - DEBUG - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-07-25 10:26:48,429 - DEBUG - stack ['$phi180.0', '$t_out182.2', '$t184.3']
2025-07-25 10:26:48,429 - DEBUG - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
2025-07-25 10:26:48,429 - DEBUG - stack ['$phi180.0', '$186binary_subscr.4']
2025-07-25 10:26:48,429 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
2025-07-25 10:26:48,429 - DEBUG - stack ['$phi180.0']
2025-07-25 10:26:48,429 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
2025-07-25 10:26:48,429 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
2025-07-25 10:26:48,430 - DEBUG - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
2025-07-25 10:26:48,430 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 10:26:48,430 - DEBUG - dispatch pc=216, inst=CALL(arg=1, lineno=27)
2025-07-25 10:26:48,430 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 10:26:48,430 - DEBUG - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
2025-07-25 10:26:48,430 - DEBUG - stack ['$phi180.0', '$216call.8']
2025-07-25 10:26:48,430 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
2025-07-25 10:26:48,430 - DEBUG - stack ['$phi180.0']
2025-07-25 10:26:48,430 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
2025-07-25 10:26:48,430 - DEBUG - stack ['$phi180.0', '$scale228.9']
2025-07-25 10:26:48,430 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
2025-07-25 10:26:48,431 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
2025-07-25 10:26:48,431 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
2025-07-25 10:26:48,431 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
2025-07-25 10:26:48,431 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
2025-07-25 10:26:48,431 - DEBUG - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
2025-07-25 10:26:48,431 - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
2025-07-25 10:26:48,431 - DEBUG - stack ['$phi180.0', '$binop_mul238.13']
2025-07-25 10:26:48,431 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
2025-07-25 10:26:48,431 - DEBUG - stack ['$phi180.0']
2025-07-25 10:26:48,431 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
2025-07-25 10:26:48,431 - DEBUG - stack ['$phi180.0', '$frac244.14']
2025-07-25 10:26:48,431 - DEBUG - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
2025-07-25 10:26:48,431 - DEBUG - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
2025-07-25 10:26:48,432 - DEBUG - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
2025-07-25 10:26:48,432 - DEBUG - stack ['$phi180.0', '$binop_mul248.16']
2025-07-25 10:26:48,432 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
2025-07-25 10:26:48,432 - DEBUG - stack ['$phi180.0']
2025-07-25 10:26:48,432 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
2025-07-25 10:26:48,432 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
2025-07-25 10:26:48,432 - DEBUG - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
2025-07-25 10:26:48,432 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 10:26:48,432 - DEBUG - dispatch pc=272, inst=CALL(arg=1, lineno=34)
2025-07-25 10:26:48,432 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 10:26:48,433 - DEBUG - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
2025-07-25 10:26:48,433 - DEBUG - stack ['$phi180.0', '$272call.20']
2025-07-25 10:26:48,433 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
2025-07-25 10:26:48,433 - DEBUG - stack ['$phi180.0']
2025-07-25 10:26:48,433 - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
2025-07-25 10:26:48,433 - DEBUG - stack ['$phi180.0', '$index_frac284.21']
2025-07-25 10:26:48,433 - DEBUG - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
2025-07-25 10:26:48,433 - DEBUG - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
2025-07-25 10:26:48,433 - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
2025-07-25 10:26:48,433 - DEBUG - stack ['$phi180.0', '$binop_sub288.23']
2025-07-25 10:26:48,433 - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
2025-07-25 10:26:48,433 - DEBUG - stack ['$phi180.0']
2025-07-25 10:26:48,433 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
2025-07-25 10:26:48,434 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
2025-07-25 10:26:48,434 - DEBUG - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
2025-07-25 10:26:48,434 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
2025-07-25 10:26:48,434 - DEBUG - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
2025-07-25 10:26:48,434 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27.3']
2025-07-25 10:26:48,434 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
2025-07-25 10:26:48,434 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
2025-07-25 10:26:48,434 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
2025-07-25 10:26:48,434 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
2025-07-25 10:26:48,434 - DEBUG - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
2025-07-25 10:26:48,434 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
2025-07-25 10:26:48,434 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
2025-07-25 10:26:48,434 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
2025-07-25 10:26:48,435 - DEBUG - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
2025-07-25 10:26:48,435 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
2025-07-25 10:26:48,435 - DEBUG - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
2025-07-25 10:26:48,435 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 10:26:48,435 - DEBUG - dispatch pc=332, inst=CALL(arg=2, lineno=40)
2025-07-25 10:26:48,435 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 10:26:48,435 - DEBUG - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
2025-07-25 10:26:48,435 - DEBUG - stack ['$phi180.0', '$332call.34']
2025-07-25 10:26:48,435 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
2025-07-25 10:26:48,435 - DEBUG - stack ['$phi180.0']
2025-07-25 10:26:48,435 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
2025-07-25 10:26:48,435 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
2025-07-25 10:26:48,436 - DEBUG - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
2025-07-25 10:26:48,436 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 10:26:48,436 - DEBUG - dispatch pc=362, inst=CALL(arg=1, lineno=41)
2025-07-25 10:26:48,436 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 10:26:48,436 - DEBUG - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
2025-07-25 10:26:48,436 - DEBUG - stack ['$phi180.0', '$362call.38']
2025-07-25 10:26:48,436 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
2025-07-25 10:26:48,436 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2)])
2025-07-25 10:26:48,436 - DEBUG - stack: ['$phi374.0', '$phi374.1']
2025-07-25 10:26:48,437 - DEBUG - state.pc_initial: State(pc_initial=374 nstack_initial=2)
2025-07-25 10:26:48,437 - DEBUG - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
2025-07-25 10:26:48,437 - DEBUG - stack ['$phi374.0', '$phi374.1']
2025-07-25 10:26:48,437 - DEBUG - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
2025-07-25 10:26:48,437 - DEBUG - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
2025-07-25 10:26:48,437 - DEBUG - stack: ['$phi500.0']
2025-07-25 10:26:48,437 - DEBUG - state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-07-25 10:26:48,437 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
2025-07-25 10:26:48,437 - DEBUG - stack ['$phi500.0']
2025-07-25 10:26:48,437 - DEBUG - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
2025-07-25 10:26:48,437 - DEBUG - stack ['$phi500.0', '$scale500.1']
2025-07-25 10:26:48,437 - DEBUG - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
2025-07-25 10:26:48,438 - DEBUG - stack ['$phi500.0', '$scale500.1', '$frac502.2']
2025-07-25 10:26:48,438 - DEBUG - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
2025-07-25 10:26:48,438 - DEBUG - stack ['$phi500.0', '$binop_sub504.3']
2025-07-25 10:26:48,438 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
2025-07-25 10:26:48,438 - DEBUG - stack ['$phi500.0']
2025-07-25 10:26:48,438 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
2025-07-25 10:26:48,438 - DEBUG - stack ['$phi500.0', '$frac510.4']
2025-07-25 10:26:48,438 - DEBUG - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
2025-07-25 10:26:48,438 - DEBUG - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
2025-07-25 10:26:48,438 - DEBUG - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
2025-07-25 10:26:48,438 - DEBUG - stack ['$phi500.0', '$binop_mul514.6']
2025-07-25 10:26:48,438 - DEBUG - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
2025-07-25 10:26:48,439 - DEBUG - stack ['$phi500.0']
2025-07-25 10:26:48,439 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
2025-07-25 10:26:48,439 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
2025-07-25 10:26:48,439 - DEBUG - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
2025-07-25 10:26:48,439 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 10:26:48,439 - DEBUG - dispatch pc=538, inst=CALL(arg=1, lineno=54)
2025-07-25 10:26:48,439 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 10:26:48,439 - DEBUG - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
2025-07-25 10:26:48,439 - DEBUG - stack ['$phi500.0', '$538call.10']
2025-07-25 10:26:48,439 - DEBUG - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
2025-07-25 10:26:48,439 - DEBUG - stack ['$phi500.0']
2025-07-25 10:26:48,439 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
2025-07-25 10:26:48,439 - DEBUG - stack ['$phi500.0', '$index_frac550.11']
2025-07-25 10:26:48,440 - DEBUG - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
2025-07-25 10:26:48,440 - DEBUG - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
2025-07-25 10:26:48,440 - DEBUG - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
2025-07-25 10:26:48,440 - DEBUG - stack ['$phi500.0', '$binop_sub554.13']
2025-07-25 10:26:48,440 - DEBUG - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
2025-07-25 10:26:48,440 - DEBUG - stack ['$phi500.0']
2025-07-25 10:26:48,440 - DEBUG - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
2025-07-25 10:26:48,440 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
2025-07-25 10:26:48,440 - DEBUG - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
2025-07-25 10:26:48,441 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
2025-07-25 10:26:48,441 - DEBUG - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:26:48,441 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
2025-07-25 10:26:48,441 - DEBUG - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
2025-07-25 10:26:48,441 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
2025-07-25 10:26:48,441 - DEBUG - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:26:48,441 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19.3']
2025-07-25 10:26:48,441 - DEBUG - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
2025-07-25 10:26:48,441 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
2025-07-25 10:26:48,441 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
2025-07-25 10:26:48,441 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
2025-07-25 10:26:48,441 - DEBUG - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:26:48,441 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
2025-07-25 10:26:48,442 - DEBUG - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
2025-07-25 10:26:48,442 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
2025-07-25 10:26:48,442 - DEBUG - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
2025-07-25 10:26:48,442 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
2025-07-25 10:26:48,442 - DEBUG - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
2025-07-25 10:26:48,442 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 10:26:48,442 - DEBUG - dispatch pc=604, inst=CALL(arg=2, lineno=60)
2025-07-25 10:26:48,442 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 10:26:48,442 - DEBUG - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
2025-07-25 10:26:48,442 - DEBUG - stack ['$phi500.0', '$604call.26']
2025-07-25 10:26:48,443 - DEBUG - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
2025-07-25 10:26:48,443 - DEBUG - stack ['$phi500.0']
2025-07-25 10:26:48,443 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
2025-07-25 10:26:48,443 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
2025-07-25 10:26:48,443 - DEBUG - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
2025-07-25 10:26:48,443 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 10:26:48,443 - DEBUG - dispatch pc=634, inst=CALL(arg=1, lineno=61)
2025-07-25 10:26:48,443 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 10:26:48,443 - DEBUG - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
2025-07-25 10:26:48,443 - DEBUG - stack ['$phi500.0', '$634call.30']
2025-07-25 10:26:48,443 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
2025-07-25 10:26:48,443 - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:26:48,444 - DEBUG - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 10:26:48,444 - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=3)
2025-07-25 10:26:48,444 - DEBUG - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
2025-07-25 10:26:48,444 - DEBUG - stack ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 10:26:48,444 - DEBUG - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
2025-07-25 10:26:48,444 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:26:48,444 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
2025-07-25 10:26:48,444 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
2025-07-25 10:26:48,444 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
2025-07-25 10:26:48,444 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
2025-07-25 10:26:48,444 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
2025-07-25 10:26:48,445 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
2025-07-25 10:26:48,445 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
2025-07-25 10:26:48,445 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
2025-07-25 10:26:48,445 - DEBUG - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 10:26:48,445 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
2025-07-25 10:26:48,445 - DEBUG - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-07-25 10:26:48,445 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
2025-07-25 10:26:48,445 - DEBUG - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
2025-07-25 10:26:48,445 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
2025-07-25 10:26:48,445 - DEBUG - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
2025-07-25 10:26:48,446 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
2025-07-25 10:26:48,446 - DEBUG - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
2025-07-25 10:26:48,446 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
2025-07-25 10:26:48,446 - DEBUG - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
2025-07-25 10:26:48,446 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
2025-07-25 10:26:48,446 - DEBUG - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
2025-07-25 10:26:48,446 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
2025-07-25 10:26:48,446 - DEBUG - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 10:26:48,446 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
2025-07-25 10:26:48,446 - DEBUG - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
2025-07-25 10:26:48,446 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
2025-07-25 10:26:48,446 - DEBUG - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-07-25 10:26:48,447 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
2025-07-25 10:26:48,447 - DEBUG - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 10:26:48,447 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
2025-07-25 10:26:48,447 - DEBUG - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 10:26:48,447 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
2025-07-25 10:26:48,447 - DEBUG - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
2025-07-25 10:26:48,447 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
2025-07-25 10:26:48,447 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
2025-07-25 10:26:48,447 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:26:48,447 - DEBUG - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
2025-07-25 10:26:48,447 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20']
2025-07-25 10:26:48,447 - DEBUG - dispatch pc=446, inst=COPY(arg=2, lineno=47)
2025-07-25 10:26:48,447 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
2025-07-25 10:26:48,447 - DEBUG - dispatch pc=448, inst=COPY(arg=2, lineno=47)
2025-07-25 10:26:48,448 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
2025-07-25 10:26:48,448 - DEBUG - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 10:26:48,448 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
2025-07-25 10:26:48,448 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
2025-07-25 10:26:48,448 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
2025-07-25 10:26:48,448 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
2025-07-25 10:26:48,448 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
2025-07-25 10:26:48,448 - DEBUG - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
2025-07-25 10:26:48,448 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
2025-07-25 10:26:48,448 - DEBUG - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
2025-07-25 10:26:48,448 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
2025-07-25 10:26:48,448 - DEBUG - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
2025-07-25 10:26:48,449 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
2025-07-25 10:26:48,449 - DEBUG - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 10:26:48,449 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
2025-07-25 10:26:48,449 - DEBUG - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
2025-07-25 10:26:48,449 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
2025-07-25 10:26:48,449 - DEBUG - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
2025-07-25 10:26:48,449 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
2025-07-25 10:26:48,449 - DEBUG - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
2025-07-25 10:26:48,450 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
2025-07-25 10:26:48,450 - DEBUG - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
2025-07-25 10:26:48,450 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
2025-07-25 10:26:48,450 - DEBUG - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-07-25 10:26:48,450 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
2025-07-25 10:26:48,450 - DEBUG - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
2025-07-25 10:26:48,450 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:26:48,450 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
2025-07-25 10:26:48,450 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
2025-07-25 10:26:48,450 - DEBUG - stack: ['$phi646.0', '$phi646.1']
2025-07-25 10:26:48,450 - DEBUG - state.pc_initial: State(pc_initial=646 nstack_initial=2)
2025-07-25 10:26:48,451 - DEBUG - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
2025-07-25 10:26:48,451 - DEBUG - stack ['$phi646.0', '$phi646.1']
2025-07-25 10:26:48,451 - DEBUG - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
2025-07-25 10:26:48,451 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 10:26:48,451 - DEBUG - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 10:26:48,451 - DEBUG - stack: ['$phi778.0']
2025-07-25 10:26:48,451 - DEBUG - state.pc_initial: State(pc_initial=778 nstack_initial=1)
2025-07-25 10:26:48,451 - DEBUG - dispatch pc=778, inst=NOP(arg=1, lineno=61)
2025-07-25 10:26:48,451 - DEBUG - stack ['$phi778.0']
2025-07-25 10:26:48,451 - DEBUG - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
2025-07-25 10:26:48,451 - DEBUG - stack ['$phi778.0']
2025-07-25 10:26:48,451 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
2025-07-25 10:26:48,451 - DEBUG - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
2025-07-25 10:26:48,452 - DEBUG - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 10:26:48,452 - DEBUG - state.pc_initial: State(pc_initial=648 nstack_initial=3)
2025-07-25 10:26:48,452 - DEBUG - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
2025-07-25 10:26:48,452 - DEBUG - stack ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 10:26:48,452 - DEBUG - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
2025-07-25 10:26:48,452 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:26:48,452 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
2025-07-25 10:26:48,452 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
2025-07-25 10:26:48,452 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
2025-07-25 10:26:48,452 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
2025-07-25 10:26:48,452 - DEBUG - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
2025-07-25 10:26:48,452 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
2025-07-25 10:26:48,452 - DEBUG - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
2025-07-25 10:26:48,453 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
2025-07-25 10:26:48,453 - DEBUG - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 10:26:48,453 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
2025-07-25 10:26:48,453 - DEBUG - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-07-25 10:26:48,453 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
2025-07-25 10:26:48,453 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
2025-07-25 10:26:48,453 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
2025-07-25 10:26:48,453 - DEBUG - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
2025-07-25 10:26:48,454 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
2025-07-25 10:26:48,454 - DEBUG - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
2025-07-25 10:26:48,454 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
2025-07-25 10:26:48,454 - DEBUG - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
2025-07-25 10:26:48,454 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
2025-07-25 10:26:48,454 - DEBUG - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
2025-07-25 10:26:48,454 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
2025-07-25 10:26:48,454 - DEBUG - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 10:26:48,454 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
2025-07-25 10:26:48,454 - DEBUG - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
2025-07-25 10:26:48,454 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
2025-07-25 10:26:48,454 - DEBUG - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-07-25 10:26:48,455 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
2025-07-25 10:26:48,455 - DEBUG - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 10:26:48,455 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
2025-07-25 10:26:48,455 - DEBUG - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 10:26:48,455 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
2025-07-25 10:26:48,455 - DEBUG - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
2025-07-25 10:26:48,455 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
2025-07-25 10:26:48,455 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
2025-07-25 10:26:48,455 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:26:48,455 - DEBUG - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
2025-07-25 10:26:48,455 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20']
2025-07-25 10:26:48,456 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=66)
2025-07-25 10:26:48,456 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
2025-07-25 10:26:48,456 - DEBUG - dispatch pc=720, inst=COPY(arg=2, lineno=66)
2025-07-25 10:26:48,456 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
2025-07-25 10:26:48,456 - DEBUG - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 10:26:48,456 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
2025-07-25 10:26:48,456 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
2025-07-25 10:26:48,456 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
2025-07-25 10:26:48,456 - DEBUG - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
2025-07-25 10:26:48,456 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
2025-07-25 10:26:48,456 - DEBUG - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
2025-07-25 10:26:48,456 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
2025-07-25 10:26:48,456 - DEBUG - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
2025-07-25 10:26:48,457 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
2025-07-25 10:26:48,457 - DEBUG - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 10:26:48,457 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
2025-07-25 10:26:48,457 - DEBUG - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
2025-07-25 10:26:48,457 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
2025-07-25 10:26:48,457 - DEBUG - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 10:26:48,457 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28.3']
2025-07-25 10:26:48,457 - DEBUG - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 10:26:48,458 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
2025-07-25 10:26:48,458 - DEBUG - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
2025-07-25 10:26:48,458 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
2025-07-25 10:26:48,458 - DEBUG - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
2025-07-25 10:26:48,458 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
2025-07-25 10:26:48,458 - DEBUG - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
2025-07-25 10:26:48,458 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
2025-07-25 10:26:48,458 - DEBUG - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
2025-07-25 10:26:48,458 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
2025-07-25 10:26:48,458 - DEBUG - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-07-25 10:26:48,458 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
2025-07-25 10:26:48,458 - DEBUG - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
2025-07-25 10:26:48,458 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:26:48,459 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
2025-07-25 10:26:48,459 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:26:48,459 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:26:48,459 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:26:48,459 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
2025-07-25 10:26:48,459 - DEBUG - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
2025-07-25 10:26:48,460 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
2025-07-25 10:26:48,461 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:26:48,462 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:26:48,463 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:26:48,464 - DEBUG - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
2025-07-25 10:26:48,465 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
2025-07-25 10:26:48,465 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:26:48,465 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6.1'}), (42, {'value': '$const40.6.1'}), (44, {'res': '$const44.7.2'}), (46, {'value': '$const44.7.2'}), (48, {'res': '$const48.8.1'}), (50, {'value': '$const48.8.1'}), (52, {'res': '$const52.9.1'}), (54, {'value': '$const52.9.1'}), (56, {'res': '$const56.10.2'}), (58, {'value': '$const56.10.2'}), (60, {'res': '$const60.11.1'}), (62, {'value': '$const60.11.1'}), (64, {'res': '$const64.12.1'}), (66, {'value': '$const64.12.1'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15.2'}), (82, {'index': '$const80.15.2', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19.2'}), (108, {'index': '$const106.19.2', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23.2'}), (134, {'index': '$const132.23.2', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
2025-07-25 10:26:48,466 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
2025-07-25 10:26:48,466 - DEBUG - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
2025-07-25 10:26:48,466 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27.3'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27.3', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
2025-07-25 10:26:48,467 - DEBUG - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
2025-07-25 10:26:48,467 - DEBUG - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
2025-07-25 10:26:48,467 - DEBUG - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19.3'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19.3', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
2025-07-25 10:26:48,468 - DEBUG - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
2025-07-25 10:26:48,468 - DEBUG - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28.3'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28.3', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
2025-07-25 10:26:48,469 - DEBUG - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
2025-07-25 10:26:48,469 - DEBUG - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0.0'}), (784, {'retval': '$const782.0.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:26:48,471 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15.2 = const(int, 0)            ['$const80.15.2']
    nwin = getitem(value=$70load_attr.14, index=$const80.15.2, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15.2', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19.2 = const(int, 0)           ['$const106.19.2']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19.2, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19.2', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23.2 = const(int, 0)           ['$const132.23.2']
    n_out = getitem(value=$122load_attr.22, index=$const132.23.2, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23.2', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27.3 = const(int, 1)           ['$const308.27.3']
    $binop_add310.28 = n + $const308.27.3    ['$binop_add310.28', '$const308.27.3', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19.3 = const(int, 1)           ['$const580.19.3']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19.3 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19.3']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28.3 = const(int, 1)           ['$const744.28.3']
    $binop_add746.29 = $binop_add740.27 + $const744.28.3 ['$binop_add740.27', '$binop_add746.29', '$const744.28.3']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0.0 = const(NoneType, None)    ['$const782.0.0']
    $784return_value.1 = cast(value=$const782.0.0) ['$784return_value.1', '$const782.0.0']
    return $784return_value.1                ['$784return_value.1']

2025-07-25 10:26:48,488 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 10:26:48,488 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021F6EACAD10>
2025-07-25 10:26:48,488 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,488 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,488 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,488 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,489 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,489 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,489 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,489 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,489 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,489 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,489 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,489 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,489 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,489 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,489 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,489 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,489 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,490 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,490 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,490 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,490 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,490 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,490 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,490 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,491 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,491 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,491 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,491 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,491 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,491 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,491 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,491 - DEBUG - ==== SSA block analysis pass on 176
2025-07-25 10:26:48,491 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021F6EACAD10>
2025-07-25 10:26:48,492 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,492 - DEBUG - ==== SSA block analysis pass on 178
2025-07-25 10:26:48,492 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021F6EACAD10>
2025-07-25 10:26:48,492 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,492 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,492 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,492 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,492 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,492 - DEBUG - ==== SSA block analysis pass on 180
2025-07-25 10:26:48,492 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021F6EACAD10>
2025-07-25 10:26:48,492 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,492 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,493 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,493 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,493 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:26:48,493 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:26:48,493 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,493 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,493 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,493 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,493 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,493 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,493 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:26:48,493 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:26:48,494 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,494 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,494 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,494 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,494 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,494 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,494 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,495 - DEBUG - ==== SSA block analysis pass on 374
2025-07-25 10:26:48,495 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021F6EACAD10>
2025-07-25 10:26:48,495 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,495 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,495 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,495 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,495 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,495 - DEBUG - ==== SSA block analysis pass on 376
2025-07-25 10:26:48,495 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021F6EACAD10>
2025-07-25 10:26:48,496 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,496 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,496 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:26:48,496 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,496 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,496 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:26:48,496 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,496 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,496 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,496 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,496 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:26:48,496 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,496 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,497 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,497 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,497 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,497 - DEBUG - ==== SSA block analysis pass on 500
2025-07-25 10:26:48,497 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021F6EACAD10>
2025-07-25 10:26:48,497 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:26:48,497 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:26:48,497 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,497 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,497 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,498 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,498 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,498 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:26:48,498 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,498 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,498 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:26:48,498 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,499 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,499 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,499 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,499 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,499 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,499 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,499 - DEBUG - ==== SSA block analysis pass on 646
2025-07-25 10:26:48,499 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021F6EACAD10>
2025-07-25 10:26:48,500 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,500 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,500 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,500 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,500 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,500 - DEBUG - ==== SSA block analysis pass on 648
2025-07-25 10:26:48,500 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021F6EACAD10>
2025-07-25 10:26:48,500 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,500 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,500 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:26:48,500 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,500 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,500 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:26:48,501 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,501 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,501 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,501 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,501 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:26:48,501 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,501 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,501 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,501 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,501 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,501 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,501 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,501 - DEBUG - ==== SSA block analysis pass on 778
2025-07-25 10:26:48,501 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021F6EACAD10>
2025-07-25 10:26:48,502 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,502 - DEBUG - ==== SSA block analysis pass on 782
2025-07-25 10:26:48,502 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000021F6EACAD10>
2025-07-25 10:26:48,502 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,502 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,502 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,502 - DEBUG - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x0000021F6EAC3050>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x0000021F6EAC37D0>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x0000021F6EAC3D90>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x0000021F6EAC40D0>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x0000021F6EAC2E90>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x0000021F6EAC41D0>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x0000021F6EAC4310>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x0000021F6EAC5010>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x0000021F6EAC6A50>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x0000021F6EAC79D0>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x0000021F6EAC8E90>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x0000021F6EAC9250>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x0000021F6EAC94D0>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x0000021F6EAC49D0>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x0000021F6EAC6110>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x0000021F6EAC6850>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000021F6EACA090>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000021F6EACAE50>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000021F6EACB8D0>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000021F6EAD03D0>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000021F6ECB9550>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x0000021F6EAD0FD0>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x0000021F6EAD1CD0>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x0000021F6EAD3350>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x0000021F6EAD3710>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x0000021F6EAD3910>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x0000021F6EAD10D0>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x0000021F6EAD1410>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x0000021F6EAD1E50>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000021F6EAD4890>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000021F6EAD5710>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x0000021F6EAC1D10>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000021F6EAD6250>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000021F6EAD7190>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x0000021F6EAD6090>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x0000021F6EAC2710>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x0000021F6EAC7FD0>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x0000021F6EAC9ED0>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x0000021F6EACAC50>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x0000021F6EAD4690>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x0000021F6EAD5510>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x0000021F6EAD6BD0>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x0000021F6EAD6F50>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x0000021F6EAC8910>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x0000021F6EAD2E50>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x0000021F6EAD07D0>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x0000021F6EAD7610>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x0000021F6ECAA6D0>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x0000021F6EAC9C90>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x0000021F6EACAA10>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x0000021F6EACB110>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x0000021F6EAD0610>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x0000021F6EAD4450>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x0000021F6EAD52D0>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x0000021F6EAD59D0>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x0000021F6EAD73D0>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x0000021F6EAC5E50>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x0000021F6EAC8590>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x0000021F6EAD01D0>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x0000021F6EACBE10>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x0000021F6EAD2250>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x0000021F6EAD2590>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x0000021F6EAD2A50>,
                                   500)],
             '$const106.19.2': [(<numba.core.ir.Assign object at 0x0000021F6EAC2950>,
                                 0)],
             '$const132.23.2': [(<numba.core.ir.Assign object at 0x0000021F6EAC3290>,
                                 0)],
             '$const308.27.3': [(<numba.core.ir.Assign object at 0x0000021F6EAC7DD0>,
                                 180)],
             '$const580.19.3': [(<numba.core.ir.Assign object at 0x0000021F6EAD2390>,
                                 500)],
             '$const744.28.3': [(<numba.core.ir.Assign object at 0x0000021F6EAD6D50>,
                                 648)],
             '$const782.0.0': [(<numba.core.ir.Assign object at 0x0000021F6EAD4B10>,
                                782)],
             '$const80.15.2': [(<numba.core.ir.Assign object at 0x0000021F6EAC1FD0>,
                                0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x0000021F6ECBAFD0>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x0000021F6EAC43D0>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x0000021F6EAC4850>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x0000021F6EAC7210>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x0000021F6EACA210>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x0000021F6EAD2850>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x0000021F6EAC14D0>, 0),
                     (<numba.core.ir.Assign object at 0x0000021F6EAC7710>, 180),
                     (<numba.core.ir.Assign object at 0x0000021F6EAD19D0>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x0000021F6EAC0B90>, 0),
                      (<numba.core.ir.Assign object at 0x0000021F6EAC6090>,
                       180),
                      (<numba.core.ir.Assign object at 0x0000021F6EACA550>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x0000021F6EAC86D0>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x0000021F6EAC8B50>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x0000021F6EAC0ED0>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000021F6EAC6750>,
                             180),
                            (<numba.core.ir.Assign object at 0x0000021F6EAD0D90>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x0000021F6EAB5490>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000021F6EAAA810>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000021F6ECA3FD0>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x0000021F6EAD3B10>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x0000021F6EAD3050>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x0000021F6EAC0910>, 0),
                   (<numba.core.ir.Assign object at 0x0000021F6EAC5590>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x0000021F6EC80910>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x0000021F6EAAA150>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000021F6EAA9C50>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x0000021F6E9808D0>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x0000021F6EAC1210>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000021F6EAC6FD0>,
                         180),
                        (<numba.core.ir.Assign object at 0x0000021F6EAD1390>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x0000021F6EAA9910>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x0000021F6EAC4690>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x0000021F6DFF2390>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x0000021F6EAB8050>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000021F6EAC4C10>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x0000021F6EAC1810>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000021F6EACB310>,
                         376),
                        (<numba.core.ir.Assign object at 0x0000021F6EAD5C50>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x0000021F6EAAC150>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000021F6EAA9550>, 0)]})
2025-07-25 10:26:48,508 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x0000021F6EAB7690>
2025-07-25 10:26:48,508 - DEBUG - Fix SSA violator on var time_register
2025-07-25 10:26:48,508 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,508 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB59D0>
2025-07-25 10:26:48,508 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,508 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,508 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,508 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,508 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,509 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,509 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,509 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,509 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,509 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,509 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,509 - DEBUG - first assign: time_register
2025-07-25 10:26:48,509 - DEBUG - replaced with: time_register = const(float, 0.0)
2025-07-25 10:26:48,509 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,510 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,510 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,510 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,510 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,510 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,510 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,510 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,510 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,510 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,510 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,510 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,511 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,511 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,511 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,511 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,511 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,511 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,511 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,512 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,512 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,512 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB59D0>
2025-07-25 10:26:48,512 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,512 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,512 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB59D0>
2025-07-25 10:26:48,512 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,512 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,512 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,512 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,512 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,512 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,512 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB59D0>
2025-07-25 10:26:48,512 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,513 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,513 - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,513 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,513 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,513 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:26:48,513 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:26:48,513 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,513 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,513 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,513 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,513 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,514 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,514 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:26:48,514 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:26:48,514 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,514 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,514 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,514 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,514 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,514 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,514 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,514 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,515 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB59D0>
2025-07-25 10:26:48,515 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,515 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,515 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,515 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,515 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,515 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,515 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB59D0>
2025-07-25 10:26:48,516 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,516 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,516 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:26:48,516 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,516 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,516 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:26:48,516 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,517 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,517 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,517 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,517 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:26:48,517 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,517 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,517 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,517 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,517 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,517 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,517 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB59D0>
2025-07-25 10:26:48,517 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:26:48,518 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:26:48,518 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,518 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,518 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,518 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,518 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,518 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:26:48,518 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,518 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,518 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:26:48,518 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,518 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,518 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,518 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,519 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,519 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,519 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,519 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,519 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB59D0>
2025-07-25 10:26:48,519 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,519 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,520 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,520 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,520 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,520 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,520 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB59D0>
2025-07-25 10:26:48,520 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,520 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,520 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:26:48,520 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,520 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,521 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:26:48,521 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,521 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,521 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,521 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,521 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:26:48,521 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,521 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,521 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,521 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,521 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,521 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,521 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,521 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,522 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB59D0>
2025-07-25 10:26:48,522 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,522 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,522 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB59D0>
2025-07-25 10:26:48,522 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,522 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,522 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,522 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021F6EAB7A50>],
             180: [<numba.core.ir.Assign object at 0x0000021F6EAACF90>]})
2025-07-25 10:26:48,522 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,522 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAEE50>
2025-07-25 10:26:48,523 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,523 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,523 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,523 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,523 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,523 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,523 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,523 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,523 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,523 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,523 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,523 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,524 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,524 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,524 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,524 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,524 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,524 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,524 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,524 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,524 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,525 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,525 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,525 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,525 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,525 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,525 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,525 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,525 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,525 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,525 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,525 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,525 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAEE50>
2025-07-25 10:26:48,525 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,526 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,526 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAEE50>
2025-07-25 10:26:48,526 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,526 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,526 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,526 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,526 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,526 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,526 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAEE50>
2025-07-25 10:26:48,526 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,526 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,526 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,526 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,526 - DEBUG - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,527 - DEBUG - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,527 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:26:48,527 - DEBUG - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
2025-07-25 10:26:48,527 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:26:48,527 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:26:48,527 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,527 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,527 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,527 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,527 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,527 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,528 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:26:48,528 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:26:48,528 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,528 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,528 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,528 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,529 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,529 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,529 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,529 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,529 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAEE50>
2025-07-25 10:26:48,529 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,529 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,529 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,529 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,529 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,530 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,530 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAEE50>
2025-07-25 10:26:48,530 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,530 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,530 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:26:48,530 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,530 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,530 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:26:48,530 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,530 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,530 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,530 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,531 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:26:48,531 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,531 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,531 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,531 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,531 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,531 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,531 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAEE50>
2025-07-25 10:26:48,531 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:26:48,531 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:26:48,531 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,531 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,532 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,532 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,532 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,532 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:26:48,532 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,532 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,532 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:26:48,533 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,533 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,533 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,533 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,533 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,533 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,533 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,533 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,533 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAEE50>
2025-07-25 10:26:48,533 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,533 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,534 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,534 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,534 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,534 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,534 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAEE50>
2025-07-25 10:26:48,534 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,534 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,534 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:26:48,534 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,534 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,534 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:26:48,535 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,535 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,535 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,535 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,535 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:26:48,535 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,535 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,535 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,535 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,535 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,535 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,535 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,535 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,536 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAEE50>
2025-07-25 10:26:48,536 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,536 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,536 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAEE50>
2025-07-25 10:26:48,536 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,536 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,536 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,536 - DEBUG - Fix SSA violator on var n
2025-07-25 10:26:48,536 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,536 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB5150>
2025-07-25 10:26:48,537 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,537 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,537 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,537 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,537 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,537 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,537 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,537 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,537 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,537 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,537 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,537 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,538 - DEBUG - first assign: n
2025-07-25 10:26:48,538 - DEBUG - replaced with: n = const(int, 0)
2025-07-25 10:26:48,538 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,538 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,538 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,538 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,538 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,538 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,538 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,538 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,538 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,538 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,538 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,538 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,538 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,539 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,539 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,539 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,539 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,539 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,539 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,539 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,539 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB5150>
2025-07-25 10:26:48,539 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,539 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,539 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB5150>
2025-07-25 10:26:48,540 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,540 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,540 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,540 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,540 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,540 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,540 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB5150>
2025-07-25 10:26:48,540 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,541 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,541 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,541 - DEBUG - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,541 - DEBUG - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,541 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:26:48,541 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:26:48,541 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,541 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,541 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,541 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,541 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,542 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,542 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:26:48,542 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:26:48,542 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,542 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,542 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,542 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,542 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,542 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,542 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,542 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,542 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB5150>
2025-07-25 10:26:48,543 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,543 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,543 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,543 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,543 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,543 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,543 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB5150>
2025-07-25 10:26:48,543 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,543 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,543 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:26:48,543 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,543 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,543 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:26:48,543 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,544 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,544 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,544 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,544 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:26:48,544 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,544 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,544 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,544 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,544 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,545 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,545 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB5150>
2025-07-25 10:26:48,545 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:26:48,545 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:26:48,545 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,545 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,545 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,545 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,545 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,546 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:26:48,546 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,546 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,546 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:26:48,546 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,546 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,546 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,546 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,546 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,546 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,546 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,546 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,546 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB5150>
2025-07-25 10:26:48,547 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,547 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,547 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,547 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,547 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,547 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,547 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB5150>
2025-07-25 10:26:48,547 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,547 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,547 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:26:48,547 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,547 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,547 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:26:48,547 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,547 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,548 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,548 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,548 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:26:48,548 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,548 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,548 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,548 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,548 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,548 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,548 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,549 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,549 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB5150>
2025-07-25 10:26:48,549 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,549 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,549 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB5150>
2025-07-25 10:26:48,549 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,549 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,549 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,549 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021F6EAB54D0>],
             180: [<numba.core.ir.Assign object at 0x0000021F6EAAE450>]})
2025-07-25 10:26:48,550 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,550 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6ECAB190>
2025-07-25 10:26:48,550 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,550 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,550 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,550 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,550 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,550 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,550 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,550 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,550 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,551 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,551 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,551 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,551 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,551 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,551 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,551 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,551 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,551 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,551 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,551 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,551 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,551 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,551 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,552 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,552 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,552 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,552 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,552 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,552 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,552 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,552 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,552 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,552 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6ECAB190>
2025-07-25 10:26:48,552 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,552 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,552 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6ECAB190>
2025-07-25 10:26:48,553 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,553 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,553 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,553 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,553 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,553 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,553 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6ECAB190>
2025-07-25 10:26:48,553 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,554 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,554 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,554 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,554 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:26:48,554 - DEBUG - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
2025-07-25 10:26:48,554 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:26:48,554 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:26:48,554 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,554 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,554 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,554 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,555 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,555 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,555 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:26:48,555 - DEBUG - find_def var='n' stmt=$binop_add310.28 = n + $const308.27.3
2025-07-25 10:26:48,555 - DEBUG - replaced with: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:26:48,555 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:26:48,555 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,555 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,555 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,555 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,555 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,555 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,555 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,556 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,556 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6ECAB190>
2025-07-25 10:26:48,556 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,556 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,556 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,556 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,556 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,556 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,556 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6ECAB190>
2025-07-25 10:26:48,556 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,556 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,556 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:26:48,556 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,556 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,556 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:26:48,557 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,557 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,557 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,557 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,557 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:26:48,557 - DEBUG - find_def var='n' stmt=$binop_sub468.27 = n - i
2025-07-25 10:26:48,557 - DEBUG - find_def_from_top label 376
2025-07-25 10:26:48,557 - DEBUG - idom 374 from label 376
2025-07-25 10:26:48,558 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:26:48,558 - DEBUG - find_def_from_top label 374
2025-07-25 10:26:48,558 - DEBUG - idom 180 from label 374
2025-07-25 10:26:48,558 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:26:48,558 - DEBUG - replaced with: $binop_sub468.27 = n.1 - i
2025-07-25 10:26:48,558 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,558 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,558 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,558 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,558 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,558 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,558 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6ECAB190>
2025-07-25 10:26:48,559 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:26:48,559 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:26:48,559 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,559 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,559 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,559 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,559 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,559 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:26:48,559 - DEBUG - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
2025-07-25 10:26:48,559 - DEBUG - find_def_from_top label 500
2025-07-25 10:26:48,559 - DEBUG - idom 374 from label 500
2025-07-25 10:26:48,560 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:26:48,560 - DEBUG - find_def_from_top label 374
2025-07-25 10:26:48,560 - DEBUG - idom 180 from label 374
2025-07-25 10:26:48,560 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:26:48,560 - DEBUG - replaced with: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:26:48,560 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,560 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,560 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:26:48,560 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,560 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,560 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,560 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,561 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,561 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,561 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,561 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,561 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6ECAB190>
2025-07-25 10:26:48,561 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,562 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,562 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,562 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,562 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,562 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,562 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6ECAB190>
2025-07-25 10:26:48,562 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,562 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,562 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:26:48,562 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,562 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,562 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:26:48,563 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,563 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,563 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,563 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,563 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:26:48,563 - DEBUG - find_def var='n' stmt=$binop_add740.27 = n + k
2025-07-25 10:26:48,563 - DEBUG - find_def_from_top label 648
2025-07-25 10:26:48,563 - DEBUG - idom 646 from label 648
2025-07-25 10:26:48,563 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:26:48,563 - DEBUG - find_def_from_top label 646
2025-07-25 10:26:48,563 - DEBUG - idom 500 from label 646
2025-07-25 10:26:48,563 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:26:48,563 - DEBUG - find_def_from_top label 500
2025-07-25 10:26:48,563 - DEBUG - idom 374 from label 500
2025-07-25 10:26:48,563 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:26:48,564 - DEBUG - find_def_from_top label 374
2025-07-25 10:26:48,564 - DEBUG - idom 180 from label 374
2025-07-25 10:26:48,564 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:26:48,564 - DEBUG - replaced with: $binop_add740.27 = n.1 + k
2025-07-25 10:26:48,564 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,564 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,564 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,564 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,564 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,564 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,564 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,564 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,565 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6ECAB190>
2025-07-25 10:26:48,565 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,565 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,565 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6ECAB190>
2025-07-25 10:26:48,565 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,565 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,565 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,565 - DEBUG - Fix SSA violator on var frac
2025-07-25 10:26:48,565 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9AD0>
2025-07-25 10:26:48,565 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,566 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,566 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,566 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,566 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,566 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,566 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,566 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,566 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,566 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,566 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,566 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,567 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,567 - DEBUG - first assign: frac
2025-07-25 10:26:48,567 - DEBUG - replaced with: frac = const(float, 0.0)
2025-07-25 10:26:48,567 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,567 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,567 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,567 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,567 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,567 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,567 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,567 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,567 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,567 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,568 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,568 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,568 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,568 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,568 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,568 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,568 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,568 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,568 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,568 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9AD0>
2025-07-25 10:26:48,568 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,568 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,568 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9AD0>
2025-07-25 10:26:48,568 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,569 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,569 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,569 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,569 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,569 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,569 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9AD0>
2025-07-25 10:26:48,569 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,569 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,569 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,570 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,570 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:26:48,570 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:26:48,570 - DEBUG - replaced with: frac.1 = scale * $binop_sub234.12
2025-07-25 10:26:48,570 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,570 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,570 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,570 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,570 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,570 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,570 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:26:48,571 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:26:48,571 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,571 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,571 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,571 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,571 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,571 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,571 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,571 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,571 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9AD0>
2025-07-25 10:26:48,571 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,571 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,571 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,572 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,572 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,572 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,572 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9AD0>
2025-07-25 10:26:48,572 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,572 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,572 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:26:48,572 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,572 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,572 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:26:48,572 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,572 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,572 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,573 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,573 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:26:48,573 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,573 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,573 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,573 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,573 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,573 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,573 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9AD0>
2025-07-25 10:26:48,573 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:26:48,573 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:26:48,573 - DEBUG - replaced with: frac.2 = $binop_sub504.3
2025-07-25 10:26:48,573 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,574 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,574 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,574 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,574 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,574 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:26:48,574 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,574 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,575 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:26:48,575 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,575 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,575 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,575 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,575 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,575 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,575 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,575 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,575 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9AD0>
2025-07-25 10:26:48,575 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,575 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,575 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,576 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,576 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,576 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,576 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9AD0>
2025-07-25 10:26:48,576 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,576 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,576 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:26:48,576 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,576 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,576 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:26:48,576 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,576 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,576 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,576 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,577 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:26:48,577 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,577 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,577 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,577 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,577 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,577 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,577 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,577 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,577 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9AD0>
2025-07-25 10:26:48,577 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,577 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,578 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9AD0>
2025-07-25 10:26:48,578 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,578 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,578 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,578 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021F6EC83790>],
             180: [<numba.core.ir.Assign object at 0x0000021F6EAAD6D0>],
             500: [<numba.core.ir.Assign object at 0x0000021F6EAAB390>]})
2025-07-25 10:26:48,578 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,578 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,579 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,579 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,579 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,579 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,579 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,579 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,579 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,579 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,579 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,579 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,580 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,580 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,580 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,580 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,580 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,580 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,580 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,580 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,580 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,580 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,580 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,581 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,581 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,581 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,581 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,581 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,581 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,581 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,581 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,581 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,581 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,581 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,581 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,581 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,582 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,582 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,582 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,582 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,582 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,582 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,582 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,582 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,583 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,583 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,583 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,583 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,583 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,583 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:26:48,583 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:26:48,583 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,583 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 10:26:48,583 - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-07-25 10:26:48,583 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,583 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,584 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,584 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,584 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,584 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:26:48,584 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:26:48,584 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,584 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,584 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,584 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,584 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,585 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,585 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,585 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,585 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,585 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,585 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,585 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,585 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,585 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,585 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,585 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,585 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,585 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,586 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:26:48,586 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,586 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,586 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:26:48,586 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,586 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,586 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,586 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,587 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:26:48,587 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,587 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,587 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,587 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,587 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,587 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,587 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,587 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:26:48,587 - DEBUG - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
2025-07-25 10:26:48,587 - DEBUG - find_def_from_top label 500
2025-07-25 10:26:48,588 - DEBUG - idom 374 from label 500
2025-07-25 10:26:48,588 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:26:48,588 - DEBUG - find_def_from_top label 374
2025-07-25 10:26:48,588 - DEBUG - idom 180 from label 374
2025-07-25 10:26:48,588 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:26:48,588 - DEBUG - replaced with: $binop_sub504.3 = scale - frac.1
2025-07-25 10:26:48,588 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:26:48,588 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:26:48,588 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 10:26:48,588 - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-07-25 10:26:48,588 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,588 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,588 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,589 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,589 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:26:48,589 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,589 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,589 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:26:48,589 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,589 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,589 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,589 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,589 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,590 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,590 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,590 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,590 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,590 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,590 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,590 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,590 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,591 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,591 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,591 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,591 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,591 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,591 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:26:48,591 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,591 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,591 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:26:48,591 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,591 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,592 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,592 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,592 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:26:48,592 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,592 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,592 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,592 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,592 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,592 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,592 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,592 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,592 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,593 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,593 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,593 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,593 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,593 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,593 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,593 - DEBUG - Fix SSA violator on var index_frac
2025-07-25 10:26:48,593 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,593 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAAD7D0>
2025-07-25 10:26:48,594 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,594 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,594 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,594 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,594 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,594 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,594 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,594 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,594 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,594 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,595 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,595 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,595 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,595 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,595 - DEBUG - first assign: index_frac
2025-07-25 10:26:48,595 - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-07-25 10:26:48,595 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,595 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,595 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,595 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,596 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,596 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,596 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,596 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,596 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,596 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,596 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,596 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,596 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,596 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,597 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,597 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,597 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,597 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAAD7D0>
2025-07-25 10:26:48,597 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,597 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,597 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAAD7D0>
2025-07-25 10:26:48,597 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,597 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,597 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,597 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,598 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,598 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,598 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAAD7D0>
2025-07-25 10:26:48,598 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,598 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,598 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,598 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,598 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:26:48,598 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:26:48,598 - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-07-25 10:26:48,598 - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-07-25 10:26:48,598 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,599 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,599 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,599 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,599 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,599 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:26:48,599 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:26:48,599 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,600 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,600 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,600 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,600 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,600 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,600 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,600 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,600 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAAD7D0>
2025-07-25 10:26:48,600 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,600 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,600 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,601 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,601 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,601 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,601 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAAD7D0>
2025-07-25 10:26:48,601 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,601 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,601 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:26:48,601 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,601 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,601 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:26:48,601 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,601 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,601 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,601 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,601 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:26:48,602 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,602 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,602 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,602 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,602 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,602 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,602 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAAD7D0>
2025-07-25 10:26:48,602 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:26:48,602 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:26:48,602 - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-07-25 10:26:48,602 - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-07-25 10:26:48,602 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,603 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,603 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,603 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,603 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:26:48,603 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,603 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,603 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:26:48,604 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,604 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,604 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,604 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,604 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,604 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,604 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,604 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,604 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAAD7D0>
2025-07-25 10:26:48,604 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,605 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,605 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,605 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,605 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,605 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,605 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAAD7D0>
2025-07-25 10:26:48,605 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,605 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,605 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:26:48,605 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,605 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,605 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:26:48,605 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,606 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,606 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,606 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,606 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:26:48,606 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,606 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,606 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,606 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,606 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,606 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,606 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,606 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,606 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAAD7D0>
2025-07-25 10:26:48,606 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,607 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,607 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAAD7D0>
2025-07-25 10:26:48,607 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,607 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,607 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,607 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021F6EAB9A90>],
             180: [<numba.core.ir.Assign object at 0x0000021F6EAAB2D0>],
             500: [<numba.core.ir.Assign object at 0x0000021F6EAA9FD0>]})
2025-07-25 10:26:48,607 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,608 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EC83BD0>
2025-07-25 10:26:48,608 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,608 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,608 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,608 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,608 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,608 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,608 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,608 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,608 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,608 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,608 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,608 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,608 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,609 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,609 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,609 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,609 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,609 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,609 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,609 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,609 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,609 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,610 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,610 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,610 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,610 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,610 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,610 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,610 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,610 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,610 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,610 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,610 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EC83BD0>
2025-07-25 10:26:48,610 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,611 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,611 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EC83BD0>
2025-07-25 10:26:48,611 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,611 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,611 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,611 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,611 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,611 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,612 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EC83BD0>
2025-07-25 10:26:48,612 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,612 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,612 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,612 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,612 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:26:48,612 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:26:48,612 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:26:48,612 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,612 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,612 - DEBUG - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,613 - DEBUG - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,613 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,613 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 10:26:48,613 - DEBUG - replaced with: eta = index_frac.1 - offset
2025-07-25 10:26:48,613 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,613 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,613 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:26:48,613 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:26:48,613 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,613 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,613 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,613 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,614 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,614 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,614 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,614 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,614 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EC83BD0>
2025-07-25 10:26:48,614 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,614 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,614 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,614 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,614 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,614 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,615 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EC83BD0>
2025-07-25 10:26:48,615 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,615 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,615 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:26:48,615 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,615 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,615 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:26:48,615 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,616 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,616 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,616 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,616 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:26:48,616 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,616 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,617 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,617 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,617 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,617 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,617 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EC83BD0>
2025-07-25 10:26:48,617 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:26:48,617 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:26:48,617 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:26:48,617 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,617 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,617 - DEBUG - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,618 - DEBUG - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,618 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:26:48,618 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 10:26:48,618 - DEBUG - replaced with: eta = index_frac.2 - offset
2025-07-25 10:26:48,618 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,618 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:26:48,618 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,618 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,618 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:26:48,619 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,619 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,619 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,619 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,619 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,619 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,620 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,620 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,620 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EC83BD0>
2025-07-25 10:26:48,620 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,620 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,620 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,620 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,620 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,620 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,620 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EC83BD0>
2025-07-25 10:26:48,620 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,621 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,621 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:26:48,621 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,621 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,621 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:26:48,621 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,621 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,621 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,621 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,621 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:26:48,621 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,621 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,621 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,622 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,622 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,622 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,622 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,622 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EC83BD0>
2025-07-25 10:26:48,622 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,622 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EC83BD0>
2025-07-25 10:26:48,622 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,623 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,623 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,623 - DEBUG - Fix SSA violator on var offset
2025-07-25 10:26:48,623 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,623 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,623 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,623 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,623 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,623 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,623 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,623 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,623 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,624 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,624 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,624 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,624 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,624 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,624 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,624 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,625 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,625 - DEBUG - first assign: offset
2025-07-25 10:26:48,625 - DEBUG - replaced with: offset = const(int, 0)
2025-07-25 10:26:48,625 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,625 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,625 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,625 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,625 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,625 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,625 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,625 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,626 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,626 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,626 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,626 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,626 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,626 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,626 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,626 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,626 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,626 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,626 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,626 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,626 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,626 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,627 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,627 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,627 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,627 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,627 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,627 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,627 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,627 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,627 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,627 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,627 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:26:48,627 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:26:48,627 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:26:48,627 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,628 - DEBUG - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,628 - DEBUG - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,628 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 10:26:48,628 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,628 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,628 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:26:48,629 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:26:48,629 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,629 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,629 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,629 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,629 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,629 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,629 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,629 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,629 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,629 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,630 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,630 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,630 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,630 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,630 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,630 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,630 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,630 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,630 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:26:48,630 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,630 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,630 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:26:48,630 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,631 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,631 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,631 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,631 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:26:48,631 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,631 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,631 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,631 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,631 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,631 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,631 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,631 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:26:48,631 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:26:48,632 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:26:48,632 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,632 - DEBUG - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,632 - DEBUG - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,632 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 10:26:48,632 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,632 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:26:48,633 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,633 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,633 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:26:48,633 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,633 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,633 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,633 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,633 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,633 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,633 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,633 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,633 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,634 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,634 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,634 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,634 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,634 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,634 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,634 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,634 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,634 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,634 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:26:48,635 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,635 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,635 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:26:48,635 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,635 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,635 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,635 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,635 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:26:48,635 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,635 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,635 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,635 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,636 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,636 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,636 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,636 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,636 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,636 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,636 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,636 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB6F90>
2025-07-25 10:26:48,636 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,637 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,637 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,637 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021F6EAB9BD0>],
             180: [<numba.core.ir.Assign object at 0x0000021F6EAAA690>],
             500: [<numba.core.ir.Assign object at 0x0000021F6E8E3C50>]})
2025-07-25 10:26:48,637 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,637 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAA9B10>
2025-07-25 10:26:48,637 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,637 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,637 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,637 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,637 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,637 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,638 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,638 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,638 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,638 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,638 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,638 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,638 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,638 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,638 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,638 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,638 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,638 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,638 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,639 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,639 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,639 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,639 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,639 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,639 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,639 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,639 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,639 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,639 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,640 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,640 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,640 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,640 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAA9B10>
2025-07-25 10:26:48,640 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,640 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,640 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAA9B10>
2025-07-25 10:26:48,640 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,640 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,641 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,641 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,641 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,641 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,641 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAA9B10>
2025-07-25 10:26:48,641 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,641 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,641 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,641 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,641 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:26:48,642 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:26:48,642 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:26:48,642 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,642 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,642 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 10:26:48,642 - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-07-25 10:26:48,642 - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-07-25 10:26:48,642 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,642 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,642 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:26:48,642 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:26:48,642 - DEBUG - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
2025-07-25 10:26:48,642 - DEBUG - replaced with: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:26:48,643 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,643 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,643 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,643 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,643 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,643 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,643 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,643 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,643 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAA9B10>
2025-07-25 10:26:48,643 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,643 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,643 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,643 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,644 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,644 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,644 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAA9B10>
2025-07-25 10:26:48,644 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,644 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,644 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:26:48,644 - DEBUG - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:26:48,645 - DEBUG - find_def_from_top label 376
2025-07-25 10:26:48,645 - DEBUG - idom 374 from label 376
2025-07-25 10:26:48,645 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:26:48,645 - DEBUG - find_def_from_top label 374
2025-07-25 10:26:48,645 - DEBUG - idom 180 from label 374
2025-07-25 10:26:48,645 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:26:48,645 - DEBUG - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:26:48,645 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,645 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,646 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:26:48,646 - DEBUG - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:26:48,646 - DEBUG - find_def_from_top label 376
2025-07-25 10:26:48,646 - DEBUG - idom 374 from label 376
2025-07-25 10:26:48,646 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:26:48,646 - DEBUG - find_def_from_top label 374
2025-07-25 10:26:48,646 - DEBUG - idom 180 from label 374
2025-07-25 10:26:48,646 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:26:48,646 - DEBUG - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:26:48,646 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,646 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,646 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,646 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,646 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:26:48,647 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,647 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,647 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,647 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,647 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,647 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,647 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAA9B10>
2025-07-25 10:26:48,647 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:26:48,647 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:26:48,647 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:26:48,647 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,647 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,647 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 10:26:48,647 - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-07-25 10:26:48,648 - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-07-25 10:26:48,648 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,648 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:26:48,648 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,648 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,648 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:26:48,648 - DEBUG - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
2025-07-25 10:26:48,648 - DEBUG - replaced with: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:26:48,648 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,648 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,648 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,649 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,649 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,649 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,649 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,649 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,649 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAA9B10>
2025-07-25 10:26:48,649 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,650 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,650 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,650 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,650 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,650 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,650 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAA9B10>
2025-07-25 10:26:48,650 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,650 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,650 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:26:48,650 - DEBUG - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:26:48,650 - DEBUG - find_def_from_top label 648
2025-07-25 10:26:48,650 - DEBUG - idom 646 from label 648
2025-07-25 10:26:48,650 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:26:48,650 - DEBUG - find_def_from_top label 646
2025-07-25 10:26:48,651 - DEBUG - idom 500 from label 646
2025-07-25 10:26:48,651 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:26:48,651 - DEBUG - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:26:48,651 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,651 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,651 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:26:48,651 - DEBUG - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:26:48,651 - DEBUG - find_def_from_top label 648
2025-07-25 10:26:48,651 - DEBUG - idom 646 from label 648
2025-07-25 10:26:48,651 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:26:48,651 - DEBUG - find_def_from_top label 646
2025-07-25 10:26:48,651 - DEBUG - idom 500 from label 646
2025-07-25 10:26:48,651 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:26:48,651 - DEBUG - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:26:48,651 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,652 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,652 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,652 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,652 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:26:48,652 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,652 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,652 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,652 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,652 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,652 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,652 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,652 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,652 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAA9B10>
2025-07-25 10:26:48,653 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,653 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,653 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAA9B10>
2025-07-25 10:26:48,653 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,653 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,653 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,653 - DEBUG - Fix SSA violator on var eta
2025-07-25 10:26:48,654 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,654 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9F90>
2025-07-25 10:26:48,654 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,654 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,654 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,654 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,654 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,654 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,654 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,654 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,654 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,654 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,655 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,655 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,655 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,655 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,655 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,655 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,655 - DEBUG - first assign: eta
2025-07-25 10:26:48,655 - DEBUG - replaced with: eta = const(float, 0.0)
2025-07-25 10:26:48,655 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,655 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,655 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,655 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,655 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,656 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,656 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,656 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,656 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,656 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,656 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,656 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,656 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,656 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,656 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,656 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,656 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9F90>
2025-07-25 10:26:48,656 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,656 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,656 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9F90>
2025-07-25 10:26:48,657 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,657 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,657 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,657 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,657 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,657 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,657 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9F90>
2025-07-25 10:26:48,658 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,658 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,658 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,658 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,658 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:26:48,658 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:26:48,658 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:26:48,658 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,658 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,658 - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-07-25 10:26:48,658 - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-07-25 10:26:48,658 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,659 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,659 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:26:48,659 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:26:48,659 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,659 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,659 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,659 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,659 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,659 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,659 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,659 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,660 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9F90>
2025-07-25 10:26:48,660 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,660 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,660 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,660 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,660 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,660 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,660 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9F90>
2025-07-25 10:26:48,660 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,660 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,660 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:26:48,660 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,661 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,661 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:26:48,661 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,661 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,661 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,661 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,661 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:26:48,662 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,662 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,662 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,662 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,662 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,662 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9F90>
2025-07-25 10:26:48,662 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:26:48,662 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:26:48,662 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:26:48,662 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,663 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,663 - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-07-25 10:26:48,663 - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-07-25 10:26:48,663 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,663 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:26:48,663 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,663 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,663 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:26:48,663 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,663 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,663 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,663 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,663 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,664 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,664 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,664 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,664 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9F90>
2025-07-25 10:26:48,664 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,664 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,664 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,664 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,664 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,664 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,664 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9F90>
2025-07-25 10:26:48,665 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,665 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,665 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:26:48,665 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,665 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,665 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:26:48,665 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,665 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,665 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,666 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,666 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:26:48,666 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,666 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,666 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,666 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,666 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,666 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,666 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,666 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,666 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9F90>
2025-07-25 10:26:48,666 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,667 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,667 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6EAB9F90>
2025-07-25 10:26:48,667 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,667 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,667 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,667 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021F6EAA8790>],
             180: [<numba.core.ir.Assign object at 0x0000021F6EAA9AD0>],
             500: [<numba.core.ir.Assign object at 0x0000021F6ECB9290>]})
2025-07-25 10:26:48,667 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,667 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAFF10>
2025-07-25 10:26:48,667 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,667 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,667 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,668 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,668 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,668 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,668 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,668 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,668 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,668 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,668 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,668 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,668 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,668 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,668 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,668 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,668 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,668 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,669 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,669 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,669 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,669 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,669 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,669 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,669 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,670 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,670 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,670 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,670 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,670 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,670 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,670 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,670 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAFF10>
2025-07-25 10:26:48,670 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,670 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,671 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAFF10>
2025-07-25 10:26:48,671 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,671 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,671 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,671 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,671 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,671 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,671 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAFF10>
2025-07-25 10:26:48,671 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,671 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,671 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,671 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,671 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:26:48,671 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:26:48,672 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:26:48,672 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,672 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,672 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:26:48,672 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,672 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,672 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:26:48,672 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:26:48,672 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,672 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,672 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,672 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,673 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,673 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,673 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,673 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,673 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAFF10>
2025-07-25 10:26:48,673 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,673 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,673 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,673 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,674 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,674 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,674 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAFF10>
2025-07-25 10:26:48,674 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,674 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,674 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:26:48,675 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,675 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,675 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:26:48,675 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,675 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,675 - DEBUG - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:26:48,675 - DEBUG - find_def_from_top label 376
2025-07-25 10:26:48,675 - DEBUG - idom 374 from label 376
2025-07-25 10:26:48,675 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:26:48,675 - DEBUG - find_def_from_top label 374
2025-07-25 10:26:48,675 - DEBUG - idom 180 from label 374
2025-07-25 10:26:48,676 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:26:48,676 - DEBUG - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:26:48,676 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,676 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,676 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:26:48,676 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,676 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,676 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,676 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,676 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,676 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,676 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAFF10>
2025-07-25 10:26:48,676 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:26:48,676 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:26:48,677 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:26:48,677 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,677 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,677 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:26:48,677 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,677 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:26:48,677 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,677 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,677 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:26:48,677 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,677 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,677 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,678 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,678 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,678 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,678 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,678 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,678 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAFF10>
2025-07-25 10:26:48,678 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,679 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,679 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,679 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,679 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,679 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,679 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAFF10>
2025-07-25 10:26:48,679 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,679 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,679 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:26:48,679 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,680 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,680 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:26:48,680 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,680 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,680 - DEBUG - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:26:48,680 - DEBUG - find_def_from_top label 648
2025-07-25 10:26:48,680 - DEBUG - idom 646 from label 648
2025-07-25 10:26:48,680 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:26:48,680 - DEBUG - find_def_from_top label 646
2025-07-25 10:26:48,680 - DEBUG - idom 500 from label 646
2025-07-25 10:26:48,680 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:26:48,680 - DEBUG - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:26:48,680 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,681 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,681 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:26:48,681 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,681 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,681 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,681 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,681 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,681 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,681 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,681 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,681 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAFF10>
2025-07-25 10:26:48,681 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,681 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,681 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAAFF10>
2025-07-25 10:26:48,682 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,682 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,682 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,682 - DEBUG - Fix SSA violator on var weight
2025-07-25 10:26:48,682 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,682 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6ECBB910>
2025-07-25 10:26:48,682 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,682 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,682 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,683 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,683 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,683 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,683 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,683 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,683 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,683 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,683 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,683 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,683 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,683 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,683 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,684 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,684 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,684 - DEBUG - first assign: weight
2025-07-25 10:26:48,684 - DEBUG - replaced with: weight = const(float, 0.0)
2025-07-25 10:26:48,684 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,684 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,684 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,684 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,684 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,684 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,684 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,685 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,685 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,685 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,685 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,685 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,685 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,685 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,685 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,685 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6ECBB910>
2025-07-25 10:26:48,685 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,685 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,685 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6ECBB910>
2025-07-25 10:26:48,685 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,686 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,686 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,686 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,686 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,686 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,686 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6ECBB910>
2025-07-25 10:26:48,686 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,686 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,686 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,687 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,687 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:26:48,687 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:26:48,687 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:26:48,687 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,687 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,687 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:26:48,687 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,687 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,687 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:26:48,687 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:26:48,687 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,688 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,688 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,688 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,688 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,688 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,688 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,688 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,688 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6ECBB910>
2025-07-25 10:26:48,688 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,688 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,688 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,688 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,688 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,688 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,689 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6ECBB910>
2025-07-25 10:26:48,689 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,689 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,689 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:26:48,689 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,689 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,689 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:26:48,689 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,689 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:26:48,689 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,690 - DEBUG - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,690 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,690 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:26:48,690 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,690 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,690 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,690 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,690 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,691 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,691 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6ECBB910>
2025-07-25 10:26:48,691 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:26:48,691 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:26:48,691 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:26:48,691 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,691 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,691 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:26:48,691 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,691 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:26:48,692 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,692 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,692 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:26:48,692 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,692 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,692 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,692 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,692 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,692 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,692 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,692 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,692 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6ECBB910>
2025-07-25 10:26:48,693 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,693 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,693 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,693 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,693 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,693 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,693 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6ECBB910>
2025-07-25 10:26:48,693 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,693 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,693 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:26:48,693 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,693 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,693 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:26:48,693 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,694 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:26:48,694 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,694 - DEBUG - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,694 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,694 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:26:48,694 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,694 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,694 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,695 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,695 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,695 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,695 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,695 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,695 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6ECBB910>
2025-07-25 10:26:48,695 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,695 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,695 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000021F6ECBB910>
2025-07-25 10:26:48,695 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,695 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,695 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:48,696 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000021F6ECB9FD0>],
             376: [<numba.core.ir.Assign object at 0x0000021F6EAD6A50>],
             648: [<numba.core.ir.Assign object at 0x0000021F6EAD0F50>]})
2025-07-25 10:26:48,696 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:26:48,696 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAD6A90>
2025-07-25 10:26:48,696 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:26:48,696 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:26:48,696 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:26:48,696 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:26:48,696 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:26:48,696 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:26:48,696 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:26:48,696 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:26:48,696 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:26:48,697 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,697 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:26:48,697 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:26:48,697 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:26:48,697 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:26:48,697 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:26:48,697 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:26:48,697 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:26:48,697 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:26:48,697 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:26:48,697 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,698 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:26:48,698 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:26:48,698 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,698 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:26:48,698 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:26:48,698 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:26:48,698 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:26:48,698 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,698 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:26:48,699 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:26:48,699 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,699 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:26:48,699 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAD6A90>
2025-07-25 10:26:48,699 - DEBUG - on stmt: jump 178
2025-07-25 10:26:48,699 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:26:48,699 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAD6A90>
2025-07-25 10:26:48,699 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:26:48,699 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:26:48,700 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:26:48,700 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:26:48,700 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:26:48,700 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:26:48,700 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAD6A90>
2025-07-25 10:26:48,700 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:26:48,700 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,700 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:26:48,700 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,700 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:26:48,700 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:26:48,701 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:26:48,701 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:26:48,701 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,701 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:26:48,701 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:26:48,701 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:26:48,701 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:26:48,701 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:26:48,701 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:26:48,701 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,701 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:26:48,701 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,702 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:26:48,702 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:26:48,702 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,702 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:26:48,702 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAD6A90>
2025-07-25 10:26:48,702 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:26:48,702 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:26:48,702 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:26:48,702 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:26:48,702 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:26:48,702 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:26:48,702 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAD6A90>
2025-07-25 10:26:48,702 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:26:48,702 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:26:48,703 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:26:48,703 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,703 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:26:48,703 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:26:48,703 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,703 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:26:48,703 - DEBUG - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:26:48,703 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,703 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:26:48,704 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:26:48,704 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,704 - DEBUG - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:26:48,704 - DEBUG - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
2025-07-25 10:26:48,704 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,704 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:26:48,704 - DEBUG - on stmt: jump 374
2025-07-25 10:26:48,704 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:26:48,704 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAD6A90>
2025-07-25 10:26:48,704 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:26:48,705 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:26:48,705 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:26:48,705 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:26:48,705 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,705 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:26:48,705 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:26:48,706 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:26:48,706 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:26:48,706 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:26:48,706 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:26:48,706 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:26:48,706 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,706 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:26:48,706 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:26:48,707 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:26:48,707 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:26:48,707 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,707 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:26:48,707 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAD6A90>
2025-07-25 10:26:48,707 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:26:48,707 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:26:48,707 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:26:48,708 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:26:48,708 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:26:48,708 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:26:48,709 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAD6A90>
2025-07-25 10:26:48,709 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:26:48,710 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:26:48,710 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:26:48,710 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:26:48,710 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:26:48,710 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:26:48,711 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:26:48,711 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:26:48,711 - DEBUG - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:26:48,711 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:26:48,711 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:26:48,712 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:26:48,712 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:26:48,712 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:26:48,712 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,713 - DEBUG - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:26:48,713 - DEBUG - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
2025-07-25 10:26:48,713 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:26:48,713 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:26:48,713 - DEBUG - on stmt: jump 646
2025-07-25 10:26:48,713 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:26:48,714 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAD6A90>
2025-07-25 10:26:48,714 - DEBUG - on stmt: jump 176
2025-07-25 10:26:48,714 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:26:48,714 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000021F6EAD6A90>
2025-07-25 10:26:48,714 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:26:48,714 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:26:48,714 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:26:49,097 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-07-25 10:26:49,098 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:26:49,098 - DEBUG - stack: []
2025-07-25 10:26:49,099 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:26:49,099 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-07-25 10:26:49,099 - DEBUG - stack []
2025-07-25 10:26:49,099 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-07-25 10:26:49,099 - DEBUG - stack []
2025-07-25 10:26:49,099 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:26:49,099 - DEBUG - stack []
2025-07-25 10:26:49,100 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-07-25 10:26:49,100 - DEBUG - stack ['$x4.0']
2025-07-25 10:26:49,100 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:26:49,100 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-07-25 10:26:49,100 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:26:49,100 - DEBUG - stack ['$8binary_subscr.2']
2025-07-25 10:26:49,100 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-07-25 10:26:49,100 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-07-25 10:26:49,100 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:26:49,101 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-07-25 10:26:49,101 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-07-25 10:26:49,101 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-07-25 10:26:49,101 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-07-25 10:26:49,101 - DEBUG - stack ['$binop_add32.6']
2025-07-25 10:26:49,101 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:26:49,101 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-07-25 10:26:49,101 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-07-25 10:26:49,101 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-07-25 10:26:49,102 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:26:49,102 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-07-25 10:26:49,102 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-07-25 10:26:49,102 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-07-25 10:26:49,102 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-07-25 10:26:49,103 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-07-25 10:26:49,103 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-07-25 10:26:49,103 - DEBUG - stack ['$binop_sub56.12']
2025-07-25 10:26:49,103 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 10:26:49,103 - DEBUG - stack []
2025-07-25 10:26:49,104 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-07-25 10:26:49,104 - DEBUG - stack ['$x62.13']
2025-07-25 10:26:49,104 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 10:26:49,104 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-07-25 10:26:49,104 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 10:26:49,104 - DEBUG - stack ['$66binary_subscr.15']
2025-07-25 10:26:49,104 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-07-25 10:26:49,104 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-07-25 10:26:49,104 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 10:26:49,105 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-07-25 10:26:49,105 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-07-25 10:26:49,105 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-07-25 10:26:49,105 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-07-25 10:26:49,105 - DEBUG - stack ['$binop_sub90.19']
2025-07-25 10:26:49,105 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-07-25 10:26:49,105 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-07-25 10:26:49,105 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-07-25 10:26:49,105 - DEBUG - stack ['$binop_truediv96.21']
2025-07-25 10:26:49,105 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 10:26:49,106 - DEBUG - stack []
2025-07-25 10:26:49,106 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 10:26:49,106 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-07-25 10:26:49,106 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-07-25 10:26:49,106 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-07-25 10:26:49,106 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-07-25 10:26:49,106 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 10:26:49,106 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-07-25 10:26:49,106 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 10:26:49,106 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 10:26:49,107 - DEBUG - stack ['$130call.26']
2025-07-25 10:26:49,107 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 10:26:49,107 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-07-25 10:26:49,107 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-07-25 10:26:49,107 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-07-25 10:26:49,107 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-07-25 10:26:49,107 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 10:26:49,108 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-07-25 10:26:49,108 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 10:26:49,108 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-07-25 10:26:49,108 - DEBUG - stack ['$130call.26', '$168call.31']
2025-07-25 10:26:49,108 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-07-25 10:26:49,108 - DEBUG - stack ['$178compare_op.32']
2025-07-25 10:26:49,108 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-25 10:26:49,108 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-25 10:26:49,108 - DEBUG - stack: []
2025-07-25 10:26:49,108 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-07-25 10:26:49,109 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-07-25 10:26:49,109 - DEBUG - stack []
2025-07-25 10:26:49,109 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-07-25 10:26:49,109 - DEBUG - stack ['$const186.0.4']
2025-07-25 10:26:49,110 - DEBUG - end state. edges=[]
2025-07-25 10:26:49,110 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-07-25 10:26:49,110 - DEBUG - stack: []
2025-07-25 10:26:49,110 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-25 10:26:49,110 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-07-25 10:26:49,110 - DEBUG - stack []
2025-07-25 10:26:49,110 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-07-25 10:26:49,110 - DEBUG - stack ['$b190.0']
2025-07-25 10:26:49,110 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-07-25 10:26:49,111 - DEBUG - stack ['$192unary_negative.1']
2025-07-25 10:26:49,111 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-07-25 10:26:49,111 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-07-25 10:26:49,111 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-07-25 10:26:49,111 - DEBUG - stack ['$binop_truediv196.3']
2025-07-25 10:26:49,111 - DEBUG - end state. edges=[]
2025-07-25 10:26:49,112 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:26:49,112 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-25 10:26:49,112 - DEBUG - defmap: {}
2025-07-25 10:26:49,112 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:26:49,112 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:26:49,112 - DEBUG - keep phismap: {}
2025-07-25 10:26:49,113 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 10:26:49,113 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:26:49,113 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-07-25 10:26:49,113 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:26:49,114 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:26:49,114 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-07-25 10:26:49,169 - DEBUG - BPM-Wert ermittelt: 172
2025-07-25 10:27:16,041 - INFO - Tags gespeichert für: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:27:16,041 - ERROR - Fehler bei der Verarbeitung von data\05. Untergrund (Feat. Eko Fresh).mp3: 'NoneType' object is not subscriptable
2025-07-25 10:27:16,042 - INFO - Verarbeite Datei: data\08. Das Leben ist hart.mp3
2025-07-25 10:27:16,042 - INFO - Beginne Verarbeitung der Datei: data\08. Das Leben ist hart.mp3
2025-07-25 10:27:16,046 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Das Leben ist hart
2025-07-25 10:27:16,047 - INFO - Lade und speichere Lyrics für: Bushido - Das Leben ist hart
2025-07-25 10:27:16,049 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:27:16,434 - DEBUG - https://genius.com:443 "GET /bushido-das-leben-ist-hart-lyrics HTTP/1.1" 301 None
2025-07-25 10:27:16,618 - DEBUG - https://genius.com:443 "GET /Bushido-das-leben-ist-hart-lyrics HTTP/1.1" 200 None
2025-07-25 10:27:16,863 - DEBUG - BPM-Wert ermittelt: 83
2025-07-25 10:27:43,731 - INFO - Tags gespeichert für: data\08. Das Leben ist hart.mp3
2025-07-25 10:27:43,731 - ERROR - Fehler bei der Verarbeitung von data\08. Das Leben ist hart.mp3: 'NoneType' object is not subscriptable
2025-07-25 10:27:43,732 - INFO - Verarbeite Datei: data\09. Hast du was bist du was.mp3
2025-07-25 10:27:43,732 - INFO - Beginne Verarbeitung der Datei: data\09. Hast du was bist du was.mp3
2025-07-25 10:27:43,736 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Hast du was bist du was
2025-07-25 10:27:43,737 - INFO - Lade und speichere Lyrics für: Bushido - Hast du was bist du was
2025-07-25 10:27:43,739 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 10:27:43,937 - DEBUG - https://genius.com:443 "GET /bushido-hast-du-was-bist-du-was-lyrics HTTP/1.1" 301 None
2025-07-25 10:27:44,278 - DEBUG - https://genius.com:443 "GET /Bushido-hast-du-was-bist-du-was-lyrics HTTP/1.1" 200 None
2025-07-25 10:27:44,517 - DEBUG - BPM-Wert ermittelt: 129
2025-07-25 10:43:30,944 - DEBUG - Starte die Anwendung...
2025-07-25 10:43:30,944 - INFO - Verarbeite MP3-Datei...
2025-07-25 10:43:30,944 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 10:43:30,948 - DEBUG - Using proactor: IocpProactor
2025-07-25 10:43:30,950 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 10:43:31,100 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 10:43:31,106 - DEBUG - Using proactor: IocpProactor
2025-07-25 10:43:31,270 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 10:43:31,271 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=None socket_options=None
2025-07-25 10:43:31,271 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024AEE0727D0>
2025-07-25 10:43:31,272 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 10:43:31,272 - DEBUG - send_request_headers.complete
2025-07-25 10:43:31,273 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 10:43:31,273 - DEBUG - send_request_body.complete
2025-07-25 10:43:31,273 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 10:43:31,273 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 08:43:31 GMT'), (b'server', b'uvicorn'), (b'content-length', b'4'), (b'content-type', b'application/json')])
2025-07-25 10:43:31,273 - INFO - HTTP Request: GET http://127.0.0.1:7860/gradio_api/startup-events "HTTP/1.1 200 OK"
2025-07-25 10:43:31,274 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 10:43:31,274 - DEBUG - receive_response_body.complete
2025-07-25 10:43:31,274 - DEBUG - response_closed.started
2025-07-25 10:43:31,274 - DEBUG - response_closed.complete
2025-07-25 10:43:31,274 - DEBUG - close.started
2025-07-25 10:43:31,274 - DEBUG - close.complete
2025-07-25 10:43:31,275 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=3 socket_options=None
2025-07-25 10:43:31,276 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024AEE0E9F10>
2025-07-25 10:43:31,276 - DEBUG - send_request_headers.started request=<Request [b'HEAD']>
2025-07-25 10:43:31,276 - DEBUG - send_request_headers.complete
2025-07-25 10:43:31,276 - DEBUG - send_request_body.started request=<Request [b'HEAD']>
2025-07-25 10:43:31,277 - DEBUG - send_request_body.complete
2025-07-25 10:43:31,277 - DEBUG - receive_response_headers.started request=<Request [b'HEAD']>
2025-07-25 10:43:31,285 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 08:43:31 GMT'), (b'server', b'uvicorn'), (b'content-length', b'25375'), (b'content-type', b'text/html; charset=utf-8')])
2025-07-25 10:43:31,285 - INFO - HTTP Request: HEAD http://127.0.0.1:7860/ "HTTP/1.1 200 OK"
2025-07-25 10:43:31,286 - DEBUG - receive_response_body.started request=<Request [b'HEAD']>
2025-07-25 10:43:31,286 - DEBUG - receive_response_body.complete
2025-07-25 10:43:31,286 - DEBUG - response_closed.started
2025-07-25 10:43:31,286 - DEBUG - response_closed.complete
2025-07-25 10:43:31,286 - DEBUG - close.started
2025-07-25 10:43:31,286 - DEBUG - close.complete
2025-07-25 10:43:31,288 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 10:43:31,326 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024AEE11F510>
2025-07-25 10:43:31,326 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024AEDD0F530> server_hostname='api.gradio.app' timeout=3
2025-07-25 10:43:31,439 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/launched HTTP/1.1" 200 0
2025-07-25 10:43:31,671 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024AEE251750>
2025-07-25 10:43:31,671 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 10:43:31,671 - DEBUG - send_request_headers.complete
2025-07-25 10:43:31,672 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 10:43:31,672 - DEBUG - send_request_body.complete
2025-07-25 10:43:31,672 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 10:43:31,839 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 08:43:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 10:43:31,840 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 10:43:31,840 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 10:43:31,840 - DEBUG - receive_response_body.complete
2025-07-25 10:43:31,841 - DEBUG - response_closed.started
2025-07-25 10:43:31,841 - DEBUG - response_closed.complete
2025-07-25 10:43:31,841 - DEBUG - close.started
2025-07-25 10:43:31,841 - DEBUG - close.complete
2025-07-25 10:43:51,594 - DEBUG - matplotlib data path: Z:\AI\software\miniconda3\envs\ace-data_env\Lib\site-packages\matplotlib\mpl-data
2025-07-25 10:43:51,597 - DEBUG - CONFIGDIR=C:\Users\methm\.matplotlib
2025-07-25 10:43:51,598 - DEBUG - interactive is False
2025-07-25 10:43:51,598 - DEBUG - platform is win32
2025-07-25 10:43:51,635 - DEBUG - CACHEDIR=C:\Users\methm\.matplotlib
2025-07-25 10:43:51,642 - DEBUG - Using fontManager instance from C:\Users\methm\.matplotlib\fontlist-v390.json
2025-07-25 10:43:51,775 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 10:43:51,776 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 10:43:51,776 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 10:43:51,777 - INFO - Verarbeite Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:43:51,777 - INFO - Beginne Verarbeitung der Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:43:51,784 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Untergrund (Feat. Eko Fresh)
2025-07-25 10:43:51,857 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
2025-07-25 10:43:51,858 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:43:51,858 - DEBUG - stack: []
2025-07-25 10:43:51,858 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:43:51,858 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-07-25 10:43:51,859 - DEBUG - stack []
2025-07-25 10:43:51,859 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
2025-07-25 10:43:51,859 - DEBUG - stack []
2025-07-25 10:43:51,859 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
2025-07-25 10:43:51,859 - DEBUG - stack []
2025-07-25 10:43:51,859 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
2025-07-25 10:43:51,859 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 10:43:51,859 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
2025-07-25 10:43:51,859 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2025-07-25 10:43:51,859 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
2025-07-25 10:43:51,859 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
2025-07-25 10:43:51,859 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
2025-07-25 10:43:51,859 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
2025-07-25 10:43:51,860 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
2025-07-25 10:43:51,860 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
2025-07-25 10:43:51,860 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
2025-07-25 10:43:51,860 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
2025-07-25 10:43:51,860 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
2025-07-25 10:43:51,860 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
2025-07-25 10:43:51,860 - DEBUG - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
2025-07-25 10:43:51,860 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 10:43:51,860 - DEBUG - dispatch pc=34, inst=CALL(arg=7, lineno=86)
2025-07-25 10:43:51,860 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 10:43:51,861 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
2025-07-25 10:43:51,861 - DEBUG - stack ['$34call.9']
2025-07-25 10:43:51,861 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
2025-07-25 10:43:51,861 - DEBUG - stack []
2025-07-25 10:43:51,861 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
2025-07-25 10:43:51,861 - DEBUG - stack ['$const46.10.0']
2025-07-25 10:43:51,861 - DEBUG - end state. edges=[]
2025-07-25 10:43:51,861 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:43:51,861 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-25 10:43:51,861 - DEBUG - defmap: {}
2025-07-25 10:43:51,861 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:43:51,862 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:43:51,862 - DEBUG - keep phismap: {}
2025-07-25 10:43:51,862 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 10:43:51,862 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:43:51,862 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10.0'}), (48, {'retval': '$const46.10.0', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:43:51,862 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000024AF00C62A0>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10.0 = const(NoneType, None)    ['$const46.10.0']
    $48return_value.11 = cast(value=$const46.10.0) ['$48return_value.11', '$const46.10.0']
    return $48return_value.11                ['$48return_value.11']

2025-07-25 10:43:51,864 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 10:43:51,864 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024AF0125950>
2025-07-25 10:43:51,864 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:51,864 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:51,865 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:51,865 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:51,865 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:51,865 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:51,865 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:51,865 - DEBUG - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000024AF00C62A0>))
2025-07-25 10:43:51,865 - DEBUG - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,865 - DEBUG - on stmt: $const46.10.0 = const(NoneType, None)
2025-07-25 10:43:51,866 - DEBUG - on stmt: $48return_value.11 = cast(value=$const46.10.0)
2025-07-25 10:43:51,866 - DEBUG - on stmt: return $48return_value.11
2025-07-25 10:43:51,866 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x0000024AF0125050>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x0000024AF0125510>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000024AF0124150>,
                                  0)],
             '$const46.10.0': [(<numba.core.ir.Assign object at 0x0000024AF01252D0>,
                                0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000024AF011BB50>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000024AF011BA50>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000024AF011BC50>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x0000024AF011BD90>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x0000024AF011B950>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x0000024AF011B810>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000024AF011BE90>, 0)]})
2025-07-25 10:43:51,867 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x0000024AF0125950>
2025-07-25 10:43:51,870 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
2025-07-25 10:43:51,874 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:43:51,874 - DEBUG - stack: []
2025-07-25 10:43:51,874 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:43:51,874 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-07-25 10:43:51,874 - DEBUG - stack []
2025-07-25 10:43:51,875 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
2025-07-25 10:43:51,875 - DEBUG - stack []
2025-07-25 10:43:51,875 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
2025-07-25 10:43:51,875 - DEBUG - stack []
2025-07-25 10:43:51,875 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
2025-07-25 10:43:51,875 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 10:43:51,875 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
2025-07-25 10:43:51,876 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
2025-07-25 10:43:51,876 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
2025-07-25 10:43:51,876 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
2025-07-25 10:43:51,876 - DEBUG - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
2025-07-25 10:43:51,876 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 10:43:51,876 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=9)
2025-07-25 10:43:51,876 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 10:43:51,876 - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
2025-07-25 10:43:51,877 - DEBUG - stack ['$28call.5']
2025-07-25 10:43:51,877 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
2025-07-25 10:43:51,877 - DEBUG - stack []
2025-07-25 10:43:51,877 - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
2025-07-25 10:43:51,877 - DEBUG - stack ['$const40.6.1']
2025-07-25 10:43:51,877 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
2025-07-25 10:43:51,877 - DEBUG - stack []
2025-07-25 10:43:51,877 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
2025-07-25 10:43:51,877 - DEBUG - stack ['$const44.7.2']
2025-07-25 10:43:51,877 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
2025-07-25 10:43:51,878 - DEBUG - stack []
2025-07-25 10:43:51,878 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
2025-07-25 10:43:51,878 - DEBUG - stack ['$const48.8.1']
2025-07-25 10:43:51,878 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
2025-07-25 10:43:51,878 - DEBUG - stack []
2025-07-25 10:43:51,878 - DEBUG - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
2025-07-25 10:43:51,878 - DEBUG - stack ['$const52.9.1']
2025-07-25 10:43:51,878 - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
2025-07-25 10:43:51,878 - DEBUG - stack []
2025-07-25 10:43:51,879 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
2025-07-25 10:43:51,879 - DEBUG - stack ['$const56.10.2']
2025-07-25 10:43:51,879 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
2025-07-25 10:43:51,879 - DEBUG - stack []
2025-07-25 10:43:51,879 - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
2025-07-25 10:43:51,879 - DEBUG - stack ['$const60.11.1']
2025-07-25 10:43:51,879 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
2025-07-25 10:43:51,880 - DEBUG - stack []
2025-07-25 10:43:51,880 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
2025-07-25 10:43:51,880 - DEBUG - stack ['$const64.12.1']
2025-07-25 10:43:51,880 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
2025-07-25 10:43:51,880 - DEBUG - stack []
2025-07-25 10:43:51,880 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
2025-07-25 10:43:51,880 - DEBUG - stack ['$interp_win68.13']
2025-07-25 10:43:51,880 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
2025-07-25 10:43:51,881 - DEBUG - stack ['$70load_attr.14']
2025-07-25 10:43:51,881 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-07-25 10:43:51,881 - DEBUG - stack ['$70load_attr.14', '$const80.15.2']
2025-07-25 10:43:51,881 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
2025-07-25 10:43:51,881 - DEBUG - stack ['$82binary_subscr.16']
2025-07-25 10:43:51,881 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
2025-07-25 10:43:51,881 - DEBUG - stack []
2025-07-25 10:43:51,881 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
2025-07-25 10:43:51,882 - DEBUG - stack ['$x94.17']
2025-07-25 10:43:51,882 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
2025-07-25 10:43:51,882 - DEBUG - stack ['$96load_attr.18']
2025-07-25 10:43:51,882 - DEBUG - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-07-25 10:43:51,882 - DEBUG - stack ['$96load_attr.18', '$const106.19.2']
2025-07-25 10:43:51,882 - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
2025-07-25 10:43:51,882 - DEBUG - stack ['$108binary_subscr.20']
2025-07-25 10:43:51,882 - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
2025-07-25 10:43:51,882 - DEBUG - stack []
2025-07-25 10:43:51,882 - DEBUG - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
2025-07-25 10:43:51,882 - DEBUG - stack ['$t_out120.21']
2025-07-25 10:43:51,883 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
2025-07-25 10:43:51,883 - DEBUG - stack ['$122load_attr.22']
2025-07-25 10:43:51,883 - DEBUG - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-07-25 10:43:51,883 - DEBUG - stack ['$122load_attr.22', '$const132.23.2']
2025-07-25 10:43:51,883 - DEBUG - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
2025-07-25 10:43:51,883 - DEBUG - stack ['$134binary_subscr.24']
2025-07-25 10:43:51,883 - DEBUG - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
2025-07-25 10:43:51,883 - DEBUG - stack []
2025-07-25 10:43:51,883 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
2025-07-25 10:43:51,884 - DEBUG - stack ['$null$146.26', '$146load_global.25']
2025-07-25 10:43:51,884 - DEBUG - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
2025-07-25 10:43:51,884 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 10:43:51,884 - DEBUG - dispatch pc=164, inst=CALL(arg=1, lineno=23)
2025-07-25 10:43:51,884 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 10:43:51,884 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
2025-07-25 10:43:51,884 - DEBUG - stack ['$164call.28']
2025-07-25 10:43:51,884 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
2025-07-25 10:43:51,884 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2025-07-25 10:43:51,884 - DEBUG - stack: ['$phi176.0']
2025-07-25 10:43:51,885 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2025-07-25 10:43:51,885 - DEBUG - dispatch pc=176, inst=NOP(arg=1, lineno=23)
2025-07-25 10:43:51,885 - DEBUG - stack ['$phi176.0']
2025-07-25 10:43:51,885 - DEBUG - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
2025-07-25 10:43:51,885 - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=1)])
2025-07-25 10:43:51,885 - DEBUG - stack: ['$phi178.0']
2025-07-25 10:43:51,885 - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=1)
2025-07-25 10:43:51,885 - DEBUG - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
2025-07-25 10:43:51,885 - DEBUG - stack ['$phi178.0']
2025-07-25 10:43:51,885 - DEBUG - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
2025-07-25 10:43:51,886 - DEBUG - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
2025-07-25 10:43:51,886 - DEBUG - stack: []
2025-07-25 10:43:51,886 - DEBUG - state.pc_initial: State(pc_initial=782 nstack_initial=0)
2025-07-25 10:43:51,886 - DEBUG - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
2025-07-25 10:43:51,886 - DEBUG - stack []
2025-07-25 10:43:51,886 - DEBUG - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
2025-07-25 10:43:51,886 - DEBUG - stack ['$const782.0.0']
2025-07-25 10:43:51,886 - DEBUG - end state. edges=[]
2025-07-25 10:43:51,886 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2025-07-25 10:43:51,887 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2025-07-25 10:43:51,887 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2025-07-25 10:43:51,887 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
2025-07-25 10:43:51,887 - DEBUG - stack ['$phi180.0', '$phi180.1']
2025-07-25 10:43:51,887 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
2025-07-25 10:43:51,888 - DEBUG - stack ['$phi180.0']
2025-07-25 10:43:51,888 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
2025-07-25 10:43:51,888 - DEBUG - stack ['$phi180.0', '$t_out182.2']
2025-07-25 10:43:51,888 - DEBUG - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-07-25 10:43:51,888 - DEBUG - stack ['$phi180.0', '$t_out182.2', '$t184.3']
2025-07-25 10:43:51,888 - DEBUG - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
2025-07-25 10:43:51,888 - DEBUG - stack ['$phi180.0', '$186binary_subscr.4']
2025-07-25 10:43:51,889 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
2025-07-25 10:43:51,889 - DEBUG - stack ['$phi180.0']
2025-07-25 10:43:51,889 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
2025-07-25 10:43:51,889 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
2025-07-25 10:43:51,889 - DEBUG - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
2025-07-25 10:43:51,889 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 10:43:51,889 - DEBUG - dispatch pc=216, inst=CALL(arg=1, lineno=27)
2025-07-25 10:43:51,889 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 10:43:51,889 - DEBUG - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
2025-07-25 10:43:51,889 - DEBUG - stack ['$phi180.0', '$216call.8']
2025-07-25 10:43:51,889 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
2025-07-25 10:43:51,889 - DEBUG - stack ['$phi180.0']
2025-07-25 10:43:51,889 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
2025-07-25 10:43:51,890 - DEBUG - stack ['$phi180.0', '$scale228.9']
2025-07-25 10:43:51,890 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
2025-07-25 10:43:51,890 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
2025-07-25 10:43:51,890 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
2025-07-25 10:43:51,890 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
2025-07-25 10:43:51,890 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
2025-07-25 10:43:51,890 - DEBUG - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
2025-07-25 10:43:51,890 - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
2025-07-25 10:43:51,890 - DEBUG - stack ['$phi180.0', '$binop_mul238.13']
2025-07-25 10:43:51,890 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
2025-07-25 10:43:51,890 - DEBUG - stack ['$phi180.0']
2025-07-25 10:43:51,890 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
2025-07-25 10:43:51,890 - DEBUG - stack ['$phi180.0', '$frac244.14']
2025-07-25 10:43:51,890 - DEBUG - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
2025-07-25 10:43:51,891 - DEBUG - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
2025-07-25 10:43:51,891 - DEBUG - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
2025-07-25 10:43:51,891 - DEBUG - stack ['$phi180.0', '$binop_mul248.16']
2025-07-25 10:43:51,891 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
2025-07-25 10:43:51,891 - DEBUG - stack ['$phi180.0']
2025-07-25 10:43:51,891 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
2025-07-25 10:43:51,891 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
2025-07-25 10:43:51,891 - DEBUG - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
2025-07-25 10:43:51,891 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 10:43:51,891 - DEBUG - dispatch pc=272, inst=CALL(arg=1, lineno=34)
2025-07-25 10:43:51,892 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 10:43:51,892 - DEBUG - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
2025-07-25 10:43:51,892 - DEBUG - stack ['$phi180.0', '$272call.20']
2025-07-25 10:43:51,892 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
2025-07-25 10:43:51,892 - DEBUG - stack ['$phi180.0']
2025-07-25 10:43:51,892 - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
2025-07-25 10:43:51,892 - DEBUG - stack ['$phi180.0', '$index_frac284.21']
2025-07-25 10:43:51,893 - DEBUG - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
2025-07-25 10:43:51,893 - DEBUG - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
2025-07-25 10:43:51,893 - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
2025-07-25 10:43:51,893 - DEBUG - stack ['$phi180.0', '$binop_sub288.23']
2025-07-25 10:43:51,893 - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
2025-07-25 10:43:51,893 - DEBUG - stack ['$phi180.0']
2025-07-25 10:43:51,893 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
2025-07-25 10:43:51,893 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
2025-07-25 10:43:51,894 - DEBUG - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
2025-07-25 10:43:51,894 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
2025-07-25 10:43:51,894 - DEBUG - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
2025-07-25 10:43:51,894 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27.3']
2025-07-25 10:43:51,894 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
2025-07-25 10:43:51,894 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
2025-07-25 10:43:51,894 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
2025-07-25 10:43:51,894 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
2025-07-25 10:43:51,894 - DEBUG - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
2025-07-25 10:43:51,895 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
2025-07-25 10:43:51,895 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
2025-07-25 10:43:51,895 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
2025-07-25 10:43:51,895 - DEBUG - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
2025-07-25 10:43:51,895 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
2025-07-25 10:43:51,895 - DEBUG - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
2025-07-25 10:43:51,895 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 10:43:51,895 - DEBUG - dispatch pc=332, inst=CALL(arg=2, lineno=40)
2025-07-25 10:43:51,896 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 10:43:51,896 - DEBUG - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
2025-07-25 10:43:51,896 - DEBUG - stack ['$phi180.0', '$332call.34']
2025-07-25 10:43:51,896 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
2025-07-25 10:43:51,896 - DEBUG - stack ['$phi180.0']
2025-07-25 10:43:51,896 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
2025-07-25 10:43:51,897 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
2025-07-25 10:43:51,897 - DEBUG - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
2025-07-25 10:43:51,897 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 10:43:51,897 - DEBUG - dispatch pc=362, inst=CALL(arg=1, lineno=41)
2025-07-25 10:43:51,897 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 10:43:51,897 - DEBUG - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
2025-07-25 10:43:51,897 - DEBUG - stack ['$phi180.0', '$362call.38']
2025-07-25 10:43:51,897 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
2025-07-25 10:43:51,898 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2)])
2025-07-25 10:43:51,898 - DEBUG - stack: ['$phi374.0', '$phi374.1']
2025-07-25 10:43:51,898 - DEBUG - state.pc_initial: State(pc_initial=374 nstack_initial=2)
2025-07-25 10:43:51,898 - DEBUG - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
2025-07-25 10:43:51,898 - DEBUG - stack ['$phi374.0', '$phi374.1']
2025-07-25 10:43:51,898 - DEBUG - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
2025-07-25 10:43:51,898 - DEBUG - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
2025-07-25 10:43:51,898 - DEBUG - stack: ['$phi500.0']
2025-07-25 10:43:51,898 - DEBUG - state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-07-25 10:43:51,898 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
2025-07-25 10:43:51,898 - DEBUG - stack ['$phi500.0']
2025-07-25 10:43:51,899 - DEBUG - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
2025-07-25 10:43:51,899 - DEBUG - stack ['$phi500.0', '$scale500.1']
2025-07-25 10:43:51,899 - DEBUG - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
2025-07-25 10:43:51,899 - DEBUG - stack ['$phi500.0', '$scale500.1', '$frac502.2']
2025-07-25 10:43:51,899 - DEBUG - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
2025-07-25 10:43:51,899 - DEBUG - stack ['$phi500.0', '$binop_sub504.3']
2025-07-25 10:43:51,899 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
2025-07-25 10:43:51,899 - DEBUG - stack ['$phi500.0']
2025-07-25 10:43:51,899 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
2025-07-25 10:43:51,899 - DEBUG - stack ['$phi500.0', '$frac510.4']
2025-07-25 10:43:51,899 - DEBUG - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
2025-07-25 10:43:51,899 - DEBUG - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
2025-07-25 10:43:51,899 - DEBUG - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
2025-07-25 10:43:51,899 - DEBUG - stack ['$phi500.0', '$binop_mul514.6']
2025-07-25 10:43:51,900 - DEBUG - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
2025-07-25 10:43:51,900 - DEBUG - stack ['$phi500.0']
2025-07-25 10:43:51,900 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
2025-07-25 10:43:51,900 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
2025-07-25 10:43:51,900 - DEBUG - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
2025-07-25 10:43:51,900 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 10:43:51,900 - DEBUG - dispatch pc=538, inst=CALL(arg=1, lineno=54)
2025-07-25 10:43:51,900 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 10:43:51,900 - DEBUG - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
2025-07-25 10:43:51,901 - DEBUG - stack ['$phi500.0', '$538call.10']
2025-07-25 10:43:51,901 - DEBUG - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
2025-07-25 10:43:51,901 - DEBUG - stack ['$phi500.0']
2025-07-25 10:43:51,901 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
2025-07-25 10:43:51,901 - DEBUG - stack ['$phi500.0', '$index_frac550.11']
2025-07-25 10:43:51,901 - DEBUG - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
2025-07-25 10:43:51,901 - DEBUG - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
2025-07-25 10:43:51,901 - DEBUG - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
2025-07-25 10:43:51,901 - DEBUG - stack ['$phi500.0', '$binop_sub554.13']
2025-07-25 10:43:51,901 - DEBUG - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
2025-07-25 10:43:51,901 - DEBUG - stack ['$phi500.0']
2025-07-25 10:43:51,901 - DEBUG - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
2025-07-25 10:43:51,901 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
2025-07-25 10:43:51,902 - DEBUG - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
2025-07-25 10:43:51,902 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
2025-07-25 10:43:51,902 - DEBUG - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:43:51,902 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
2025-07-25 10:43:51,902 - DEBUG - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
2025-07-25 10:43:51,902 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
2025-07-25 10:43:51,902 - DEBUG - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:43:51,902 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19.3']
2025-07-25 10:43:51,902 - DEBUG - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
2025-07-25 10:43:51,902 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
2025-07-25 10:43:51,902 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
2025-07-25 10:43:51,902 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
2025-07-25 10:43:51,902 - DEBUG - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 10:43:51,902 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
2025-07-25 10:43:51,903 - DEBUG - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
2025-07-25 10:43:51,903 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
2025-07-25 10:43:51,903 - DEBUG - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
2025-07-25 10:43:51,903 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
2025-07-25 10:43:51,903 - DEBUG - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
2025-07-25 10:43:51,903 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 10:43:51,903 - DEBUG - dispatch pc=604, inst=CALL(arg=2, lineno=60)
2025-07-25 10:43:51,903 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 10:43:51,903 - DEBUG - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
2025-07-25 10:43:51,903 - DEBUG - stack ['$phi500.0', '$604call.26']
2025-07-25 10:43:51,903 - DEBUG - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
2025-07-25 10:43:51,904 - DEBUG - stack ['$phi500.0']
2025-07-25 10:43:51,904 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
2025-07-25 10:43:51,904 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
2025-07-25 10:43:51,904 - DEBUG - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
2025-07-25 10:43:51,904 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 10:43:51,904 - DEBUG - dispatch pc=634, inst=CALL(arg=1, lineno=61)
2025-07-25 10:43:51,904 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 10:43:51,904 - DEBUG - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
2025-07-25 10:43:51,904 - DEBUG - stack ['$phi500.0', '$634call.30']
2025-07-25 10:43:51,905 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
2025-07-25 10:43:51,905 - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:43:51,905 - DEBUG - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 10:43:51,905 - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=3)
2025-07-25 10:43:51,905 - DEBUG - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
2025-07-25 10:43:51,905 - DEBUG - stack ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 10:43:51,905 - DEBUG - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
2025-07-25 10:43:51,905 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:43:51,905 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
2025-07-25 10:43:51,905 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
2025-07-25 10:43:51,905 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
2025-07-25 10:43:51,905 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
2025-07-25 10:43:51,906 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
2025-07-25 10:43:51,906 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
2025-07-25 10:43:51,906 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
2025-07-25 10:43:51,906 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
2025-07-25 10:43:51,906 - DEBUG - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 10:43:51,906 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
2025-07-25 10:43:51,906 - DEBUG - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-07-25 10:43:51,906 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
2025-07-25 10:43:51,906 - DEBUG - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
2025-07-25 10:43:51,906 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
2025-07-25 10:43:51,907 - DEBUG - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
2025-07-25 10:43:51,907 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
2025-07-25 10:43:51,907 - DEBUG - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
2025-07-25 10:43:51,907 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
2025-07-25 10:43:51,907 - DEBUG - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
2025-07-25 10:43:51,907 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
2025-07-25 10:43:51,907 - DEBUG - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
2025-07-25 10:43:51,907 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
2025-07-25 10:43:51,907 - DEBUG - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 10:43:51,907 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
2025-07-25 10:43:51,907 - DEBUG - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
2025-07-25 10:43:51,907 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
2025-07-25 10:43:51,908 - DEBUG - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-07-25 10:43:51,908 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
2025-07-25 10:43:51,908 - DEBUG - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 10:43:51,908 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
2025-07-25 10:43:51,908 - DEBUG - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 10:43:51,908 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
2025-07-25 10:43:51,908 - DEBUG - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
2025-07-25 10:43:51,908 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
2025-07-25 10:43:51,908 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
2025-07-25 10:43:51,909 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:43:51,909 - DEBUG - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
2025-07-25 10:43:51,909 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20']
2025-07-25 10:43:51,909 - DEBUG - dispatch pc=446, inst=COPY(arg=2, lineno=47)
2025-07-25 10:43:51,909 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
2025-07-25 10:43:51,909 - DEBUG - dispatch pc=448, inst=COPY(arg=2, lineno=47)
2025-07-25 10:43:51,909 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
2025-07-25 10:43:51,909 - DEBUG - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 10:43:51,909 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
2025-07-25 10:43:51,909 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
2025-07-25 10:43:51,909 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
2025-07-25 10:43:51,909 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
2025-07-25 10:43:51,909 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
2025-07-25 10:43:51,910 - DEBUG - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
2025-07-25 10:43:51,910 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
2025-07-25 10:43:51,910 - DEBUG - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
2025-07-25 10:43:51,910 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
2025-07-25 10:43:51,910 - DEBUG - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
2025-07-25 10:43:51,910 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
2025-07-25 10:43:51,910 - DEBUG - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 10:43:51,910 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
2025-07-25 10:43:51,910 - DEBUG - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
2025-07-25 10:43:51,910 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
2025-07-25 10:43:51,911 - DEBUG - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
2025-07-25 10:43:51,911 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
2025-07-25 10:43:51,911 - DEBUG - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
2025-07-25 10:43:51,911 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
2025-07-25 10:43:51,911 - DEBUG - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
2025-07-25 10:43:51,911 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
2025-07-25 10:43:51,911 - DEBUG - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-07-25 10:43:51,911 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
2025-07-25 10:43:51,911 - DEBUG - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
2025-07-25 10:43:51,911 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 10:43:51,911 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
2025-07-25 10:43:51,911 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
2025-07-25 10:43:51,912 - DEBUG - stack: ['$phi646.0', '$phi646.1']
2025-07-25 10:43:51,912 - DEBUG - state.pc_initial: State(pc_initial=646 nstack_initial=2)
2025-07-25 10:43:51,912 - DEBUG - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
2025-07-25 10:43:51,912 - DEBUG - stack ['$phi646.0', '$phi646.1']
2025-07-25 10:43:51,912 - DEBUG - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
2025-07-25 10:43:51,912 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 10:43:51,912 - DEBUG - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 10:43:51,912 - DEBUG - stack: ['$phi778.0']
2025-07-25 10:43:51,912 - DEBUG - state.pc_initial: State(pc_initial=778 nstack_initial=1)
2025-07-25 10:43:51,912 - DEBUG - dispatch pc=778, inst=NOP(arg=1, lineno=61)
2025-07-25 10:43:51,912 - DEBUG - stack ['$phi778.0']
2025-07-25 10:43:51,913 - DEBUG - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
2025-07-25 10:43:51,913 - DEBUG - stack ['$phi778.0']
2025-07-25 10:43:51,913 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
2025-07-25 10:43:51,913 - DEBUG - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
2025-07-25 10:43:51,913 - DEBUG - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 10:43:51,913 - DEBUG - state.pc_initial: State(pc_initial=648 nstack_initial=3)
2025-07-25 10:43:51,913 - DEBUG - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
2025-07-25 10:43:51,913 - DEBUG - stack ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 10:43:51,913 - DEBUG - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
2025-07-25 10:43:51,913 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:43:51,913 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
2025-07-25 10:43:51,913 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
2025-07-25 10:43:51,913 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
2025-07-25 10:43:51,914 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
2025-07-25 10:43:51,914 - DEBUG - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
2025-07-25 10:43:51,914 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
2025-07-25 10:43:51,914 - DEBUG - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
2025-07-25 10:43:51,914 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
2025-07-25 10:43:51,914 - DEBUG - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 10:43:51,914 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
2025-07-25 10:43:51,914 - DEBUG - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-07-25 10:43:51,914 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
2025-07-25 10:43:51,914 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
2025-07-25 10:43:51,914 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
2025-07-25 10:43:51,914 - DEBUG - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
2025-07-25 10:43:51,914 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
2025-07-25 10:43:51,914 - DEBUG - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
2025-07-25 10:43:51,915 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
2025-07-25 10:43:51,915 - DEBUG - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
2025-07-25 10:43:51,915 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
2025-07-25 10:43:51,915 - DEBUG - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
2025-07-25 10:43:51,915 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
2025-07-25 10:43:51,915 - DEBUG - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 10:43:51,915 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
2025-07-25 10:43:51,915 - DEBUG - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
2025-07-25 10:43:51,915 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
2025-07-25 10:43:51,916 - DEBUG - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-07-25 10:43:51,916 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
2025-07-25 10:43:51,916 - DEBUG - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 10:43:51,916 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
2025-07-25 10:43:51,916 - DEBUG - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 10:43:51,916 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
2025-07-25 10:43:51,916 - DEBUG - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
2025-07-25 10:43:51,916 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
2025-07-25 10:43:51,916 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
2025-07-25 10:43:51,916 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:43:51,917 - DEBUG - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
2025-07-25 10:43:51,917 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20']
2025-07-25 10:43:51,917 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=66)
2025-07-25 10:43:51,917 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
2025-07-25 10:43:51,917 - DEBUG - dispatch pc=720, inst=COPY(arg=2, lineno=66)
2025-07-25 10:43:51,917 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
2025-07-25 10:43:51,917 - DEBUG - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 10:43:51,917 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
2025-07-25 10:43:51,917 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
2025-07-25 10:43:51,917 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
2025-07-25 10:43:51,917 - DEBUG - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
2025-07-25 10:43:51,917 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
2025-07-25 10:43:51,918 - DEBUG - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
2025-07-25 10:43:51,918 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
2025-07-25 10:43:51,918 - DEBUG - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
2025-07-25 10:43:51,918 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
2025-07-25 10:43:51,918 - DEBUG - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 10:43:51,918 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
2025-07-25 10:43:51,918 - DEBUG - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
2025-07-25 10:43:51,918 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
2025-07-25 10:43:51,918 - DEBUG - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 10:43:51,918 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28.3']
2025-07-25 10:43:51,918 - DEBUG - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 10:43:51,918 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
2025-07-25 10:43:51,919 - DEBUG - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
2025-07-25 10:43:51,919 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
2025-07-25 10:43:51,919 - DEBUG - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
2025-07-25 10:43:51,919 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
2025-07-25 10:43:51,919 - DEBUG - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
2025-07-25 10:43:51,919 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
2025-07-25 10:43:51,919 - DEBUG - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
2025-07-25 10:43:51,919 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
2025-07-25 10:43:51,919 - DEBUG - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-07-25 10:43:51,919 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
2025-07-25 10:43:51,920 - DEBUG - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
2025-07-25 10:43:51,920 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 10:43:51,920 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
2025-07-25 10:43:51,920 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:43:51,920 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2)])
2025-07-25 10:43:51,920 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:43:51,920 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
2025-07-25 10:43:51,920 - DEBUG - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
2025-07-25 10:43:51,921 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
2025-07-25 10:43:51,922 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:43:51,923 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:43:51,924 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 10:43:51,925 - DEBUG - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
2025-07-25 10:43:51,926 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
2025-07-25 10:43:51,926 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:43:51,926 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6.1'}), (42, {'value': '$const40.6.1'}), (44, {'res': '$const44.7.2'}), (46, {'value': '$const44.7.2'}), (48, {'res': '$const48.8.1'}), (50, {'value': '$const48.8.1'}), (52, {'res': '$const52.9.1'}), (54, {'value': '$const52.9.1'}), (56, {'res': '$const56.10.2'}), (58, {'value': '$const56.10.2'}), (60, {'res': '$const60.11.1'}), (62, {'value': '$const60.11.1'}), (64, {'res': '$const64.12.1'}), (66, {'value': '$const64.12.1'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15.2'}), (82, {'index': '$const80.15.2', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19.2'}), (108, {'index': '$const106.19.2', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23.2'}), (134, {'index': '$const132.23.2', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
2025-07-25 10:43:51,927 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
2025-07-25 10:43:51,927 - DEBUG - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
2025-07-25 10:43:51,927 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27.3'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27.3', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
2025-07-25 10:43:51,928 - DEBUG - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
2025-07-25 10:43:51,928 - DEBUG - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
2025-07-25 10:43:51,928 - DEBUG - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19.3'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19.3', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
2025-07-25 10:43:51,929 - DEBUG - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
2025-07-25 10:43:51,929 - DEBUG - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28.3'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28.3', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
2025-07-25 10:43:51,930 - DEBUG - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
2025-07-25 10:43:51,930 - DEBUG - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0.0'}), (784, {'retval': '$const782.0.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:43:51,932 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15.2 = const(int, 0)            ['$const80.15.2']
    nwin = getitem(value=$70load_attr.14, index=$const80.15.2, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15.2', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19.2 = const(int, 0)           ['$const106.19.2']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19.2, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19.2', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23.2 = const(int, 0)           ['$const132.23.2']
    n_out = getitem(value=$122load_attr.22, index=$const132.23.2, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23.2', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27.3 = const(int, 1)           ['$const308.27.3']
    $binop_add310.28 = n + $const308.27.3    ['$binop_add310.28', '$const308.27.3', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19.3 = const(int, 1)           ['$const580.19.3']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19.3 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19.3']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28.3 = const(int, 1)           ['$const744.28.3']
    $binop_add746.29 = $binop_add740.27 + $const744.28.3 ['$binop_add740.27', '$binop_add746.29', '$const744.28.3']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0.0 = const(NoneType, None)    ['$const782.0.0']
    $784return_value.1 = cast(value=$const782.0.0) ['$784return_value.1', '$const782.0.0']
    return $784return_value.1                ['$784return_value.1']

2025-07-25 10:43:51,950 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 10:43:51,950 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024AF0155250>
2025-07-25 10:43:51,950 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:51,950 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:51,950 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:51,950 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:51,950 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:51,951 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:51,951 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:51,951 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:51,951 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:51,951 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,951 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:51,951 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:51,951 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:51,951 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:51,952 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:51,952 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:51,952 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:51,952 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:51,952 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:51,952 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:51,952 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:51,952 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:51,952 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:51,952 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:51,952 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:51,952 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:51,952 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:51,952 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,953 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:51,953 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:51,953 - DEBUG - on stmt: jump 176
2025-07-25 10:43:51,953 - DEBUG - ==== SSA block analysis pass on 176
2025-07-25 10:43:51,953 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024AF0155250>
2025-07-25 10:43:51,953 - DEBUG - on stmt: jump 178
2025-07-25 10:43:51,953 - DEBUG - ==== SSA block analysis pass on 178
2025-07-25 10:43:51,953 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024AF0155250>
2025-07-25 10:43:51,953 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:51,953 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:51,953 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:51,953 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:51,953 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:51,954 - DEBUG - ==== SSA block analysis pass on 180
2025-07-25 10:43:51,954 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024AF0155250>
2025-07-25 10:43:51,954 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:51,954 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:51,954 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:51,954 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,954 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:43:51,954 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:43:51,954 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:51,954 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:51,955 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,955 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:51,955 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:51,955 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:51,955 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:43:51,955 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:43:51,955 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:51,956 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,956 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:51,956 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,956 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:51,956 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:51,956 - DEBUG - on stmt: jump 374
2025-07-25 10:43:51,956 - DEBUG - ==== SSA block analysis pass on 374
2025-07-25 10:43:51,956 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024AF0155250>
2025-07-25 10:43:51,957 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:51,957 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:51,957 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:51,957 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:51,957 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:51,957 - DEBUG - ==== SSA block analysis pass on 376
2025-07-25 10:43:51,957 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024AF0155250>
2025-07-25 10:43:51,958 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:51,958 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:51,958 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:43:51,958 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:51,958 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:51,958 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:43:51,958 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:51,958 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:51,959 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:51,959 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:51,959 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:43:51,959 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:51,959 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:51,959 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:51,959 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:51,959 - DEBUG - on stmt: jump 374
2025-07-25 10:43:51,960 - DEBUG - ==== SSA block analysis pass on 500
2025-07-25 10:43:51,960 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024AF0155250>
2025-07-25 10:43:51,960 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:43:51,960 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:43:51,960 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:51,960 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:51,960 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,960 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:51,960 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:51,960 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:43:51,960 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:51,960 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:51,961 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:43:51,961 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:51,961 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,961 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:51,961 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,961 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:51,961 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:51,961 - DEBUG - on stmt: jump 646
2025-07-25 10:43:51,961 - DEBUG - ==== SSA block analysis pass on 646
2025-07-25 10:43:51,961 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024AF0155250>
2025-07-25 10:43:51,962 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:51,962 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:51,962 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:51,962 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:51,962 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:51,962 - DEBUG - ==== SSA block analysis pass on 648
2025-07-25 10:43:51,962 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024AF0155250>
2025-07-25 10:43:51,962 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:51,962 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:51,962 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:43:51,962 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:51,963 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:51,963 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:43:51,963 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:51,963 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:51,963 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:51,963 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:51,963 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:43:51,963 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:51,963 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:51,963 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:51,964 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:51,964 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:51,964 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:51,964 - DEBUG - on stmt: jump 646
2025-07-25 10:43:51,964 - DEBUG - ==== SSA block analysis pass on 778
2025-07-25 10:43:51,964 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024AF0155250>
2025-07-25 10:43:51,964 - DEBUG - on stmt: jump 176
2025-07-25 10:43:51,964 - DEBUG - ==== SSA block analysis pass on 782
2025-07-25 10:43:51,964 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024AF0155250>
2025-07-25 10:43:51,964 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:51,964 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:51,964 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:51,964 - DEBUG - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x0000024AF016FF10>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x0000024AF0174710>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x0000024AF0174BD0>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x0000024AF0174ED0>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x0000024AF0174910>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x0000024AF0175090>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x0000024AF01751D0>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x0000024AF0175D50>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x0000024AF01773D0>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x0000024AF0178150>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x0000024AF0179750>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x0000024AF0179BD0>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x0000024AF0179DD0>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x0000024AF0175810>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x0000024AF01766D0>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x0000024AF0177250>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000024AF017A950>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000024AF017B810>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000024AF0414410>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000024AF0414ED0>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000024AF00F5B50>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x0000024AF0415C90>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x0000024AF0416950>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x0000024AF0418150>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x0000024AF0418510>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x0000024AF0418750>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x0000024AF04157D0>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x0000024AF04164D0>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x0000024AF0417610>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000024AF0419690>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000024AF041A590>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x0000024AF016EB50>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000024AF041B150>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000024AF041BFD0>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x0000024AF041ADD0>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x0000024AF016F510>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x0000024AF01786D0>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x0000024AF017A750>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x0000024AF017B5D0>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x0000024AF0419450>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x0000024AF041A350>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x0000024AF041B9D0>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x0000024AF041BDD0>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x0000024AF01790D0>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x0000024AF0417C50>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x0000024AF0415310>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x0000024AF041C510>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x0000024AF00F4B10>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x0000024AF017A510>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x0000024AF017B350>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x0000024AF017BB10>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x0000024AF0415110>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x0000024AF0419250>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x0000024AF041A110>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x0000024AF041A8D0>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x0000024AF041C2D0>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x0000024AF0176910>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x0000024AF0178C90>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x0000024AF0414D10>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x0000024AF0414090>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x0000024AF0416E90>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x0000024AF04172D0>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x0000024AF0417850>,
                                   500)],
             '$const106.19.2': [(<numba.core.ir.Assign object at 0x0000024AF016F7D0>,
                                 0)],
             '$const132.23.2': [(<numba.core.ir.Assign object at 0x0000024AF0174210>,
                                 0)],
             '$const308.27.3': [(<numba.core.ir.Assign object at 0x0000024AF0178490>,
                                 180)],
             '$const580.19.3': [(<numba.core.ir.Assign object at 0x0000024AF0417090>,
                                 500)],
             '$const744.28.3': [(<numba.core.ir.Assign object at 0x0000024AF041BB90>,
                                 648)],
             '$const782.0.0': [(<numba.core.ir.Assign object at 0x0000024AF0419910>,
                                782)],
             '$const80.15.2': [(<numba.core.ir.Assign object at 0x0000024AF016EDD0>,
                                0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x0000024AF0133C50>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x0000024AF0126D10>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x0000024AF016DA90>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x0000024AF0177910>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x0000024AF017AB90>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x0000024AF04151D0>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x0000024AF016E350>, 0),
                     (<numba.core.ir.Assign object at 0x0000024AF0177E50>, 180),
                     (<numba.core.ir.Assign object at 0x0000024AF04166D0>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x0000024AF016D9D0>, 0),
                      (<numba.core.ir.Assign object at 0x0000024AF0176B50>,
                       180),
                      (<numba.core.ir.Assign object at 0x0000024AF017BE90>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x0000024AF0178E50>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x0000024AF0179390>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x0000024AF016DD10>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000024AF0177150>,
                             180),
                            (<numba.core.ir.Assign object at 0x0000024AF0415A10>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x0000024AF0124990>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000024AF011BED0>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000024AF011B1D0>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x0000024AF0418910>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x0000024AF0417E50>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x0000024AF016D850>, 0),
                   (<numba.core.ir.Assign object at 0x0000024AF0176190>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x0000024AF0157BD0>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x0000024AF0157350>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000024AF01562D0>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x0000024AF003A490>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x0000024AF016E010>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000024AF0177750>,
                         180),
                        (<numba.core.ir.Assign object at 0x0000024AF04160D0>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x0000024AF0156650>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x0000024AF0175510>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x0000024AF0158E10>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x0000024AF0168AD0>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000024AF0175A10>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x0000024AF016E690>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000024AF017BD90>,
                         376),
                        (<numba.core.ir.Assign object at 0x0000024AF041AB10>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x0000024AEFD37C90>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000024AF0156410>, 0)]})
2025-07-25 10:43:51,970 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x0000024AEFD31E90>
2025-07-25 10:43:51,970 - DEBUG - Fix SSA violator on var time_register
2025-07-25 10:43:51,971 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:51,971 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF00F6FD0>
2025-07-25 10:43:51,971 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:51,971 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:51,971 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:51,971 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:51,971 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:51,971 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:51,972 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:51,972 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:51,972 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:51,972 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,972 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:51,972 - DEBUG - first assign: time_register
2025-07-25 10:43:51,972 - DEBUG - replaced with: time_register = const(float, 0.0)
2025-07-25 10:43:51,972 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:51,972 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:51,972 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:51,972 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:51,972 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:51,973 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:51,973 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:51,973 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:51,973 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:51,973 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:51,973 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:51,973 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:51,973 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:51,974 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:51,974 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:51,974 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:51,974 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,974 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:51,974 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:51,974 - DEBUG - on stmt: jump 176
2025-07-25 10:43:51,974 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:51,974 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF00F6FD0>
2025-07-25 10:43:51,974 - DEBUG - on stmt: jump 178
2025-07-25 10:43:51,974 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:51,975 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF00F6FD0>
2025-07-25 10:43:51,975 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:51,975 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:51,975 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:51,975 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:51,975 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:51,975 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:51,975 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF00F6FD0>
2025-07-25 10:43:51,975 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:51,975 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:51,976 - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:51,976 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:51,976 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,976 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:43:51,976 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:43:51,976 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:51,976 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:51,976 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,976 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:51,977 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:51,977 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:51,977 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:43:51,977 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:43:51,977 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:51,977 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,977 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:51,977 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,978 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:51,978 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:51,978 - DEBUG - on stmt: jump 374
2025-07-25 10:43:51,978 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:51,978 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF00F6FD0>
2025-07-25 10:43:51,978 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:51,978 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:51,978 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:51,978 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:51,978 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:51,978 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:51,978 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF00F6FD0>
2025-07-25 10:43:51,979 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:51,979 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:51,979 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:43:51,979 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:51,979 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:51,979 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:43:51,979 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:51,979 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:51,979 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:51,980 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:51,980 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:43:51,980 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:51,980 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:51,980 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:51,980 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:51,980 - DEBUG - on stmt: jump 374
2025-07-25 10:43:51,980 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:51,980 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF00F6FD0>
2025-07-25 10:43:51,980 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:43:51,980 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:43:51,980 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:51,981 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:51,981 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,981 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:51,981 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:51,981 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:43:51,981 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:51,981 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:51,981 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:43:51,981 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:51,981 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,982 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:51,982 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,982 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:51,982 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:51,982 - DEBUG - on stmt: jump 646
2025-07-25 10:43:51,982 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:51,982 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF00F6FD0>
2025-07-25 10:43:51,982 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:51,982 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:51,982 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:51,982 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:51,982 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:51,982 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:51,982 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF00F6FD0>
2025-07-25 10:43:51,983 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:51,983 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:51,983 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:43:51,983 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:51,983 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:51,983 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:43:51,983 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:51,983 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:51,983 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:51,984 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:51,984 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:43:51,984 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:51,984 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:51,984 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:51,984 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:51,984 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:51,984 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:51,984 - DEBUG - on stmt: jump 646
2025-07-25 10:43:51,984 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:51,984 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF00F6FD0>
2025-07-25 10:43:51,985 - DEBUG - on stmt: jump 176
2025-07-25 10:43:51,985 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:51,985 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF00F6FD0>
2025-07-25 10:43:51,985 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:51,985 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:51,985 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:51,985 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024AF003A510>],
             180: [<numba.core.ir.Assign object at 0x0000024AF0155D50>]})
2025-07-25 10:43:51,985 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:51,985 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0155250>
2025-07-25 10:43:51,985 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:51,985 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:51,986 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:51,986 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:51,986 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:51,986 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:51,986 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:51,986 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:51,986 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:51,986 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,986 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:51,986 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:51,986 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:51,986 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:51,987 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:51,987 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:51,987 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:51,987 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:51,987 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:51,987 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:51,987 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:51,987 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:51,987 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:51,987 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:51,988 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:51,988 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:51,988 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:51,988 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,988 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:51,988 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:51,988 - DEBUG - on stmt: jump 176
2025-07-25 10:43:51,988 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:51,988 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0155250>
2025-07-25 10:43:51,988 - DEBUG - on stmt: jump 178
2025-07-25 10:43:51,988 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:51,989 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0155250>
2025-07-25 10:43:51,989 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:51,989 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:51,989 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:51,989 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:51,989 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:51,989 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:51,989 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0155250>
2025-07-25 10:43:51,989 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:51,989 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:51,989 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:51,989 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,989 - DEBUG - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,990 - DEBUG - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,990 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 10:43:51,990 - DEBUG - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
2025-07-25 10:43:51,990 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:43:51,990 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:43:51,990 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:51,990 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:51,990 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,990 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:51,990 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:51,990 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:51,990 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:43:51,991 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:43:51,991 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:51,991 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,991 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:51,991 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,991 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:51,991 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:51,991 - DEBUG - on stmt: jump 374
2025-07-25 10:43:51,991 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:51,991 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0155250>
2025-07-25 10:43:51,991 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:51,991 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:51,992 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:51,992 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:51,992 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:51,992 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:51,992 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0155250>
2025-07-25 10:43:51,992 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:51,992 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:51,992 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:43:51,992 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:51,992 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:51,993 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:43:51,993 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:51,993 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:51,993 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:51,993 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:51,993 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:43:51,993 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:51,993 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:51,993 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:51,993 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:51,993 - DEBUG - on stmt: jump 374
2025-07-25 10:43:51,993 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:51,993 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0155250>
2025-07-25 10:43:51,994 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:43:51,994 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:43:51,994 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:51,994 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:51,994 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,994 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:51,994 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:51,994 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:43:51,994 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:51,994 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:51,994 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:43:51,994 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:51,994 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,995 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:51,995 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,995 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:51,995 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:51,995 - DEBUG - on stmt: jump 646
2025-07-25 10:43:51,995 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:51,995 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0155250>
2025-07-25 10:43:51,995 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:51,995 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:51,995 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:51,995 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:51,995 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:51,995 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:51,996 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0155250>
2025-07-25 10:43:51,996 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:51,996 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:51,996 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:43:51,996 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:51,996 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:51,996 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:43:51,996 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:51,996 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:51,997 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:51,997 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:51,997 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:43:51,997 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:51,997 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:51,997 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:51,997 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:51,997 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:51,997 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:51,997 - DEBUG - on stmt: jump 646
2025-07-25 10:43:51,998 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:51,998 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0155250>
2025-07-25 10:43:51,998 - DEBUG - on stmt: jump 176
2025-07-25 10:43:51,998 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:51,998 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0155250>
2025-07-25 10:43:51,998 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:51,998 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:51,998 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:51,998 - DEBUG - Fix SSA violator on var n
2025-07-25 10:43:51,999 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:51,999 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AEFD37C50>
2025-07-25 10:43:51,999 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:51,999 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:51,999 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:51,999 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:51,999 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:51,999 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:51,999 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:51,999 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:51,999 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:51,999 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:51,999 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:51,999 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:52,000 - DEBUG - first assign: n
2025-07-25 10:43:52,000 - DEBUG - replaced with: n = const(int, 0)
2025-07-25 10:43:52,000 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:52,000 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:52,000 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:52,000 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:52,000 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:52,000 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:52,000 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:52,000 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,000 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:52,001 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:52,001 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,001 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:52,001 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:52,001 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,001 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:52,001 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,001 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:52,001 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:52,001 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,001 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:52,002 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AEFD37C50>
2025-07-25 10:43:52,002 - DEBUG - on stmt: jump 178
2025-07-25 10:43:52,002 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:52,002 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AEFD37C50>
2025-07-25 10:43:52,002 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:52,002 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:52,002 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:52,002 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:52,002 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:52,002 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:52,002 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AEFD37C50>
2025-07-25 10:43:52,002 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:52,003 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,003 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:52,003 - DEBUG - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,003 - DEBUG - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,003 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:43:52,003 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:43:52,003 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:52,003 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:52,003 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,003 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:52,003 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:52,003 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:52,003 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:43:52,004 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:43:52,004 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:52,004 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,004 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:52,004 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,004 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:52,004 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:52,004 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,004 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:52,005 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AEFD37C50>
2025-07-25 10:43:52,005 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:52,005 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:52,005 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:52,005 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:52,005 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:52,005 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:52,005 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AEFD37C50>
2025-07-25 10:43:52,005 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:52,005 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:52,005 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:43:52,005 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,005 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:52,006 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:43:52,006 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,006 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:52,006 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,006 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,006 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:43:52,006 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:52,006 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,006 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,006 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:52,006 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,007 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:52,007 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AEFD37C50>
2025-07-25 10:43:52,007 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:43:52,007 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:43:52,007 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:52,007 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:52,007 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,007 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:52,008 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:52,008 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:43:52,008 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:52,008 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:52,008 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:43:52,008 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:52,008 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,008 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:52,008 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,008 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:52,009 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:52,009 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,009 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:52,009 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AEFD37C50>
2025-07-25 10:43:52,009 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:52,009 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:52,009 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:52,009 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:52,009 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:52,009 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:52,009 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AEFD37C50>
2025-07-25 10:43:52,009 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:52,009 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:52,010 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:43:52,010 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,010 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:52,010 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:43:52,010 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,010 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:52,010 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,010 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,010 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:43:52,010 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:52,010 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:52,010 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:52,011 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,011 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,011 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:52,011 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,011 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:52,011 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AEFD37C50>
2025-07-25 10:43:52,011 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,011 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:52,011 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AEFD37C50>
2025-07-25 10:43:52,011 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:52,011 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:52,011 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:52,011 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024AF0158D10>],
             180: [<numba.core.ir.Assign object at 0x0000024AF0169510>]})
2025-07-25 10:43:52,012 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:52,012 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AEFC9AE90>
2025-07-25 10:43:52,012 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:52,012 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:52,012 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:52,012 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:52,012 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:52,012 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:52,012 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:52,012 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:52,013 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:52,013 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,013 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:52,013 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:52,013 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:52,013 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:52,013 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:52,013 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:52,013 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:52,013 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:52,013 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:52,013 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,014 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:52,014 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:52,014 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,014 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:52,014 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:52,014 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,014 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:52,014 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,014 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:52,014 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:52,015 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,015 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:52,015 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AEFC9AE90>
2025-07-25 10:43:52,015 - DEBUG - on stmt: jump 178
2025-07-25 10:43:52,015 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:52,015 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AEFC9AE90>
2025-07-25 10:43:52,015 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:52,015 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:52,015 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:52,015 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:52,015 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:52,016 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:52,016 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AEFC9AE90>
2025-07-25 10:43:52,016 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:52,016 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,016 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:52,016 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,016 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 10:43:52,016 - DEBUG - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
2025-07-25 10:43:52,016 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:43:52,016 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:43:52,017 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:52,017 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:52,017 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,017 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:52,017 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:52,017 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:52,017 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 10:43:52,017 - DEBUG - find_def var='n' stmt=$binop_add310.28 = n + $const308.27.3
2025-07-25 10:43:52,017 - DEBUG - replaced with: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:43:52,018 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:43:52,018 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:52,018 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,018 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:52,018 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,018 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:52,018 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:52,018 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,018 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:52,018 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AEFC9AE90>
2025-07-25 10:43:52,018 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:52,018 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:52,018 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:52,019 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:52,019 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:52,019 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:52,019 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AEFC9AE90>
2025-07-25 10:43:52,019 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:52,019 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:52,019 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:43:52,019 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,019 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:52,019 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:43:52,019 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,019 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:52,019 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,019 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,020 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 10:43:52,020 - DEBUG - find_def var='n' stmt=$binop_sub468.27 = n - i
2025-07-25 10:43:52,020 - DEBUG - find_def_from_top label 376
2025-07-25 10:43:52,020 - DEBUG - idom 374 from label 376
2025-07-25 10:43:52,020 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:43:52,020 - DEBUG - find_def_from_top label 374
2025-07-25 10:43:52,020 - DEBUG - idom 180 from label 374
2025-07-25 10:43:52,020 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:43:52,020 - DEBUG - replaced with: $binop_sub468.27 = n.1 - i
2025-07-25 10:43:52,020 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:52,020 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,020 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,021 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:52,021 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,021 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:52,021 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AEFC9AE90>
2025-07-25 10:43:52,021 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:43:52,021 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:43:52,021 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:52,021 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:52,021 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,021 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:52,022 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:52,022 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 10:43:52,022 - DEBUG - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
2025-07-25 10:43:52,022 - DEBUG - find_def_from_top label 500
2025-07-25 10:43:52,022 - DEBUG - idom 374 from label 500
2025-07-25 10:43:52,022 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:43:52,022 - DEBUG - find_def_from_top label 374
2025-07-25 10:43:52,022 - DEBUG - idom 180 from label 374
2025-07-25 10:43:52,022 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:43:52,022 - DEBUG - replaced with: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:43:52,022 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:52,022 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:52,022 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:43:52,023 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:52,023 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,023 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:52,023 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,023 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:52,023 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:52,023 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,023 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:52,023 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AEFC9AE90>
2025-07-25 10:43:52,023 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:52,024 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:52,024 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:52,024 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:52,024 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:52,024 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:52,024 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AEFC9AE90>
2025-07-25 10:43:52,024 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:52,024 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:52,024 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:43:52,024 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,024 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:52,024 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:43:52,025 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,025 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:52,025 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,025 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,025 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 10:43:52,025 - DEBUG - find_def var='n' stmt=$binop_add740.27 = n + k
2025-07-25 10:43:52,025 - DEBUG - find_def_from_top label 648
2025-07-25 10:43:52,025 - DEBUG - idom 646 from label 648
2025-07-25 10:43:52,025 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:43:52,025 - DEBUG - find_def_from_top label 646
2025-07-25 10:43:52,025 - DEBUG - idom 500 from label 646
2025-07-25 10:43:52,026 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:43:52,026 - DEBUG - find_def_from_top label 500
2025-07-25 10:43:52,026 - DEBUG - idom 374 from label 500
2025-07-25 10:43:52,026 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:43:52,026 - DEBUG - find_def_from_top label 374
2025-07-25 10:43:52,026 - DEBUG - idom 180 from label 374
2025-07-25 10:43:52,026 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:43:52,026 - DEBUG - replaced with: $binop_add740.27 = n.1 + k
2025-07-25 10:43:52,026 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:52,026 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:52,026 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:52,026 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,026 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,027 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:52,027 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,027 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:52,027 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AEFC9AE90>
2025-07-25 10:43:52,027 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,027 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:52,027 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AEFC9AE90>
2025-07-25 10:43:52,027 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:52,027 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:52,027 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:52,027 - DEBUG - Fix SSA violator on var frac
2025-07-25 10:43:52,027 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:52,028 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157B10>
2025-07-25 10:43:52,028 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:52,028 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:52,028 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:52,028 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:52,028 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:52,028 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:52,028 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:52,028 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:52,028 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:52,028 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,029 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:52,029 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:52,029 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:52,029 - DEBUG - first assign: frac
2025-07-25 10:43:52,029 - DEBUG - replaced with: frac = const(float, 0.0)
2025-07-25 10:43:52,029 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:52,029 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:52,029 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:52,029 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:52,030 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:52,030 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:52,030 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,030 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:52,030 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:52,030 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,030 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:52,030 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:52,031 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,031 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:52,031 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,031 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:52,031 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:52,031 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,032 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:52,032 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157B10>
2025-07-25 10:43:52,032 - DEBUG - on stmt: jump 178
2025-07-25 10:43:52,032 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:52,032 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157B10>
2025-07-25 10:43:52,032 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:52,032 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:52,032 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:52,032 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:52,032 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:52,032 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:52,033 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157B10>
2025-07-25 10:43:52,033 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:52,033 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,033 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:52,033 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,033 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:43:52,033 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 10:43:52,033 - DEBUG - replaced with: frac.1 = scale * $binop_sub234.12
2025-07-25 10:43:52,033 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:52,033 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:52,034 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,034 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:52,034 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:52,034 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:52,034 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:43:52,034 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:43:52,034 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:52,034 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,034 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:52,034 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,035 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:52,035 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:52,035 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,035 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:52,035 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157B10>
2025-07-25 10:43:52,035 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:52,035 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:52,035 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:52,035 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:52,035 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:52,035 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:52,035 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157B10>
2025-07-25 10:43:52,035 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:52,036 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:52,036 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:43:52,036 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,036 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:52,036 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:43:52,036 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,036 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:52,036 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,036 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,036 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:43:52,036 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:52,036 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,036 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,037 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:52,037 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,037 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:52,037 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157B10>
2025-07-25 10:43:52,037 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:43:52,037 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 10:43:52,037 - DEBUG - replaced with: frac.2 = $binop_sub504.3
2025-07-25 10:43:52,037 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:52,037 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:52,037 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,038 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:52,038 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:52,038 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:43:52,038 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:52,038 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:52,038 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:43:52,038 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:52,038 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,038 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:52,038 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,039 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:52,039 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:52,039 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,039 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:52,039 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157B10>
2025-07-25 10:43:52,039 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:52,039 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:52,039 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:52,039 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:52,039 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:52,039 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:52,039 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157B10>
2025-07-25 10:43:52,039 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:52,040 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:52,040 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:43:52,040 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,040 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:52,040 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:43:52,040 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,040 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:52,040 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,040 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,040 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:43:52,040 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:52,040 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:52,040 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:52,040 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,041 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,041 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:52,041 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,041 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:52,041 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157B10>
2025-07-25 10:43:52,041 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,041 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:52,041 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157B10>
2025-07-25 10:43:52,041 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:52,041 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:52,042 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:52,042 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024AF0155250>],
             180: [<numba.core.ir.Assign object at 0x0000024AF0161190>],
             500: [<numba.core.ir.Assign object at 0x0000024AF01606D0>]})
2025-07-25 10:43:52,042 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:52,042 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF01260D0>
2025-07-25 10:43:52,042 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:52,042 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:52,042 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:52,042 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:52,042 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:52,042 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:52,043 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:52,043 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:52,043 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:52,043 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,043 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:52,043 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:52,043 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:52,043 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:52,043 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:52,043 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:52,043 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:52,043 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:52,043 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:52,044 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,044 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:52,044 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:52,044 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,044 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:52,044 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:52,044 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,044 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:52,044 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,044 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:52,044 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:52,044 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,044 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:52,045 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF01260D0>
2025-07-25 10:43:52,045 - DEBUG - on stmt: jump 178
2025-07-25 10:43:52,045 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:52,045 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF01260D0>
2025-07-25 10:43:52,045 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:52,045 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:52,045 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:52,045 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:52,045 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:52,045 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:52,045 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF01260D0>
2025-07-25 10:43:52,045 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:52,045 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,046 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:52,046 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,046 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:43:52,046 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:43:52,046 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:52,046 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 10:43:52,046 - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-07-25 10:43:52,046 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:52,046 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,047 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:52,047 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:52,047 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:52,047 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:43:52,047 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:43:52,047 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:52,047 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,047 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:52,047 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,047 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:52,047 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:52,047 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,048 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:52,048 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF01260D0>
2025-07-25 10:43:52,048 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:52,048 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:52,048 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:52,048 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:52,048 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:52,048 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:52,048 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF01260D0>
2025-07-25 10:43:52,048 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:52,048 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:52,048 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:43:52,048 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,048 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:52,049 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:43:52,049 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,049 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:52,049 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,049 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,049 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:43:52,049 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:52,049 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,049 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,049 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:52,049 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,049 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:52,049 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF01260D0>
2025-07-25 10:43:52,049 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 10:43:52,050 - DEBUG - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
2025-07-25 10:43:52,050 - DEBUG - find_def_from_top label 500
2025-07-25 10:43:52,050 - DEBUG - idom 374 from label 500
2025-07-25 10:43:52,050 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:43:52,050 - DEBUG - find_def_from_top label 374
2025-07-25 10:43:52,050 - DEBUG - idom 180 from label 374
2025-07-25 10:43:52,050 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:43:52,050 - DEBUG - replaced with: $binop_sub504.3 = scale - frac.1
2025-07-25 10:43:52,050 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:43:52,051 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 10:43:52,051 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 10:43:52,051 - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-07-25 10:43:52,051 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:52,051 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,051 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:52,051 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:52,051 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:43:52,051 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:52,051 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:52,051 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:43:52,052 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:52,052 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,052 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:52,052 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,052 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:52,052 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:52,052 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,052 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:52,052 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF01260D0>
2025-07-25 10:43:52,052 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:52,052 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:52,052 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:52,053 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:52,053 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:52,053 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:52,053 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF01260D0>
2025-07-25 10:43:52,053 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:52,053 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:52,053 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:43:52,053 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,053 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:52,053 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:43:52,053 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,053 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:52,053 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,054 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,054 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:43:52,054 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:52,054 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:52,054 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:52,054 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,054 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,054 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:52,054 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,055 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:52,055 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF01260D0>
2025-07-25 10:43:52,055 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,055 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:52,055 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF01260D0>
2025-07-25 10:43:52,055 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:52,055 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:52,055 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:52,055 - DEBUG - Fix SSA violator on var index_frac
2025-07-25 10:43:52,055 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:52,055 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157A10>
2025-07-25 10:43:52,055 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:52,055 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:52,056 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:52,056 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:52,056 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:52,056 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:52,056 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:52,056 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:52,056 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:52,056 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,056 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:52,056 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:52,056 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:52,056 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:52,057 - DEBUG - first assign: index_frac
2025-07-25 10:43:52,057 - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-07-25 10:43:52,057 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:52,057 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:52,057 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:52,057 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:52,057 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:52,057 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,057 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:52,057 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:52,057 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,057 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:52,058 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:52,058 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,058 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:52,058 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,058 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:52,058 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:52,058 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,058 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:52,058 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157A10>
2025-07-25 10:43:52,058 - DEBUG - on stmt: jump 178
2025-07-25 10:43:52,059 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:52,059 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157A10>
2025-07-25 10:43:52,059 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:52,059 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:52,059 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:52,059 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:52,059 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:52,059 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:52,059 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157A10>
2025-07-25 10:43:52,059 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:52,059 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,059 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:52,060 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,060 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:43:52,060 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:43:52,060 - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-07-25 10:43:52,060 - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-07-25 10:43:52,060 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:52,060 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,060 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:52,060 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:52,060 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:52,060 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:43:52,060 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:43:52,061 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:52,061 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,061 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:52,061 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,061 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:52,061 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:52,061 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,061 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:52,061 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157A10>
2025-07-25 10:43:52,061 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:52,061 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:52,062 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:52,062 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:52,062 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:52,062 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:52,062 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157A10>
2025-07-25 10:43:52,062 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:52,062 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:52,063 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:43:52,063 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,063 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:52,063 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:43:52,063 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,063 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:52,063 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,063 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,064 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:43:52,064 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:52,064 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,064 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,064 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:52,064 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,064 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:52,064 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157A10>
2025-07-25 10:43:52,064 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:43:52,064 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:43:52,064 - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-07-25 10:43:52,064 - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-07-25 10:43:52,065 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:52,065 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,065 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:52,065 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:52,065 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:43:52,065 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:52,065 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:52,065 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:43:52,065 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:52,065 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,065 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:52,065 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,066 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:52,066 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:52,066 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,066 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:52,066 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157A10>
2025-07-25 10:43:52,066 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:52,066 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:52,066 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:52,066 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:52,066 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:52,066 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:52,066 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157A10>
2025-07-25 10:43:52,067 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:52,067 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:52,067 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:43:52,067 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,067 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:52,067 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:43:52,067 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,067 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:52,067 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,068 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,068 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:43:52,068 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:52,068 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:52,068 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:52,068 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,068 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,068 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:52,068 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,068 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:52,068 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157A10>
2025-07-25 10:43:52,068 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,068 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:52,069 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157A10>
2025-07-25 10:43:52,069 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:52,069 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:52,069 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:52,069 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024AF01569D0>],
             180: [<numba.core.ir.Assign object at 0x0000024AF0163ED0>],
             500: [<numba.core.ir.Assign object at 0x0000024AF01613D0>]})
2025-07-25 10:43:52,069 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:52,069 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF016A050>
2025-07-25 10:43:52,069 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:52,069 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:52,069 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:52,069 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:52,069 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:52,069 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:52,070 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:52,070 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:52,070 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:52,070 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,070 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:52,070 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:52,070 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:52,070 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:52,070 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:52,070 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:52,070 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:52,070 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:52,071 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:52,071 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,071 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:52,071 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:52,071 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,071 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:52,071 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:52,071 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,072 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:52,072 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,072 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:52,072 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:52,072 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,072 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:52,072 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF016A050>
2025-07-25 10:43:52,072 - DEBUG - on stmt: jump 178
2025-07-25 10:43:52,072 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:52,072 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF016A050>
2025-07-25 10:43:52,072 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:52,072 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:52,072 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:52,073 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:52,073 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:52,073 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:52,073 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF016A050>
2025-07-25 10:43:52,073 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:52,073 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,073 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:52,073 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,073 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:43:52,073 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:43:52,073 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:43:52,073 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:52,073 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,074 - DEBUG - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,074 - DEBUG - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,074 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:52,074 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 10:43:52,074 - DEBUG - replaced with: eta = index_frac.1 - offset
2025-07-25 10:43:52,074 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:52,074 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:52,074 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:43:52,074 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:43:52,074 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:52,074 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,075 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:52,075 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,075 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:52,075 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:52,075 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,075 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:52,075 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF016A050>
2025-07-25 10:43:52,075 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:52,076 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:52,076 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:52,076 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:52,076 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:52,076 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:52,076 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF016A050>
2025-07-25 10:43:52,076 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:52,076 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:52,076 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:43:52,076 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,076 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:52,076 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:43:52,077 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,077 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:52,077 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,077 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,077 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:43:52,077 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:52,077 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,077 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,077 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:52,077 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,078 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:52,078 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF016A050>
2025-07-25 10:43:52,078 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:43:52,078 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:43:52,078 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:43:52,078 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:52,078 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,078 - DEBUG - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,078 - DEBUG - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,078 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 10:43:52,078 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 10:43:52,079 - DEBUG - replaced with: eta = index_frac.2 - offset
2025-07-25 10:43:52,079 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:52,079 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:43:52,079 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:52,079 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:52,079 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:43:52,079 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:52,079 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,080 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:52,080 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,080 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:52,080 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:52,080 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,080 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:52,080 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF016A050>
2025-07-25 10:43:52,080 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:52,080 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:52,080 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:52,080 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:52,080 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:52,080 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:52,081 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF016A050>
2025-07-25 10:43:52,081 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:52,081 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:52,081 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:43:52,081 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,081 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:52,081 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:43:52,081 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,081 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:52,082 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,082 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,082 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:43:52,082 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:52,082 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:52,082 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:52,082 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,082 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,082 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:52,082 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,082 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:52,082 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF016A050>
2025-07-25 10:43:52,082 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,083 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:52,083 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF016A050>
2025-07-25 10:43:52,083 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:52,083 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:52,083 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:52,083 - DEBUG - Fix SSA violator on var offset
2025-07-25 10:43:52,083 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:52,083 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157750>
2025-07-25 10:43:52,083 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:52,083 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:52,083 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:52,084 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:52,084 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:52,084 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:52,084 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:52,084 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:52,084 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:52,084 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,084 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:52,084 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:52,084 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:52,085 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:52,085 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:52,085 - DEBUG - first assign: offset
2025-07-25 10:43:52,085 - DEBUG - replaced with: offset = const(int, 0)
2025-07-25 10:43:52,085 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:52,085 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:52,085 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:52,085 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:52,085 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,085 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:52,085 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:52,085 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,085 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:52,086 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:52,086 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,086 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:52,086 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,086 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:52,086 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:52,086 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,086 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:52,086 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157750>
2025-07-25 10:43:52,086 - DEBUG - on stmt: jump 178
2025-07-25 10:43:52,086 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:52,086 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157750>
2025-07-25 10:43:52,087 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:52,087 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:52,087 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:52,087 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:52,087 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:52,087 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:52,087 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157750>
2025-07-25 10:43:52,087 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:52,087 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,087 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:52,088 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,088 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:43:52,088 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:43:52,088 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:43:52,088 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:52,088 - DEBUG - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,088 - DEBUG - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,088 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 10:43:52,088 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:52,088 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:52,088 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:43:52,089 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:43:52,089 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:52,089 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,089 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:52,089 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,089 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:52,089 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:52,089 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,089 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:52,089 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157750>
2025-07-25 10:43:52,089 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:52,089 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:52,090 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:52,090 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:52,090 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:52,090 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:52,090 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157750>
2025-07-25 10:43:52,090 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:52,090 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:52,090 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:43:52,090 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,090 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:52,090 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:43:52,090 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,090 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:52,090 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,090 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,091 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:43:52,091 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:52,091 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,091 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,091 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:52,091 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,091 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:52,091 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157750>
2025-07-25 10:43:52,091 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:43:52,091 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:43:52,092 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:43:52,092 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:52,092 - DEBUG - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,092 - DEBUG - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,092 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 10:43:52,092 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:52,092 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:43:52,092 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:52,092 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:52,093 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:43:52,093 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:52,093 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,093 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:52,093 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,093 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:52,093 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:52,093 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,093 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:52,093 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157750>
2025-07-25 10:43:52,093 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:52,093 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:52,094 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:52,094 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:52,094 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:52,094 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:52,094 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157750>
2025-07-25 10:43:52,094 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:52,094 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:52,094 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:43:52,094 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,094 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:52,094 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:43:52,094 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,095 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:52,095 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,095 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,095 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:43:52,095 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:52,095 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:52,095 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:52,095 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,095 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,095 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:52,095 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,095 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:52,095 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157750>
2025-07-25 10:43:52,096 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,096 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:52,096 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF0157750>
2025-07-25 10:43:52,096 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:52,096 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:52,096 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:52,096 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024AF01258D0>],
             180: [<numba.core.ir.Assign object at 0x0000024AF01605D0>],
             500: [<numba.core.ir.Assign object at 0x0000024AF0162910>]})
2025-07-25 10:43:52,096 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:52,097 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0159850>
2025-07-25 10:43:52,097 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:52,097 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:52,097 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:52,097 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:52,097 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:52,097 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:52,097 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:52,097 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:52,097 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:52,097 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,097 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:52,098 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:52,098 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:52,098 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:52,098 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:52,098 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:52,098 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:52,098 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:52,098 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:52,098 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,098 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:52,098 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:52,098 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,099 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:52,099 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:52,099 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,099 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:52,099 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,099 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:52,099 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:52,099 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,099 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:52,099 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0159850>
2025-07-25 10:43:52,099 - DEBUG - on stmt: jump 178
2025-07-25 10:43:52,099 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:52,099 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0159850>
2025-07-25 10:43:52,100 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:52,100 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:52,100 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:52,100 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:52,100 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:52,100 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:52,100 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0159850>
2025-07-25 10:43:52,100 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:52,100 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,100 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:52,100 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,101 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:43:52,101 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:43:52,101 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:43:52,101 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:52,101 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,101 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 10:43:52,101 - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-07-25 10:43:52,101 - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-07-25 10:43:52,101 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:52,101 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:52,102 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:43:52,102 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 10:43:52,102 - DEBUG - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
2025-07-25 10:43:52,102 - DEBUG - replaced with: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:43:52,102 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:52,102 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,102 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:52,102 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,102 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:52,102 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:52,102 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,102 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:52,103 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0159850>
2025-07-25 10:43:52,103 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:52,103 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:52,103 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:52,103 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:52,103 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:52,103 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:52,103 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0159850>
2025-07-25 10:43:52,103 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:52,103 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:52,103 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:43:52,103 - DEBUG - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
2025-07-25 10:43:52,103 - DEBUG - find_def_from_top label 376
2025-07-25 10:43:52,103 - DEBUG - idom 374 from label 376
2025-07-25 10:43:52,103 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:43:52,103 - DEBUG - find_def_from_top label 374
2025-07-25 10:43:52,104 - DEBUG - idom 180 from label 374
2025-07-25 10:43:52,104 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:43:52,104 - DEBUG - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:43:52,104 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,104 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:52,104 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:43:52,104 - DEBUG - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
2025-07-25 10:43:52,104 - DEBUG - find_def_from_top label 376
2025-07-25 10:43:52,104 - DEBUG - idom 374 from label 376
2025-07-25 10:43:52,105 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:43:52,105 - DEBUG - find_def_from_top label 374
2025-07-25 10:43:52,105 - DEBUG - idom 180 from label 374
2025-07-25 10:43:52,105 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:43:52,105 - DEBUG - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:43:52,105 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,105 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:52,105 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,105 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,105 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:43:52,105 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:52,105 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,106 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,106 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:52,106 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,106 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:52,106 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0159850>
2025-07-25 10:43:52,106 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:43:52,106 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:43:52,107 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:43:52,107 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:52,107 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,107 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 10:43:52,107 - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-07-25 10:43:52,107 - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-07-25 10:43:52,107 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:52,108 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:43:52,108 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:52,108 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:52,108 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 10:43:52,108 - DEBUG - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
2025-07-25 10:43:52,108 - DEBUG - replaced with: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:43:52,108 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:52,109 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,109 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:52,109 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,109 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:52,109 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:52,109 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,109 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:52,109 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0159850>
2025-07-25 10:43:52,109 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:52,109 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:52,110 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:52,110 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:52,110 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:52,110 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:52,110 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0159850>
2025-07-25 10:43:52,110 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:52,110 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:52,110 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:43:52,111 - DEBUG - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
2025-07-25 10:43:52,111 - DEBUG - find_def_from_top label 648
2025-07-25 10:43:52,111 - DEBUG - idom 646 from label 648
2025-07-25 10:43:52,111 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:43:52,111 - DEBUG - find_def_from_top label 646
2025-07-25 10:43:52,111 - DEBUG - idom 500 from label 646
2025-07-25 10:43:52,111 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:43:52,111 - DEBUG - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:43:52,112 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,112 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:52,112 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:43:52,112 - DEBUG - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
2025-07-25 10:43:52,112 - DEBUG - find_def_from_top label 648
2025-07-25 10:43:52,112 - DEBUG - idom 646 from label 648
2025-07-25 10:43:52,112 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:43:52,112 - DEBUG - find_def_from_top label 646
2025-07-25 10:43:52,112 - DEBUG - idom 500 from label 646
2025-07-25 10:43:52,113 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:43:52,113 - DEBUG - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:43:52,113 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,113 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:52,113 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,113 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,113 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:43:52,113 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:52,113 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:52,113 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:52,113 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,114 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,114 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:52,114 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,114 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:52,114 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0159850>
2025-07-25 10:43:52,114 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,114 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:52,114 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0159850>
2025-07-25 10:43:52,114 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:52,114 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:52,114 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:52,114 - DEBUG - Fix SSA violator on var eta
2025-07-25 10:43:52,114 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:52,115 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF01260D0>
2025-07-25 10:43:52,115 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:52,115 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:52,115 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:52,115 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:52,115 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:52,115 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:52,115 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:52,115 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:52,115 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:52,115 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,115 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:52,115 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:52,115 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:52,116 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:52,116 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:52,116 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:52,116 - DEBUG - first assign: eta
2025-07-25 10:43:52,116 - DEBUG - replaced with: eta = const(float, 0.0)
2025-07-25 10:43:52,116 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:52,116 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:52,116 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:52,116 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,116 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:52,116 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:52,116 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,117 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:52,117 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:52,117 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,117 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:52,117 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,117 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:52,117 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:52,117 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,117 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:52,118 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF01260D0>
2025-07-25 10:43:52,118 - DEBUG - on stmt: jump 178
2025-07-25 10:43:52,118 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:52,118 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF01260D0>
2025-07-25 10:43:52,118 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:52,118 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:52,118 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:52,118 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:52,118 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:52,118 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:52,118 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF01260D0>
2025-07-25 10:43:52,118 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:52,118 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,119 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:52,119 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,119 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:43:52,119 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:43:52,119 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:43:52,119 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:52,119 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,119 - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-07-25 10:43:52,119 - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-07-25 10:43:52,119 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:52,119 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:52,119 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:43:52,120 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:43:52,120 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:52,120 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,120 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:52,120 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,120 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:52,120 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:52,120 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,120 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:52,120 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF01260D0>
2025-07-25 10:43:52,120 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:52,121 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:52,121 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:52,121 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:52,121 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:52,121 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:52,121 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF01260D0>
2025-07-25 10:43:52,121 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:52,121 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:52,121 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:43:52,122 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,122 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:52,122 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:43:52,122 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,122 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:52,122 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,122 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,122 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:43:52,122 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:52,122 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,122 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,122 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:52,123 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,123 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:52,123 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF01260D0>
2025-07-25 10:43:52,123 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:43:52,123 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:43:52,123 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:43:52,123 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:52,123 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,123 - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-07-25 10:43:52,123 - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-07-25 10:43:52,123 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:52,123 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:43:52,123 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:52,123 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:52,123 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:43:52,124 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:52,124 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,124 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:52,124 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,124 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:52,124 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:52,124 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,124 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:52,124 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF01260D0>
2025-07-25 10:43:52,124 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:52,124 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:52,125 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:52,125 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:52,125 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:52,125 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:52,125 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF01260D0>
2025-07-25 10:43:52,125 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:52,125 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:52,125 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:43:52,125 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,126 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:52,126 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:43:52,126 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,126 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:52,126 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,126 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,126 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:43:52,126 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:52,126 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:52,127 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:52,127 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,127 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,127 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:52,127 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,127 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:52,127 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF01260D0>
2025-07-25 10:43:52,127 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,127 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:52,127 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF01260D0>
2025-07-25 10:43:52,127 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:52,127 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:52,127 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:52,128 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024AF0162F90>],
             180: [<numba.core.ir.Assign object at 0x0000024AF01618D0>],
             500: [<numba.core.ir.Assign object at 0x0000024AF0178F50>]})
2025-07-25 10:43:52,128 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:52,128 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157B10>
2025-07-25 10:43:52,128 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:52,128 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:52,128 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:52,128 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:52,128 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:52,128 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:52,128 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:52,128 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:52,128 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:52,129 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,129 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:52,129 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:52,129 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:52,129 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:52,129 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:52,129 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:52,129 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:52,129 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:52,130 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:52,130 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,130 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:52,130 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:52,130 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,130 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:52,130 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:52,130 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,130 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:52,130 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,130 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:52,131 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:52,131 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,131 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:52,131 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157B10>
2025-07-25 10:43:52,131 - DEBUG - on stmt: jump 178
2025-07-25 10:43:52,131 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:52,131 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157B10>
2025-07-25 10:43:52,131 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:52,131 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:52,131 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:52,131 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:52,132 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:52,132 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:52,132 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157B10>
2025-07-25 10:43:52,132 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:52,132 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,132 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:52,132 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,132 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:43:52,132 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:43:52,132 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:43:52,132 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:52,132 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,132 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:43:52,133 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:52,133 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:52,133 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:43:52,133 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:43:52,133 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:52,133 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,133 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:52,133 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,133 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:52,134 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:52,134 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,134 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:52,134 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157B10>
2025-07-25 10:43:52,134 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:52,134 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:52,134 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:52,134 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:52,134 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:52,134 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:52,134 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157B10>
2025-07-25 10:43:52,134 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:52,134 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:52,135 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:43:52,135 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,135 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:52,135 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:43:52,135 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,135 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:52,135 - DEBUG - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 10:43:52,135 - DEBUG - find_def_from_top label 376
2025-07-25 10:43:52,135 - DEBUG - idom 374 from label 376
2025-07-25 10:43:52,135 - DEBUG - find_def_from_bottom label 374
2025-07-25 10:43:52,135 - DEBUG - find_def_from_top label 374
2025-07-25 10:43:52,135 - DEBUG - idom 180 from label 374
2025-07-25 10:43:52,136 - DEBUG - find_def_from_bottom label 180
2025-07-25 10:43:52,136 - DEBUG - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:43:52,136 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,136 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,136 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:43:52,136 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:52,136 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,136 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,136 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:52,136 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,136 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:52,136 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157B10>
2025-07-25 10:43:52,136 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:43:52,137 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:43:52,137 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:43:52,137 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:52,137 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,137 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:43:52,137 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:52,137 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:43:52,137 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:52,137 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:52,138 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:43:52,138 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:52,138 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,138 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:52,138 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,138 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:52,138 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:52,138 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,138 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:52,138 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157B10>
2025-07-25 10:43:52,139 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:52,139 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:52,139 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:52,139 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:52,139 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:52,139 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:52,139 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157B10>
2025-07-25 10:43:52,139 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:52,139 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:52,139 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:43:52,139 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,139 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:52,139 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:43:52,140 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,140 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:52,140 - DEBUG - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 10:43:52,140 - DEBUG - find_def_from_top label 648
2025-07-25 10:43:52,140 - DEBUG - idom 646 from label 648
2025-07-25 10:43:52,140 - DEBUG - find_def_from_bottom label 646
2025-07-25 10:43:52,140 - DEBUG - find_def_from_top label 646
2025-07-25 10:43:52,140 - DEBUG - idom 500 from label 646
2025-07-25 10:43:52,140 - DEBUG - find_def_from_bottom label 500
2025-07-25 10:43:52,140 - DEBUG - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:43:52,140 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,140 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,140 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:43:52,141 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:52,141 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:52,141 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:52,141 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,141 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,141 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:52,141 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,141 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:52,141 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157B10>
2025-07-25 10:43:52,141 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,142 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:52,142 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157B10>
2025-07-25 10:43:52,142 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:52,142 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:52,142 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:52,142 - DEBUG - Fix SSA violator on var weight
2025-07-25 10:43:52,142 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:52,142 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF017B690>
2025-07-25 10:43:52,142 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:52,142 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:52,142 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:52,143 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:52,143 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:52,143 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:52,143 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:52,143 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:52,143 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:52,143 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,143 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:52,144 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:52,144 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:52,144 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:52,144 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:52,144 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:52,144 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:52,144 - DEBUG - first assign: weight
2025-07-25 10:43:52,144 - DEBUG - replaced with: weight = const(float, 0.0)
2025-07-25 10:43:52,145 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:52,145 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:52,145 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,145 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:52,145 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:52,145 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,145 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:52,145 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:52,145 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,145 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:52,145 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,146 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:52,146 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:52,146 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,146 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:52,146 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF017B690>
2025-07-25 10:43:52,146 - DEBUG - on stmt: jump 178
2025-07-25 10:43:52,146 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:52,146 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF017B690>
2025-07-25 10:43:52,146 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:52,147 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:52,147 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:52,147 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:52,147 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:52,147 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:52,147 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF017B690>
2025-07-25 10:43:52,147 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:52,147 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,147 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:52,147 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,147 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:43:52,147 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:43:52,148 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:43:52,148 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:52,148 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,148 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:43:52,148 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:52,148 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:52,148 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:43:52,148 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:43:52,148 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:52,148 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,148 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:52,148 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,149 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:52,149 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:52,149 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,149 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:52,149 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF017B690>
2025-07-25 10:43:52,149 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:52,149 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:52,149 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:52,149 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:52,149 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:52,149 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:52,149 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF017B690>
2025-07-25 10:43:52,149 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:52,149 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:52,149 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:43:52,150 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,150 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:52,150 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:43:52,150 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,150 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:43:52,150 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,150 - DEBUG - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,150 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,150 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:43:52,151 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:52,151 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,151 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,151 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:52,151 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,151 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:52,151 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF017B690>
2025-07-25 10:43:52,151 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:43:52,151 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:43:52,151 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:43:52,151 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:52,152 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,152 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:43:52,152 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:52,152 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:43:52,152 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:52,152 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:52,152 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:43:52,152 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:52,152 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,152 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:52,152 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,152 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:52,153 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:52,153 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,153 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:52,153 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF017B690>
2025-07-25 10:43:52,153 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:52,153 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:52,153 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:52,153 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:52,153 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:52,153 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:52,153 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF017B690>
2025-07-25 10:43:52,153 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:52,153 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:52,153 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:43:52,154 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,154 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:52,154 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:43:52,154 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,154 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:43:52,154 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,155 - DEBUG - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,155 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,155 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:43:52,155 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:52,155 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:52,155 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:52,155 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,155 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,155 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:52,155 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,155 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:52,155 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF017B690>
2025-07-25 10:43:52,155 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,156 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:52,156 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024AF017B690>
2025-07-25 10:43:52,156 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:52,156 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:52,156 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:52,156 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024AF0179490>],
             376: [<numba.core.ir.Assign object at 0x0000024AF0119390>],
             648: [<numba.core.ir.Assign object at 0x0000024AF0118CD0>]})
2025-07-25 10:43:52,156 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 10:43:52,156 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157A10>
2025-07-25 10:43:52,156 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 10:43:52,156 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 10:43:52,156 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 10:43:52,157 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 10:43:52,157 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 10:43:52,157 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 10:43:52,157 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 10:43:52,157 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 10:43:52,157 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 10:43:52,157 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,157 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 10:43:52,157 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 10:43:52,157 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 10:43:52,157 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 10:43:52,157 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 10:43:52,157 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 10:43:52,158 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 10:43:52,158 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 10:43:52,158 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 10:43:52,158 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,158 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 10:43:52,158 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 10:43:52,158 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,158 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 10:43:52,158 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 10:43:52,159 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 10:43:52,159 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 10:43:52,159 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,159 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 10:43:52,159 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 10:43:52,159 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,159 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 10:43:52,159 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157A10>
2025-07-25 10:43:52,159 - DEBUG - on stmt: jump 178
2025-07-25 10:43:52,159 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 10:43:52,159 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157A10>
2025-07-25 10:43:52,159 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 10:43:52,159 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 10:43:52,160 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 10:43:52,160 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 10:43:52,160 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 10:43:52,160 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 10:43:52,160 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157A10>
2025-07-25 10:43:52,160 - DEBUG - on stmt: t = $phi180.1
2025-07-25 10:43:52,160 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,160 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 10:43:52,160 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,160 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 10:43:52,160 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 10:43:52,160 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 10:43:52,161 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 10:43:52,161 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,161 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 10:43:52,161 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 10:43:52,161 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 10:43:52,161 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 10:43:52,161 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 10:43:52,161 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 10:43:52,161 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,161 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 10:43:52,161 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,162 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 10:43:52,162 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 10:43:52,162 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,162 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 10:43:52,162 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157A10>
2025-07-25 10:43:52,162 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 10:43:52,162 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 10:43:52,162 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 10:43:52,162 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 10:43:52,162 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 10:43:52,162 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 10:43:52,163 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157A10>
2025-07-25 10:43:52,163 - DEBUG - on stmt: i = $phi376.2
2025-07-25 10:43:52,163 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 10:43:52,163 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 10:43:52,163 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,163 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 10:43:52,163 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 10:43:52,164 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,164 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 10:43:52,164 - DEBUG - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 10:43:52,164 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,164 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 10:43:52,164 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 10:43:52,164 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,164 - DEBUG - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 10:43:52,164 - DEBUG - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
2025-07-25 10:43:52,164 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,164 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 10:43:52,164 - DEBUG - on stmt: jump 374
2025-07-25 10:43:52,164 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 10:43:52,165 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157A10>
2025-07-25 10:43:52,165 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 10:43:52,165 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 10:43:52,165 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 10:43:52,165 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 10:43:52,165 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,165 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 10:43:52,165 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 10:43:52,165 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 10:43:52,165 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 10:43:52,165 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 10:43:52,165 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 10:43:52,165 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 10:43:52,166 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,166 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 10:43:52,166 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 10:43:52,166 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 10:43:52,166 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 10:43:52,166 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,166 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 10:43:52,166 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157A10>
2025-07-25 10:43:52,166 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 10:43:52,166 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 10:43:52,167 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 10:43:52,167 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 10:43:52,167 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 10:43:52,167 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 10:43:52,167 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157A10>
2025-07-25 10:43:52,167 - DEBUG - on stmt: k = $phi648.2
2025-07-25 10:43:52,167 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 10:43:52,167 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 10:43:52,167 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 10:43:52,167 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 10:43:52,168 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 10:43:52,168 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 10:43:52,168 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 10:43:52,168 - DEBUG - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 10:43:52,168 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 10:43:52,168 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 10:43:52,168 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 10:43:52,168 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 10:43:52,168 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 10:43:52,168 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,168 - DEBUG - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 10:43:52,169 - DEBUG - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
2025-07-25 10:43:52,169 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 10:43:52,169 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 10:43:52,169 - DEBUG - on stmt: jump 646
2025-07-25 10:43:52,169 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 10:43:52,169 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157A10>
2025-07-25 10:43:52,169 - DEBUG - on stmt: jump 176
2025-07-25 10:43:52,169 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 10:43:52,169 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024AF0157A10>
2025-07-25 10:43:52,169 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 10:43:52,169 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 10:43:52,169 - DEBUG - on stmt: return $784return_value.1
2025-07-25 10:43:52,545 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-07-25 10:43:52,546 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 10:43:52,546 - DEBUG - stack: []
2025-07-25 10:43:52,546 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 10:43:52,547 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-07-25 10:43:52,547 - DEBUG - stack []
2025-07-25 10:43:52,547 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-07-25 10:43:52,547 - DEBUG - stack []
2025-07-25 10:43:52,547 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:43:52,548 - DEBUG - stack []
2025-07-25 10:43:52,548 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-07-25 10:43:52,548 - DEBUG - stack ['$x4.0']
2025-07-25 10:43:52,548 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:43:52,548 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-07-25 10:43:52,548 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:43:52,549 - DEBUG - stack ['$8binary_subscr.2']
2025-07-25 10:43:52,549 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-07-25 10:43:52,549 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-07-25 10:43:52,549 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:43:52,549 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-07-25 10:43:52,549 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-07-25 10:43:52,549 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-07-25 10:43:52,550 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-07-25 10:43:52,550 - DEBUG - stack ['$binop_add32.6']
2025-07-25 10:43:52,550 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 10:43:52,550 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-07-25 10:43:52,550 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-07-25 10:43:52,551 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-07-25 10:43:52,551 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 10:43:52,551 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-07-25 10:43:52,551 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-07-25 10:43:52,551 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-07-25 10:43:52,552 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-07-25 10:43:52,552 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-07-25 10:43:52,552 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-07-25 10:43:52,552 - DEBUG - stack ['$binop_sub56.12']
2025-07-25 10:43:52,552 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 10:43:52,552 - DEBUG - stack []
2025-07-25 10:43:52,553 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-07-25 10:43:52,553 - DEBUG - stack ['$x62.13']
2025-07-25 10:43:52,553 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 10:43:52,553 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-07-25 10:43:52,553 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 10:43:52,553 - DEBUG - stack ['$66binary_subscr.15']
2025-07-25 10:43:52,553 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-07-25 10:43:52,553 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-07-25 10:43:52,553 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 10:43:52,554 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-07-25 10:43:52,554 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-07-25 10:43:52,554 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-07-25 10:43:52,554 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-07-25 10:43:52,554 - DEBUG - stack ['$binop_sub90.19']
2025-07-25 10:43:52,554 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-07-25 10:43:52,555 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-07-25 10:43:52,555 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-07-25 10:43:52,555 - DEBUG - stack ['$binop_truediv96.21']
2025-07-25 10:43:52,555 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 10:43:52,555 - DEBUG - stack []
2025-07-25 10:43:52,555 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 10:43:52,555 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-07-25 10:43:52,555 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-07-25 10:43:52,556 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-07-25 10:43:52,556 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-07-25 10:43:52,556 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 10:43:52,556 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-07-25 10:43:52,556 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 10:43:52,556 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 10:43:52,556 - DEBUG - stack ['$130call.26']
2025-07-25 10:43:52,556 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 10:43:52,557 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-07-25 10:43:52,557 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-07-25 10:43:52,557 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-07-25 10:43:52,557 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-07-25 10:43:52,557 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 10:43:52,557 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-07-25 10:43:52,557 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 10:43:52,557 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-07-25 10:43:52,558 - DEBUG - stack ['$130call.26', '$168call.31']
2025-07-25 10:43:52,558 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-07-25 10:43:52,558 - DEBUG - stack ['$178compare_op.32']
2025-07-25 10:43:52,558 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-25 10:43:52,558 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-25 10:43:52,558 - DEBUG - stack: []
2025-07-25 10:43:52,558 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-07-25 10:43:52,559 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-07-25 10:43:52,559 - DEBUG - stack []
2025-07-25 10:43:52,559 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-07-25 10:43:52,559 - DEBUG - stack ['$const186.0.4']
2025-07-25 10:43:52,559 - DEBUG - end state. edges=[]
2025-07-25 10:43:52,559 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-07-25 10:43:52,559 - DEBUG - stack: []
2025-07-25 10:43:52,560 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-25 10:43:52,560 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-07-25 10:43:52,560 - DEBUG - stack []
2025-07-25 10:43:52,560 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-07-25 10:43:52,560 - DEBUG - stack ['$b190.0']
2025-07-25 10:43:52,560 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-07-25 10:43:52,560 - DEBUG - stack ['$192unary_negative.1']
2025-07-25 10:43:52,560 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-07-25 10:43:52,560 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-07-25 10:43:52,560 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-07-25 10:43:52,561 - DEBUG - stack ['$binop_truediv196.3']
2025-07-25 10:43:52,561 - DEBUG - end state. edges=[]
2025-07-25 10:43:52,561 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 10:43:52,561 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-25 10:43:52,561 - DEBUG - defmap: {}
2025-07-25 10:43:52,561 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:43:52,561 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 10:43:52,561 - DEBUG - keep phismap: {}
2025-07-25 10:43:52,562 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 10:43:52,562 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 10:43:52,562 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-07-25 10:43:52,562 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:43:52,563 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 10:43:52,564 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-07-25 10:43:52,622 - DEBUG - BPM-Wert ermittelt: 172
2025-07-25 10:43:54,854 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 10:44:05,149 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 10:44:17,443 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 10:44:31,704 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 10:44:35,773 - INFO - Tags gespeichert für: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 10:44:35,774 - ERROR - Fehler bei der Verarbeitung von data\05. Untergrund (Feat. Eko Fresh).mp3: 'NoneType' object is not subscriptable
2025-07-25 10:44:35,774 - INFO - Verarbeite Datei: data\08. Das Leben ist hart.mp3
2025-07-25 10:44:35,774 - INFO - Beginne Verarbeitung der Datei: data\08. Das Leben ist hart.mp3
2025-07-25 10:44:35,778 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Das Leben ist hart
2025-07-25 10:44:35,999 - DEBUG - BPM-Wert ermittelt: 83
2025-07-25 10:44:38,219 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 10:44:48,487 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:01:21,206 - DEBUG - Starte die Anwendung...
2025-07-25 11:01:21,206 - INFO - Verarbeite MP3-Datei...
2025-07-25 11:01:21,206 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 11:01:21,209 - DEBUG - Using proactor: IocpProactor
2025-07-25 11:01:21,211 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 11:01:21,363 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 11:01:21,372 - DEBUG - Using proactor: IocpProactor
2025-07-25 11:01:21,488 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 11:01:21,540 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=None socket_options=None
2025-07-25 11:01:21,541 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002274A972CD0>
2025-07-25 11:01:21,541 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 11:01:21,542 - DEBUG - send_request_headers.complete
2025-07-25 11:01:21,542 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 11:01:21,542 - DEBUG - send_request_body.complete
2025-07-25 11:01:21,542 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 11:01:21,542 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 09:01:21 GMT'), (b'server', b'uvicorn'), (b'content-length', b'4'), (b'content-type', b'application/json')])
2025-07-25 11:01:21,542 - INFO - HTTP Request: GET http://127.0.0.1:7860/gradio_api/startup-events "HTTP/1.1 200 OK"
2025-07-25 11:01:21,543 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 11:01:21,543 - DEBUG - receive_response_body.complete
2025-07-25 11:01:21,543 - DEBUG - response_closed.started
2025-07-25 11:01:21,543 - DEBUG - response_closed.complete
2025-07-25 11:01:21,543 - DEBUG - close.started
2025-07-25 11:01:21,543 - DEBUG - close.complete
2025-07-25 11:01:21,544 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=3 socket_options=None
2025-07-25 11:01:21,559 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002274A8D2390>
2025-07-25 11:01:21,559 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000002274A697920> server_hostname='api.gradio.app' timeout=3
2025-07-25 11:01:21,562 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002274A97D410>
2025-07-25 11:01:21,562 - DEBUG - send_request_headers.started request=<Request [b'HEAD']>
2025-07-25 11:01:21,562 - DEBUG - send_request_headers.complete
2025-07-25 11:01:21,563 - DEBUG - send_request_body.started request=<Request [b'HEAD']>
2025-07-25 11:01:21,563 - DEBUG - send_request_body.complete
2025-07-25 11:01:21,563 - DEBUG - receive_response_headers.started request=<Request [b'HEAD']>
2025-07-25 11:01:21,625 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 09:01:21 GMT'), (b'server', b'uvicorn'), (b'content-length', b'25375'), (b'content-type', b'text/html; charset=utf-8')])
2025-07-25 11:01:21,625 - INFO - HTTP Request: HEAD http://127.0.0.1:7860/ "HTTP/1.1 200 OK"
2025-07-25 11:01:21,625 - DEBUG - receive_response_body.started request=<Request [b'HEAD']>
2025-07-25 11:01:21,626 - DEBUG - receive_response_body.complete
2025-07-25 11:01:21,626 - DEBUG - response_closed.started
2025-07-25 11:01:21,626 - DEBUG - response_closed.complete
2025-07-25 11:01:21,626 - DEBUG - close.started
2025-07-25 11:01:21,626 - DEBUG - close.complete
2025-07-25 11:01:21,628 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 11:01:21,764 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/launched HTTP/1.1" 200 0
2025-07-25 11:01:21,905 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002274A8D2B10>
2025-07-25 11:01:21,905 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 11:01:21,906 - DEBUG - send_request_headers.complete
2025-07-25 11:01:21,906 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 11:01:21,906 - DEBUG - send_request_body.complete
2025-07-25 11:01:21,907 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 11:01:22,076 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 09:01:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 11:01:22,077 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 11:01:22,077 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 11:01:22,077 - DEBUG - receive_response_body.complete
2025-07-25 11:01:22,077 - DEBUG - response_closed.started
2025-07-25 11:01:22,077 - DEBUG - response_closed.complete
2025-07-25 11:01:22,077 - DEBUG - close.started
2025-07-25 11:01:22,078 - DEBUG - close.complete
2025-07-25 11:01:58,393 - DEBUG - matplotlib data path: Z:\AI\software\miniconda3\envs\ace-data_env\Lib\site-packages\matplotlib\mpl-data
2025-07-25 11:01:58,402 - DEBUG - CONFIGDIR=C:\Users\methm\.matplotlib
2025-07-25 11:01:58,403 - DEBUG - interactive is False
2025-07-25 11:01:58,403 - DEBUG - platform is win32
2025-07-25 11:01:58,441 - DEBUG - CACHEDIR=C:\Users\methm\.matplotlib
2025-07-25 11:01:58,453 - DEBUG - Using fontManager instance from C:\Users\methm\.matplotlib\fontlist-v390.json
2025-07-25 11:01:58,711 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 11:01:58,711 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 11:01:58,712 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 11:01:58,713 - INFO - Verarbeite Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 11:01:58,713 - INFO - Beginne Verarbeitung der Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 11:01:58,721 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Untergrund (Feat. Eko Fresh)
2025-07-25 11:01:58,970 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
2025-07-25 11:01:58,971 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 11:01:58,971 - DEBUG - stack: []
2025-07-25 11:01:58,972 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 11:01:58,972 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-07-25 11:01:58,972 - DEBUG - stack []
2025-07-25 11:01:58,972 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
2025-07-25 11:01:58,972 - DEBUG - stack []
2025-07-25 11:01:58,972 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
2025-07-25 11:01:58,973 - DEBUG - stack []
2025-07-25 11:01:58,973 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
2025-07-25 11:01:58,973 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 11:01:58,973 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
2025-07-25 11:01:58,973 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2025-07-25 11:01:58,973 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
2025-07-25 11:01:58,973 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
2025-07-25 11:01:58,973 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
2025-07-25 11:01:58,973 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
2025-07-25 11:01:58,973 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
2025-07-25 11:01:58,974 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
2025-07-25 11:01:58,974 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
2025-07-25 11:01:58,974 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
2025-07-25 11:01:58,974 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
2025-07-25 11:01:58,974 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
2025-07-25 11:01:58,974 - DEBUG - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
2025-07-25 11:01:58,974 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 11:01:58,974 - DEBUG - dispatch pc=34, inst=CALL(arg=7, lineno=86)
2025-07-25 11:01:58,975 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 11:01:58,975 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
2025-07-25 11:01:58,975 - DEBUG - stack ['$34call.9']
2025-07-25 11:01:58,975 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
2025-07-25 11:01:58,975 - DEBUG - stack []
2025-07-25 11:01:58,975 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
2025-07-25 11:01:58,976 - DEBUG - stack ['$const46.10.0']
2025-07-25 11:01:58,976 - DEBUG - end state. edges=[]
2025-07-25 11:01:58,976 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 11:01:58,976 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-25 11:01:58,976 - DEBUG - defmap: {}
2025-07-25 11:01:58,976 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 11:01:58,977 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 11:01:58,977 - DEBUG - keep phismap: {}
2025-07-25 11:01:58,977 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 11:01:58,977 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 11:01:58,977 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10.0'}), (48, {'retval': '$const46.10.0', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 11:01:58,978 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000002274C9663E0>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10.0 = const(NoneType, None)    ['$const46.10.0']
    $48return_value.11 = cast(value=$const46.10.0) ['$48return_value.11', '$const46.10.0']
    return $48return_value.11                ['$48return_value.11']

2025-07-25 11:01:58,979 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 11:01:58,979 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002274C9C5D50>
2025-07-25 11:01:58,980 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:58,980 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:58,980 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:58,980 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:58,980 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:58,981 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:58,981 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:58,981 - DEBUG - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000002274C9663E0>))
2025-07-25 11:01:58,981 - DEBUG - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:58,981 - DEBUG - on stmt: $const46.10.0 = const(NoneType, None)
2025-07-25 11:01:58,981 - DEBUG - on stmt: $48return_value.11 = cast(value=$const46.10.0)
2025-07-25 11:01:58,981 - DEBUG - on stmt: return $48return_value.11
2025-07-25 11:01:58,981 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x000002274C9C54D0>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x000002274C9C5990>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002274C9C45D0>,
                                  0)],
             '$const46.10.0': [(<numba.core.ir.Assign object at 0x000002274C9C5790>,
                                0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000002274C9BBF90>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000002274C9BBE90>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000002274C9C40D0>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x000002274C9C4210>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x000002274C9BBD90>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x000002274C9BAFD0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002274C9C4310>, 0)]})
2025-07-25 11:01:58,982 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002274C9C5D50>
2025-07-25 11:01:58,985 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
2025-07-25 11:01:58,990 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 11:01:58,990 - DEBUG - stack: []
2025-07-25 11:01:58,990 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 11:01:58,990 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-07-25 11:01:58,990 - DEBUG - stack []
2025-07-25 11:01:58,990 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
2025-07-25 11:01:58,990 - DEBUG - stack []
2025-07-25 11:01:58,991 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
2025-07-25 11:01:58,991 - DEBUG - stack []
2025-07-25 11:01:58,991 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
2025-07-25 11:01:58,991 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 11:01:58,991 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
2025-07-25 11:01:58,991 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
2025-07-25 11:01:58,991 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
2025-07-25 11:01:58,991 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
2025-07-25 11:01:58,991 - DEBUG - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
2025-07-25 11:01:58,992 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 11:01:58,992 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=9)
2025-07-25 11:01:58,992 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 11:01:58,992 - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
2025-07-25 11:01:58,992 - DEBUG - stack ['$28call.5']
2025-07-25 11:01:58,992 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
2025-07-25 11:01:58,993 - DEBUG - stack []
2025-07-25 11:01:58,993 - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
2025-07-25 11:01:58,993 - DEBUG - stack ['$const40.6.1']
2025-07-25 11:01:58,993 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
2025-07-25 11:01:58,993 - DEBUG - stack []
2025-07-25 11:01:58,993 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
2025-07-25 11:01:58,993 - DEBUG - stack ['$const44.7.2']
2025-07-25 11:01:58,993 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
2025-07-25 11:01:58,994 - DEBUG - stack []
2025-07-25 11:01:58,994 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
2025-07-25 11:01:58,994 - DEBUG - stack ['$const48.8.1']
2025-07-25 11:01:58,994 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
2025-07-25 11:01:58,994 - DEBUG - stack []
2025-07-25 11:01:58,994 - DEBUG - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
2025-07-25 11:01:58,994 - DEBUG - stack ['$const52.9.1']
2025-07-25 11:01:58,994 - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
2025-07-25 11:01:58,994 - DEBUG - stack []
2025-07-25 11:01:58,994 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
2025-07-25 11:01:58,995 - DEBUG - stack ['$const56.10.2']
2025-07-25 11:01:58,995 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
2025-07-25 11:01:58,995 - DEBUG - stack []
2025-07-25 11:01:58,995 - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
2025-07-25 11:01:58,995 - DEBUG - stack ['$const60.11.1']
2025-07-25 11:01:58,995 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
2025-07-25 11:01:58,995 - DEBUG - stack []
2025-07-25 11:01:58,995 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
2025-07-25 11:01:58,995 - DEBUG - stack ['$const64.12.1']
2025-07-25 11:01:58,995 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
2025-07-25 11:01:58,995 - DEBUG - stack []
2025-07-25 11:01:58,995 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
2025-07-25 11:01:58,996 - DEBUG - stack ['$interp_win68.13']
2025-07-25 11:01:58,996 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
2025-07-25 11:01:58,996 - DEBUG - stack ['$70load_attr.14']
2025-07-25 11:01:58,996 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-07-25 11:01:58,996 - DEBUG - stack ['$70load_attr.14', '$const80.15.2']
2025-07-25 11:01:58,996 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
2025-07-25 11:01:58,996 - DEBUG - stack ['$82binary_subscr.16']
2025-07-25 11:01:58,997 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
2025-07-25 11:01:58,997 - DEBUG - stack []
2025-07-25 11:01:58,997 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
2025-07-25 11:01:58,997 - DEBUG - stack ['$x94.17']
2025-07-25 11:01:58,997 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
2025-07-25 11:01:58,997 - DEBUG - stack ['$96load_attr.18']
2025-07-25 11:01:58,997 - DEBUG - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-07-25 11:01:58,997 - DEBUG - stack ['$96load_attr.18', '$const106.19.2']
2025-07-25 11:01:58,998 - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
2025-07-25 11:01:58,998 - DEBUG - stack ['$108binary_subscr.20']
2025-07-25 11:01:58,998 - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
2025-07-25 11:01:58,998 - DEBUG - stack []
2025-07-25 11:01:58,998 - DEBUG - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
2025-07-25 11:01:58,998 - DEBUG - stack ['$t_out120.21']
2025-07-25 11:01:58,998 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
2025-07-25 11:01:58,998 - DEBUG - stack ['$122load_attr.22']
2025-07-25 11:01:58,998 - DEBUG - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-07-25 11:01:58,998 - DEBUG - stack ['$122load_attr.22', '$const132.23.2']
2025-07-25 11:01:58,998 - DEBUG - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
2025-07-25 11:01:58,998 - DEBUG - stack ['$134binary_subscr.24']
2025-07-25 11:01:58,999 - DEBUG - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
2025-07-25 11:01:58,999 - DEBUG - stack []
2025-07-25 11:01:58,999 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
2025-07-25 11:01:58,999 - DEBUG - stack ['$null$146.26', '$146load_global.25']
2025-07-25 11:01:58,999 - DEBUG - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
2025-07-25 11:01:58,999 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 11:01:58,999 - DEBUG - dispatch pc=164, inst=CALL(arg=1, lineno=23)
2025-07-25 11:01:58,999 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 11:01:58,999 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
2025-07-25 11:01:58,999 - DEBUG - stack ['$164call.28']
2025-07-25 11:01:58,999 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
2025-07-25 11:01:58,999 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2025-07-25 11:01:58,999 - DEBUG - stack: ['$phi176.0']
2025-07-25 11:01:58,999 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2025-07-25 11:01:59,000 - DEBUG - dispatch pc=176, inst=NOP(arg=1, lineno=23)
2025-07-25 11:01:59,000 - DEBUG - stack ['$phi176.0']
2025-07-25 11:01:59,000 - DEBUG - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
2025-07-25 11:01:59,000 - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=1)])
2025-07-25 11:01:59,000 - DEBUG - stack: ['$phi178.0']
2025-07-25 11:01:59,000 - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=1)
2025-07-25 11:01:59,000 - DEBUG - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
2025-07-25 11:01:59,001 - DEBUG - stack ['$phi178.0']
2025-07-25 11:01:59,001 - DEBUG - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
2025-07-25 11:01:59,001 - DEBUG - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
2025-07-25 11:01:59,001 - DEBUG - stack: []
2025-07-25 11:01:59,001 - DEBUG - state.pc_initial: State(pc_initial=782 nstack_initial=0)
2025-07-25 11:01:59,001 - DEBUG - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
2025-07-25 11:01:59,001 - DEBUG - stack []
2025-07-25 11:01:59,001 - DEBUG - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
2025-07-25 11:01:59,002 - DEBUG - stack ['$const782.0.0']
2025-07-25 11:01:59,002 - DEBUG - end state. edges=[]
2025-07-25 11:01:59,002 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2025-07-25 11:01:59,002 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2025-07-25 11:01:59,002 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2025-07-25 11:01:59,002 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
2025-07-25 11:01:59,002 - DEBUG - stack ['$phi180.0', '$phi180.1']
2025-07-25 11:01:59,002 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
2025-07-25 11:01:59,002 - DEBUG - stack ['$phi180.0']
2025-07-25 11:01:59,002 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
2025-07-25 11:01:59,002 - DEBUG - stack ['$phi180.0', '$t_out182.2']
2025-07-25 11:01:59,003 - DEBUG - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-07-25 11:01:59,003 - DEBUG - stack ['$phi180.0', '$t_out182.2', '$t184.3']
2025-07-25 11:01:59,003 - DEBUG - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
2025-07-25 11:01:59,003 - DEBUG - stack ['$phi180.0', '$186binary_subscr.4']
2025-07-25 11:01:59,003 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
2025-07-25 11:01:59,003 - DEBUG - stack ['$phi180.0']
2025-07-25 11:01:59,003 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
2025-07-25 11:01:59,003 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
2025-07-25 11:01:59,003 - DEBUG - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
2025-07-25 11:01:59,003 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 11:01:59,003 - DEBUG - dispatch pc=216, inst=CALL(arg=1, lineno=27)
2025-07-25 11:01:59,003 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 11:01:59,003 - DEBUG - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
2025-07-25 11:01:59,004 - DEBUG - stack ['$phi180.0', '$216call.8']
2025-07-25 11:01:59,004 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
2025-07-25 11:01:59,004 - DEBUG - stack ['$phi180.0']
2025-07-25 11:01:59,004 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
2025-07-25 11:01:59,004 - DEBUG - stack ['$phi180.0', '$scale228.9']
2025-07-25 11:01:59,004 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
2025-07-25 11:01:59,004 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
2025-07-25 11:01:59,004 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
2025-07-25 11:01:59,005 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
2025-07-25 11:01:59,005 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
2025-07-25 11:01:59,005 - DEBUG - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
2025-07-25 11:01:59,005 - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
2025-07-25 11:01:59,005 - DEBUG - stack ['$phi180.0', '$binop_mul238.13']
2025-07-25 11:01:59,005 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
2025-07-25 11:01:59,005 - DEBUG - stack ['$phi180.0']
2025-07-25 11:01:59,005 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
2025-07-25 11:01:59,006 - DEBUG - stack ['$phi180.0', '$frac244.14']
2025-07-25 11:01:59,006 - DEBUG - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
2025-07-25 11:01:59,006 - DEBUG - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
2025-07-25 11:01:59,006 - DEBUG - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
2025-07-25 11:01:59,006 - DEBUG - stack ['$phi180.0', '$binop_mul248.16']
2025-07-25 11:01:59,006 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
2025-07-25 11:01:59,006 - DEBUG - stack ['$phi180.0']
2025-07-25 11:01:59,006 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
2025-07-25 11:01:59,006 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
2025-07-25 11:01:59,007 - DEBUG - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
2025-07-25 11:01:59,007 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 11:01:59,007 - DEBUG - dispatch pc=272, inst=CALL(arg=1, lineno=34)
2025-07-25 11:01:59,007 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 11:01:59,007 - DEBUG - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
2025-07-25 11:01:59,007 - DEBUG - stack ['$phi180.0', '$272call.20']
2025-07-25 11:01:59,007 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
2025-07-25 11:01:59,007 - DEBUG - stack ['$phi180.0']
2025-07-25 11:01:59,007 - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
2025-07-25 11:01:59,007 - DEBUG - stack ['$phi180.0', '$index_frac284.21']
2025-07-25 11:01:59,007 - DEBUG - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
2025-07-25 11:01:59,007 - DEBUG - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
2025-07-25 11:01:59,007 - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
2025-07-25 11:01:59,008 - DEBUG - stack ['$phi180.0', '$binop_sub288.23']
2025-07-25 11:01:59,008 - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
2025-07-25 11:01:59,008 - DEBUG - stack ['$phi180.0']
2025-07-25 11:01:59,008 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
2025-07-25 11:01:59,008 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
2025-07-25 11:01:59,008 - DEBUG - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
2025-07-25 11:01:59,008 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
2025-07-25 11:01:59,008 - DEBUG - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
2025-07-25 11:01:59,008 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27.3']
2025-07-25 11:01:59,009 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
2025-07-25 11:01:59,009 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
2025-07-25 11:01:59,009 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
2025-07-25 11:01:59,009 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
2025-07-25 11:01:59,009 - DEBUG - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
2025-07-25 11:01:59,009 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
2025-07-25 11:01:59,009 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
2025-07-25 11:01:59,010 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
2025-07-25 11:01:59,010 - DEBUG - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
2025-07-25 11:01:59,010 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
2025-07-25 11:01:59,010 - DEBUG - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
2025-07-25 11:01:59,010 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 11:01:59,010 - DEBUG - dispatch pc=332, inst=CALL(arg=2, lineno=40)
2025-07-25 11:01:59,010 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 11:01:59,010 - DEBUG - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
2025-07-25 11:01:59,011 - DEBUG - stack ['$phi180.0', '$332call.34']
2025-07-25 11:01:59,011 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
2025-07-25 11:01:59,011 - DEBUG - stack ['$phi180.0']
2025-07-25 11:01:59,011 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
2025-07-25 11:01:59,011 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
2025-07-25 11:01:59,011 - DEBUG - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
2025-07-25 11:01:59,011 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 11:01:59,011 - DEBUG - dispatch pc=362, inst=CALL(arg=1, lineno=41)
2025-07-25 11:01:59,012 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 11:01:59,012 - DEBUG - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
2025-07-25 11:01:59,012 - DEBUG - stack ['$phi180.0', '$362call.38']
2025-07-25 11:01:59,012 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
2025-07-25 11:01:59,012 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2)])
2025-07-25 11:01:59,012 - DEBUG - stack: ['$phi374.0', '$phi374.1']
2025-07-25 11:01:59,012 - DEBUG - state.pc_initial: State(pc_initial=374 nstack_initial=2)
2025-07-25 11:01:59,012 - DEBUG - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
2025-07-25 11:01:59,012 - DEBUG - stack ['$phi374.0', '$phi374.1']
2025-07-25 11:01:59,012 - DEBUG - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
2025-07-25 11:01:59,013 - DEBUG - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
2025-07-25 11:01:59,013 - DEBUG - stack: ['$phi500.0']
2025-07-25 11:01:59,013 - DEBUG - state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-07-25 11:01:59,013 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
2025-07-25 11:01:59,013 - DEBUG - stack ['$phi500.0']
2025-07-25 11:01:59,013 - DEBUG - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
2025-07-25 11:01:59,013 - DEBUG - stack ['$phi500.0', '$scale500.1']
2025-07-25 11:01:59,014 - DEBUG - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
2025-07-25 11:01:59,014 - DEBUG - stack ['$phi500.0', '$scale500.1', '$frac502.2']
2025-07-25 11:01:59,014 - DEBUG - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
2025-07-25 11:01:59,014 - DEBUG - stack ['$phi500.0', '$binop_sub504.3']
2025-07-25 11:01:59,014 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
2025-07-25 11:01:59,014 - DEBUG - stack ['$phi500.0']
2025-07-25 11:01:59,014 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
2025-07-25 11:01:59,014 - DEBUG - stack ['$phi500.0', '$frac510.4']
2025-07-25 11:01:59,015 - DEBUG - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
2025-07-25 11:01:59,015 - DEBUG - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
2025-07-25 11:01:59,015 - DEBUG - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
2025-07-25 11:01:59,015 - DEBUG - stack ['$phi500.0', '$binop_mul514.6']
2025-07-25 11:01:59,015 - DEBUG - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
2025-07-25 11:01:59,015 - DEBUG - stack ['$phi500.0']
2025-07-25 11:01:59,015 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
2025-07-25 11:01:59,015 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
2025-07-25 11:01:59,015 - DEBUG - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
2025-07-25 11:01:59,015 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 11:01:59,015 - DEBUG - dispatch pc=538, inst=CALL(arg=1, lineno=54)
2025-07-25 11:01:59,015 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 11:01:59,016 - DEBUG - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
2025-07-25 11:01:59,016 - DEBUG - stack ['$phi500.0', '$538call.10']
2025-07-25 11:01:59,016 - DEBUG - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
2025-07-25 11:01:59,016 - DEBUG - stack ['$phi500.0']
2025-07-25 11:01:59,016 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
2025-07-25 11:01:59,016 - DEBUG - stack ['$phi500.0', '$index_frac550.11']
2025-07-25 11:01:59,016 - DEBUG - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
2025-07-25 11:01:59,016 - DEBUG - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
2025-07-25 11:01:59,016 - DEBUG - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
2025-07-25 11:01:59,016 - DEBUG - stack ['$phi500.0', '$binop_sub554.13']
2025-07-25 11:01:59,017 - DEBUG - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
2025-07-25 11:01:59,017 - DEBUG - stack ['$phi500.0']
2025-07-25 11:01:59,017 - DEBUG - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
2025-07-25 11:01:59,017 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
2025-07-25 11:01:59,017 - DEBUG - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
2025-07-25 11:01:59,017 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
2025-07-25 11:01:59,017 - DEBUG - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 11:01:59,017 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
2025-07-25 11:01:59,018 - DEBUG - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
2025-07-25 11:01:59,018 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
2025-07-25 11:01:59,018 - DEBUG - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 11:01:59,018 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19.3']
2025-07-25 11:01:59,018 - DEBUG - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
2025-07-25 11:01:59,018 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
2025-07-25 11:01:59,018 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
2025-07-25 11:01:59,018 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
2025-07-25 11:01:59,019 - DEBUG - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 11:01:59,019 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
2025-07-25 11:01:59,019 - DEBUG - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
2025-07-25 11:01:59,019 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
2025-07-25 11:01:59,019 - DEBUG - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
2025-07-25 11:01:59,019 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
2025-07-25 11:01:59,019 - DEBUG - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
2025-07-25 11:01:59,019 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 11:01:59,019 - DEBUG - dispatch pc=604, inst=CALL(arg=2, lineno=60)
2025-07-25 11:01:59,019 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 11:01:59,019 - DEBUG - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
2025-07-25 11:01:59,019 - DEBUG - stack ['$phi500.0', '$604call.26']
2025-07-25 11:01:59,020 - DEBUG - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
2025-07-25 11:01:59,020 - DEBUG - stack ['$phi500.0']
2025-07-25 11:01:59,020 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
2025-07-25 11:01:59,020 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
2025-07-25 11:01:59,020 - DEBUG - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
2025-07-25 11:01:59,020 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 11:01:59,020 - DEBUG - dispatch pc=634, inst=CALL(arg=1, lineno=61)
2025-07-25 11:01:59,020 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 11:01:59,020 - DEBUG - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
2025-07-25 11:01:59,020 - DEBUG - stack ['$phi500.0', '$634call.30']
2025-07-25 11:01:59,021 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
2025-07-25 11:01:59,021 - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
2025-07-25 11:01:59,021 - DEBUG - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 11:01:59,021 - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=3)
2025-07-25 11:01:59,021 - DEBUG - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
2025-07-25 11:01:59,021 - DEBUG - stack ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 11:01:59,021 - DEBUG - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
2025-07-25 11:01:59,022 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 11:01:59,022 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
2025-07-25 11:01:59,022 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
2025-07-25 11:01:59,022 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
2025-07-25 11:01:59,022 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
2025-07-25 11:01:59,022 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
2025-07-25 11:01:59,022 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
2025-07-25 11:01:59,023 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
2025-07-25 11:01:59,023 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
2025-07-25 11:01:59,023 - DEBUG - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 11:01:59,023 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
2025-07-25 11:01:59,023 - DEBUG - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-07-25 11:01:59,023 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
2025-07-25 11:01:59,023 - DEBUG - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
2025-07-25 11:01:59,023 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
2025-07-25 11:01:59,023 - DEBUG - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
2025-07-25 11:01:59,023 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
2025-07-25 11:01:59,023 - DEBUG - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
2025-07-25 11:01:59,023 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
2025-07-25 11:01:59,024 - DEBUG - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
2025-07-25 11:01:59,024 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
2025-07-25 11:01:59,024 - DEBUG - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
2025-07-25 11:01:59,024 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
2025-07-25 11:01:59,024 - DEBUG - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 11:01:59,024 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
2025-07-25 11:01:59,024 - DEBUG - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
2025-07-25 11:01:59,024 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
2025-07-25 11:01:59,024 - DEBUG - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-07-25 11:01:59,024 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
2025-07-25 11:01:59,025 - DEBUG - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 11:01:59,025 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
2025-07-25 11:01:59,025 - DEBUG - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 11:01:59,025 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
2025-07-25 11:01:59,025 - DEBUG - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
2025-07-25 11:01:59,025 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
2025-07-25 11:01:59,025 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
2025-07-25 11:01:59,025 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 11:01:59,026 - DEBUG - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
2025-07-25 11:01:59,026 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20']
2025-07-25 11:01:59,026 - DEBUG - dispatch pc=446, inst=COPY(arg=2, lineno=47)
2025-07-25 11:01:59,026 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
2025-07-25 11:01:59,026 - DEBUG - dispatch pc=448, inst=COPY(arg=2, lineno=47)
2025-07-25 11:01:59,026 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
2025-07-25 11:01:59,026 - DEBUG - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 11:01:59,026 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
2025-07-25 11:01:59,026 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
2025-07-25 11:01:59,027 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
2025-07-25 11:01:59,027 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
2025-07-25 11:01:59,027 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
2025-07-25 11:01:59,027 - DEBUG - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
2025-07-25 11:01:59,027 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
2025-07-25 11:01:59,027 - DEBUG - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
2025-07-25 11:01:59,027 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
2025-07-25 11:01:59,027 - DEBUG - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
2025-07-25 11:01:59,027 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
2025-07-25 11:01:59,027 - DEBUG - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 11:01:59,027 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
2025-07-25 11:01:59,028 - DEBUG - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
2025-07-25 11:01:59,028 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
2025-07-25 11:01:59,028 - DEBUG - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
2025-07-25 11:01:59,028 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
2025-07-25 11:01:59,028 - DEBUG - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
2025-07-25 11:01:59,028 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
2025-07-25 11:01:59,028 - DEBUG - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
2025-07-25 11:01:59,028 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
2025-07-25 11:01:59,028 - DEBUG - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-07-25 11:01:59,028 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
2025-07-25 11:01:59,028 - DEBUG - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
2025-07-25 11:01:59,028 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 11:01:59,029 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
2025-07-25 11:01:59,029 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
2025-07-25 11:01:59,029 - DEBUG - stack: ['$phi646.0', '$phi646.1']
2025-07-25 11:01:59,029 - DEBUG - state.pc_initial: State(pc_initial=646 nstack_initial=2)
2025-07-25 11:01:59,029 - DEBUG - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
2025-07-25 11:01:59,029 - DEBUG - stack ['$phi646.0', '$phi646.1']
2025-07-25 11:01:59,029 - DEBUG - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
2025-07-25 11:01:59,029 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 11:01:59,029 - DEBUG - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 11:01:59,030 - DEBUG - stack: ['$phi778.0']
2025-07-25 11:01:59,030 - DEBUG - state.pc_initial: State(pc_initial=778 nstack_initial=1)
2025-07-25 11:01:59,030 - DEBUG - dispatch pc=778, inst=NOP(arg=1, lineno=61)
2025-07-25 11:01:59,030 - DEBUG - stack ['$phi778.0']
2025-07-25 11:01:59,030 - DEBUG - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
2025-07-25 11:01:59,030 - DEBUG - stack ['$phi778.0']
2025-07-25 11:01:59,031 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
2025-07-25 11:01:59,031 - DEBUG - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
2025-07-25 11:01:59,031 - DEBUG - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 11:01:59,031 - DEBUG - state.pc_initial: State(pc_initial=648 nstack_initial=3)
2025-07-25 11:01:59,031 - DEBUG - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
2025-07-25 11:01:59,032 - DEBUG - stack ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 11:01:59,032 - DEBUG - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
2025-07-25 11:01:59,032 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 11:01:59,032 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
2025-07-25 11:01:59,032 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
2025-07-25 11:01:59,032 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
2025-07-25 11:01:59,032 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
2025-07-25 11:01:59,032 - DEBUG - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
2025-07-25 11:01:59,033 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
2025-07-25 11:01:59,033 - DEBUG - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
2025-07-25 11:01:59,033 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
2025-07-25 11:01:59,033 - DEBUG - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 11:01:59,033 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
2025-07-25 11:01:59,033 - DEBUG - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-07-25 11:01:59,033 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
2025-07-25 11:01:59,033 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
2025-07-25 11:01:59,034 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
2025-07-25 11:01:59,034 - DEBUG - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
2025-07-25 11:01:59,034 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
2025-07-25 11:01:59,034 - DEBUG - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
2025-07-25 11:01:59,034 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
2025-07-25 11:01:59,034 - DEBUG - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
2025-07-25 11:01:59,034 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
2025-07-25 11:01:59,035 - DEBUG - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
2025-07-25 11:01:59,035 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
2025-07-25 11:01:59,035 - DEBUG - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 11:01:59,035 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
2025-07-25 11:01:59,035 - DEBUG - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
2025-07-25 11:01:59,035 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
2025-07-25 11:01:59,035 - DEBUG - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-07-25 11:01:59,035 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
2025-07-25 11:01:59,036 - DEBUG - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 11:01:59,036 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
2025-07-25 11:01:59,036 - DEBUG - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 11:01:59,036 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
2025-07-25 11:01:59,036 - DEBUG - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
2025-07-25 11:01:59,036 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
2025-07-25 11:01:59,036 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
2025-07-25 11:01:59,036 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 11:01:59,036 - DEBUG - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
2025-07-25 11:01:59,036 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20']
2025-07-25 11:01:59,037 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=66)
2025-07-25 11:01:59,037 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
2025-07-25 11:01:59,037 - DEBUG - dispatch pc=720, inst=COPY(arg=2, lineno=66)
2025-07-25 11:01:59,037 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
2025-07-25 11:01:59,037 - DEBUG - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 11:01:59,037 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
2025-07-25 11:01:59,037 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
2025-07-25 11:01:59,037 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
2025-07-25 11:01:59,037 - DEBUG - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
2025-07-25 11:01:59,037 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
2025-07-25 11:01:59,037 - DEBUG - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
2025-07-25 11:01:59,037 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
2025-07-25 11:01:59,038 - DEBUG - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
2025-07-25 11:01:59,038 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
2025-07-25 11:01:59,038 - DEBUG - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 11:01:59,038 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
2025-07-25 11:01:59,038 - DEBUG - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
2025-07-25 11:01:59,038 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
2025-07-25 11:01:59,039 - DEBUG - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 11:01:59,039 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28.3']
2025-07-25 11:01:59,039 - DEBUG - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 11:01:59,039 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
2025-07-25 11:01:59,039 - DEBUG - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
2025-07-25 11:01:59,039 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
2025-07-25 11:01:59,039 - DEBUG - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
2025-07-25 11:01:59,039 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
2025-07-25 11:01:59,040 - DEBUG - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
2025-07-25 11:01:59,040 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
2025-07-25 11:01:59,040 - DEBUG - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
2025-07-25 11:01:59,040 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
2025-07-25 11:01:59,040 - DEBUG - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-07-25 11:01:59,040 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
2025-07-25 11:01:59,040 - DEBUG - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
2025-07-25 11:01:59,040 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 11:01:59,040 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
2025-07-25 11:01:59,040 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
2025-07-25 11:01:59,041 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2)])
2025-07-25 11:01:59,041 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 11:01:59,041 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
2025-07-25 11:01:59,041 - DEBUG - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
2025-07-25 11:01:59,042 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
2025-07-25 11:01:59,043 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 11:01:59,044 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 11:01:59,046 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 11:01:59,047 - DEBUG - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
2025-07-25 11:01:59,047 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
2025-07-25 11:01:59,047 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 11:01:59,048 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6.1'}), (42, {'value': '$const40.6.1'}), (44, {'res': '$const44.7.2'}), (46, {'value': '$const44.7.2'}), (48, {'res': '$const48.8.1'}), (50, {'value': '$const48.8.1'}), (52, {'res': '$const52.9.1'}), (54, {'value': '$const52.9.1'}), (56, {'res': '$const56.10.2'}), (58, {'value': '$const56.10.2'}), (60, {'res': '$const60.11.1'}), (62, {'value': '$const60.11.1'}), (64, {'res': '$const64.12.1'}), (66, {'value': '$const64.12.1'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15.2'}), (82, {'index': '$const80.15.2', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19.2'}), (108, {'index': '$const106.19.2', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23.2'}), (134, {'index': '$const132.23.2', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
2025-07-25 11:01:59,048 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
2025-07-25 11:01:59,048 - DEBUG - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
2025-07-25 11:01:59,048 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27.3'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27.3', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
2025-07-25 11:01:59,049 - DEBUG - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
2025-07-25 11:01:59,049 - DEBUG - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
2025-07-25 11:01:59,050 - DEBUG - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19.3'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19.3', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
2025-07-25 11:01:59,050 - DEBUG - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
2025-07-25 11:01:59,050 - DEBUG - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28.3'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28.3', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
2025-07-25 11:01:59,051 - DEBUG - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
2025-07-25 11:01:59,051 - DEBUG - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0.0'}), (784, {'retval': '$const782.0.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 11:01:59,053 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15.2 = const(int, 0)            ['$const80.15.2']
    nwin = getitem(value=$70load_attr.14, index=$const80.15.2, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15.2', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19.2 = const(int, 0)           ['$const106.19.2']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19.2, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19.2', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23.2 = const(int, 0)           ['$const132.23.2']
    n_out = getitem(value=$122load_attr.22, index=$const132.23.2, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23.2', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27.3 = const(int, 1)           ['$const308.27.3']
    $binop_add310.28 = n + $const308.27.3    ['$binop_add310.28', '$const308.27.3', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19.3 = const(int, 1)           ['$const580.19.3']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19.3 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19.3']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28.3 = const(int, 1)           ['$const744.28.3']
    $binop_add746.29 = $binop_add740.27 + $const744.28.3 ['$binop_add740.27', '$binop_add746.29', '$const744.28.3']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0.0 = const(NoneType, None)    ['$const782.0.0']
    $784return_value.1 = cast(value=$const782.0.0) ['$784return_value.1', '$const782.0.0']
    return $784return_value.1                ['$784return_value.1']

2025-07-25 11:01:59,078 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 11:01:59,078 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002274C9F9990>
2025-07-25 11:01:59,078 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,078 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,078 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,078 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,078 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,078 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,078 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,079 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,079 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,079 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,079 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,079 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,079 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,079 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,079 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,079 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,080 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,080 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,080 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,080 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,080 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,080 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,080 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,080 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,081 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,081 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,081 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,081 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,081 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,081 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,081 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,081 - DEBUG - ==== SSA block analysis pass on 176
2025-07-25 11:01:59,081 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002274C9F9990>
2025-07-25 11:01:59,081 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,081 - DEBUG - ==== SSA block analysis pass on 178
2025-07-25 11:01:59,082 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002274C9F9990>
2025-07-25 11:01:59,082 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,082 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,082 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,082 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,082 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,082 - DEBUG - ==== SSA block analysis pass on 180
2025-07-25 11:01:59,082 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002274C9F9990>
2025-07-25 11:01:59,082 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,083 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,083 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,083 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,083 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 11:01:59,083 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 11:01:59,083 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,083 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,083 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,083 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,084 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,084 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,084 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 11:01:59,084 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:01:59,084 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,084 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,084 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,084 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,084 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,085 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,085 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,085 - DEBUG - ==== SSA block analysis pass on 374
2025-07-25 11:01:59,085 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002274C9F9990>
2025-07-25 11:01:59,085 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,085 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,085 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,085 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,085 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,085 - DEBUG - ==== SSA block analysis pass on 376
2025-07-25 11:01:59,085 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002274C9F9990>
2025-07-25 11:01:59,086 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,086 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,086 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:01:59,086 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,086 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,086 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:01:59,086 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,086 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,086 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,086 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,086 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 11:01:59,086 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,087 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,087 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,087 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,087 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,087 - DEBUG - ==== SSA block analysis pass on 500
2025-07-25 11:01:59,087 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002274C9F9990>
2025-07-25 11:01:59,087 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:01:59,087 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 11:01:59,087 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,088 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,088 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,088 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,088 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,088 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 11:01:59,088 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,088 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,089 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:01:59,089 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,089 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,089 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,089 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,089 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,089 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,089 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,089 - DEBUG - ==== SSA block analysis pass on 646
2025-07-25 11:01:59,089 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002274C9F9990>
2025-07-25 11:01:59,089 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,089 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,090 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,090 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,090 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,090 - DEBUG - ==== SSA block analysis pass on 648
2025-07-25 11:01:59,090 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002274C9F9990>
2025-07-25 11:01:59,090 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,090 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,090 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:01:59,090 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,090 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,090 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:01:59,090 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,091 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,091 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,091 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,091 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 11:01:59,091 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,091 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,091 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,091 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,091 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,091 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,091 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,092 - DEBUG - ==== SSA block analysis pass on 778
2025-07-25 11:01:59,092 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002274C9F9990>
2025-07-25 11:01:59,092 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,092 - DEBUG - ==== SSA block analysis pass on 782
2025-07-25 11:01:59,092 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000002274C9F9990>
2025-07-25 11:01:59,092 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,092 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,092 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,092 - DEBUG - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x000002274CA14190>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x000002274CA149D0>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x000002274CA14F90>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x000002274CA15250>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x000002274CA14CD0>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x000002274CA153D0>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x000002274CA15550>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x000002274CA16010>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x000002274CA17650>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x000002274CA1C410>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x000002274CA1D810>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x000002274CA1DB90>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x000002274CA1DE50>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x000002274CA16190>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x000002274CA167D0>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x000002274CA171D0>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x000002274CA1E910>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x000002274CA1F710>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x000002274CCC4210>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x000002274CCC4CD0>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000002274C9D25D0>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x000002274CCC5950>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x000002274CCC6650>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x000002274CCC7C10>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x000002274CCC7FD0>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x000002274CCC8250>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x000002274CCC5B10>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x000002274CCC6050>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x000002274CCC7090>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x000002274CCC9290>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x000002274CCCA150>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x000002274CA0EE50>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x000002274CCCAC90>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x000002274CCCBC90>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x000002274CCCAF10>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x000002274CA0F790>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x000002274CA1C9D0>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x000002274CA1E710>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x000002274CA1F510>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x000002274CCC9090>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x000002274CCC9F90>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x000002274CCCB650>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x000002274CCCBA90>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x000002274CA1D2D0>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x000002274CCC7750>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x000002274CCC50D0>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x000002274CCCC250>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x000002274CA08ED0>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x000002274CA1E4D0>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x000002274CA1F290>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x000002274CA1F950>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x000002274CCC4F10>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x000002274CCC8E10>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x000002274CCC9D50>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x000002274CCCA450>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x000002274CCCBFD0>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x000002274CA16B90>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x000002274CA1CF10>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x000002274CCC4AD0>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x000002274C213B50>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x000002274CCC6B50>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x000002274CCC6ED0>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x000002274CCC73D0>,
                                   500)],
             '$const106.19.2': [(<numba.core.ir.Assign object at 0x000002274CA0FA10>,
                                 0)],
             '$const132.23.2': [(<numba.core.ir.Assign object at 0x000002274CA14450>,
                                 0)],
             '$const308.27.3': [(<numba.core.ir.Assign object at 0x000002274CA1C790>,
                                 180)],
             '$const580.19.3': [(<numba.core.ir.Assign object at 0x000002274CCC6CD0>,
                                 500)],
             '$const744.28.3': [(<numba.core.ir.Assign object at 0x000002274CCCB850>,
                                 648)],
             '$const782.0.0': [(<numba.core.ir.Assign object at 0x000002274CCC9850>,
                                782)],
             '$const80.15.2': [(<numba.core.ir.Assign object at 0x000002274CA0F090>,
                                0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x000002274CA08790>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x000002274CA15050>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x000002274C9B9B10>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x000002274CA17750>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x000002274CA1E0D0>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x000002274CCC7A90>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x000002274CA0E6D0>, 0),
                     (<numba.core.ir.Assign object at 0x000002274CA1C190>, 180),
                     (<numba.core.ir.Assign object at 0x000002274CCC63D0>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x000002274CA0DD10>, 0),
                      (<numba.core.ir.Assign object at 0x000002274CA16D90>,
                       180),
                      (<numba.core.ir.Assign object at 0x000002274CA1EED0>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x000002274CA1D090>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x000002274CA1D550>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x000002274CA0E050>,
                             0),
                            (<numba.core.ir.Assign object at 0x000002274CA173D0>,
                             180),
                            (<numba.core.ir.Assign object at 0x000002274CCC5690>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x000002274CA08A50>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000002274C9C4110>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000002274C9FA050>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x000002274CCC8490>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x000002274CCC7950>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x000002274CA0D9D0>, 0),
                   (<numba.core.ir.Assign object at 0x000002274CA163D0>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x000002274CA0D290>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x000002274CA0D8D0>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000002274C9C4250>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x000002274C21B010>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x000002274CA0E390>,
                         0),
                        (<numba.core.ir.Assign object at 0x000002274CA17AD0>,
                         180),
                        (<numba.core.ir.Assign object at 0x000002274CCC5D50>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x000002274C99BF10>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x000002274CA15810>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x000002274C9FAB90>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x000002274C9F4BD0>,
                                0),
                               (<numba.core.ir.Assign object at 0x000002274CA15D10>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x000002274CA0E9D0>,
                         0),
                        (<numba.core.ir.Assign object at 0x000002274CA1FB90>,
                         376),
                        (<numba.core.ir.Assign object at 0x000002274CCCA650>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x000002274C9FAFD0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000002274C998410>, 0)]})
2025-07-25 11:01:59,098 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000002274C96C850>
2025-07-25 11:01:59,099 - DEBUG - Fix SSA violator on var time_register
2025-07-25 11:01:59,099 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,099 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C4C2390>
2025-07-25 11:01:59,099 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,099 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,099 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,099 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,099 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,099 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,099 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,099 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,100 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,100 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,100 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,100 - DEBUG - first assign: time_register
2025-07-25 11:01:59,100 - DEBUG - replaced with: time_register = const(float, 0.0)
2025-07-25 11:01:59,100 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,101 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,101 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,101 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,101 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,101 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,101 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,101 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,101 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,102 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,102 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,102 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,102 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,102 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,102 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,102 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,102 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,102 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,102 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,102 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,102 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,102 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C4C2390>
2025-07-25 11:01:59,103 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,103 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,103 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C4C2390>
2025-07-25 11:01:59,103 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,103 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,103 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,103 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,103 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,103 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,103 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C4C2390>
2025-07-25 11:01:59,103 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,103 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,104 - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,104 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,104 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,104 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 11:01:59,104 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 11:01:59,104 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,104 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,104 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,104 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,105 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,105 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,105 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 11:01:59,105 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:01:59,105 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,105 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,105 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,105 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,105 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,106 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,106 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,106 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,106 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C4C2390>
2025-07-25 11:01:59,106 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,106 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,106 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,106 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,106 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,106 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,106 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C4C2390>
2025-07-25 11:01:59,106 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,106 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,106 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:01:59,107 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,107 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,107 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:01:59,107 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,107 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,107 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,107 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,107 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 11:01:59,107 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,107 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,107 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,108 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,108 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,108 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,108 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C4C2390>
2025-07-25 11:01:59,108 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:01:59,108 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 11:01:59,108 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,108 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,108 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,108 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,108 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,109 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 11:01:59,109 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,109 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,109 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:01:59,109 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,109 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,109 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,109 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,110 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,110 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,110 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,110 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,110 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C4C2390>
2025-07-25 11:01:59,110 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,110 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,110 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,110 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,110 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,110 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,111 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C4C2390>
2025-07-25 11:01:59,111 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,111 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,111 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:01:59,111 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,111 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,111 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:01:59,111 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,111 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,111 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,111 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,111 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 11:01:59,111 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,112 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,112 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,112 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,112 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,112 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,112 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,112 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,112 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C4C2390>
2025-07-25 11:01:59,112 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,112 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,113 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C4C2390>
2025-07-25 11:01:59,113 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,113 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,113 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,113 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002274CCC5A10>],
             180: [<numba.core.ir.Assign object at 0x000002274CA091D0>]})
2025-07-25 11:01:59,113 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,113 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9C7DD0>
2025-07-25 11:01:59,113 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,114 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,114 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,114 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,114 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,114 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,114 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,114 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,114 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,114 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,114 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,114 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,115 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,115 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,115 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,115 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,115 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,115 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,115 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,115 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,115 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,115 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,115 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,116 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,116 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,116 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,116 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,116 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,116 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,116 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,116 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,116 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,116 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9C7DD0>
2025-07-25 11:01:59,117 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,117 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,117 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9C7DD0>
2025-07-25 11:01:59,117 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,117 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,117 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,117 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,117 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,118 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,118 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9C7DD0>
2025-07-25 11:01:59,118 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,118 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,118 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,118 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,118 - DEBUG - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,118 - DEBUG - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,118 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 11:01:59,118 - DEBUG - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
2025-07-25 11:01:59,119 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n
2025-07-25 11:01:59,119 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 11:01:59,119 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,119 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,119 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,119 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,119 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,119 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,119 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 11:01:59,119 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:01:59,120 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,120 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,120 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,120 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,120 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,120 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,120 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,120 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,120 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9C7DD0>
2025-07-25 11:01:59,120 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,120 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,120 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,120 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,121 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,121 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,121 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9C7DD0>
2025-07-25 11:01:59,121 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,121 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,121 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:01:59,121 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,121 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,121 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:01:59,122 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,122 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,122 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,122 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,122 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 11:01:59,122 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,122 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,122 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,122 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,123 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,123 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,123 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9C7DD0>
2025-07-25 11:01:59,123 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:01:59,123 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 11:01:59,123 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,123 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,123 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,123 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,123 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,123 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 11:01:59,123 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,123 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,123 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:01:59,124 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,124 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,124 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,124 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,124 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,124 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,124 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,124 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,124 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9C7DD0>
2025-07-25 11:01:59,124 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,124 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,125 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,125 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,125 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,125 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,125 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9C7DD0>
2025-07-25 11:01:59,125 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,125 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,125 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:01:59,125 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,125 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,126 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:01:59,126 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,126 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,126 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,126 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,126 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 11:01:59,126 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,126 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,126 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,127 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,127 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,127 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,127 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,127 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,127 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9C7DD0>
2025-07-25 11:01:59,127 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,127 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,127 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9C7DD0>
2025-07-25 11:01:59,127 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,127 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,127 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,128 - DEBUG - Fix SSA violator on var n
2025-07-25 11:01:59,128 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,128 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C8FB190>
2025-07-25 11:01:59,128 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,128 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,128 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,128 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,128 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,128 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,128 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,128 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,128 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,128 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,129 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,129 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,129 - DEBUG - first assign: n
2025-07-25 11:01:59,129 - DEBUG - replaced with: n = const(int, 0)
2025-07-25 11:01:59,129 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,129 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,129 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,129 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,129 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,130 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,130 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,130 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,130 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,130 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,130 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,130 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,130 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,130 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,130 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,131 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,131 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,131 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,131 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,131 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,131 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C8FB190>
2025-07-25 11:01:59,131 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,131 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,131 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C8FB190>
2025-07-25 11:01:59,131 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,131 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,131 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,132 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,132 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,132 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,132 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C8FB190>
2025-07-25 11:01:59,132 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,132 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,132 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,132 - DEBUG - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,132 - DEBUG - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,132 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 11:01:59,132 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 11:01:59,132 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,132 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,133 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,133 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,133 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,133 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,133 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 11:01:59,133 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:01:59,133 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,133 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,133 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,133 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,133 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,134 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,134 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,134 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,134 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C8FB190>
2025-07-25 11:01:59,134 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,134 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,134 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,134 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,135 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,135 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,135 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C8FB190>
2025-07-25 11:01:59,135 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,135 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,135 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:01:59,135 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,135 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,135 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:01:59,135 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,136 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,136 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,136 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,136 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 11:01:59,136 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,136 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,136 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,136 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,136 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,136 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,136 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C8FB190>
2025-07-25 11:01:59,136 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:01:59,137 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 11:01:59,137 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,137 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,137 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,137 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,137 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,137 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 11:01:59,137 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,137 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,137 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:01:59,137 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,137 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,138 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,138 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,138 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,138 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,138 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,138 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,138 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C8FB190>
2025-07-25 11:01:59,138 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,139 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,139 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,139 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,139 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,139 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,139 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C8FB190>
2025-07-25 11:01:59,139 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,139 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,139 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:01:59,139 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,139 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,139 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:01:59,140 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,140 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,140 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,140 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,140 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 11:01:59,140 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,140 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,140 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,140 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,140 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,140 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,141 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,141 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,141 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C8FB190>
2025-07-25 11:01:59,141 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,141 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,141 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C8FB190>
2025-07-25 11:01:59,141 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,141 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,141 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,141 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002274CA0F290>],
             180: [<numba.core.ir.Assign object at 0x000002274C9C6710>]})
2025-07-25 11:01:59,141 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,142 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D0B50>
2025-07-25 11:01:59,142 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,142 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,142 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,142 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,142 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,142 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,142 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,142 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,142 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,143 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,143 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,143 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,143 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,143 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,143 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,143 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,143 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,143 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,143 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,143 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,144 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,144 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,144 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,144 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,144 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,144 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,144 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,144 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,144 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,144 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,144 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,144 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,145 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D0B50>
2025-07-25 11:01:59,145 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,145 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,145 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D0B50>
2025-07-25 11:01:59,145 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,145 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,145 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,145 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,145 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,145 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,145 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D0B50>
2025-07-25 11:01:59,146 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,146 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,146 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,146 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,146 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 11:01:59,146 - DEBUG - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
2025-07-25 11:01:59,146 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:01:59,146 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 11:01:59,146 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,147 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,147 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,147 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,147 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,147 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,147 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 11:01:59,147 - DEBUG - find_def var='n' stmt=$binop_add310.28 = n + $const308.27.3
2025-07-25 11:01:59,147 - DEBUG - replaced with: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:01:59,147 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:01:59,148 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,148 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,148 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,148 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,148 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,148 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,148 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,148 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,148 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D0B50>
2025-07-25 11:01:59,148 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,148 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,148 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,149 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,149 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,149 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,149 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D0B50>
2025-07-25 11:01:59,149 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,149 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,149 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:01:59,149 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,149 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,149 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:01:59,149 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,149 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,150 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,150 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,150 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 11:01:59,150 - DEBUG - find_def var='n' stmt=$binop_sub468.27 = n - i
2025-07-25 11:01:59,150 - DEBUG - find_def_from_top label 376
2025-07-25 11:01:59,150 - DEBUG - idom 374 from label 376
2025-07-25 11:01:59,150 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:01:59,150 - DEBUG - find_def_from_top label 374
2025-07-25 11:01:59,150 - DEBUG - idom 180 from label 374
2025-07-25 11:01:59,150 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:01:59,151 - DEBUG - replaced with: $binop_sub468.27 = n.1 - i
2025-07-25 11:01:59,151 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,151 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,151 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,151 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,151 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,151 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,151 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D0B50>
2025-07-25 11:01:59,152 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:01:59,152 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 11:01:59,152 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,152 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,152 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,152 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,152 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,152 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 11:01:59,152 - DEBUG - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
2025-07-25 11:01:59,152 - DEBUG - find_def_from_top label 500
2025-07-25 11:01:59,152 - DEBUG - idom 374 from label 500
2025-07-25 11:01:59,152 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:01:59,152 - DEBUG - find_def_from_top label 374
2025-07-25 11:01:59,153 - DEBUG - idom 180 from label 374
2025-07-25 11:01:59,153 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:01:59,153 - DEBUG - replaced with: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:01:59,153 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,153 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,153 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:01:59,153 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,153 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,153 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,153 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,153 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,153 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,153 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,154 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,154 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D0B50>
2025-07-25 11:01:59,154 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,154 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,154 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,154 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,154 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,154 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,154 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D0B50>
2025-07-25 11:01:59,154 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,154 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,155 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:01:59,155 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,155 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,155 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:01:59,155 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,155 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,155 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,155 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,155 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 11:01:59,156 - DEBUG - find_def var='n' stmt=$binop_add740.27 = n + k
2025-07-25 11:01:59,156 - DEBUG - find_def_from_top label 648
2025-07-25 11:01:59,156 - DEBUG - idom 646 from label 648
2025-07-25 11:01:59,156 - DEBUG - find_def_from_bottom label 646
2025-07-25 11:01:59,156 - DEBUG - find_def_from_top label 646
2025-07-25 11:01:59,156 - DEBUG - idom 500 from label 646
2025-07-25 11:01:59,156 - DEBUG - find_def_from_bottom label 500
2025-07-25 11:01:59,156 - DEBUG - find_def_from_top label 500
2025-07-25 11:01:59,156 - DEBUG - idom 374 from label 500
2025-07-25 11:01:59,156 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:01:59,156 - DEBUG - find_def_from_top label 374
2025-07-25 11:01:59,156 - DEBUG - idom 180 from label 374
2025-07-25 11:01:59,157 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:01:59,157 - DEBUG - replaced with: $binop_add740.27 = n.1 + k
2025-07-25 11:01:59,157 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,157 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,157 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,157 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,157 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,157 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,157 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,157 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,157 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D0B50>
2025-07-25 11:01:59,157 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,157 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,158 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D0B50>
2025-07-25 11:01:59,158 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,158 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,158 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,158 - DEBUG - Fix SSA violator on var frac
2025-07-25 11:01:59,158 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,158 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9C7090>
2025-07-25 11:01:59,158 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,158 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,158 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,158 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,159 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,159 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,159 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,159 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,159 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,159 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,159 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,159 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,159 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,160 - DEBUG - first assign: frac
2025-07-25 11:01:59,160 - DEBUG - replaced with: frac = const(float, 0.0)
2025-07-25 11:01:59,160 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,160 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,160 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,160 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,160 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,160 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,160 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,160 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,160 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,160 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,161 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,161 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,161 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,161 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,161 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,161 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,161 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,161 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,161 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,161 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9C7090>
2025-07-25 11:01:59,161 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,161 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,162 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9C7090>
2025-07-25 11:01:59,162 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,162 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,162 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,162 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,162 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,162 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,162 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9C7090>
2025-07-25 11:01:59,162 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,162 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,163 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,163 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,163 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:01:59,163 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 11:01:59,163 - DEBUG - replaced with: frac.1 = scale * $binop_sub234.12
2025-07-25 11:01:59,163 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,163 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,163 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,163 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,164 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,164 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,164 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:01:59,164 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:01:59,164 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,164 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,164 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,164 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,164 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,165 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,165 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,165 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,165 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9C7090>
2025-07-25 11:01:59,165 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,165 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,165 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,165 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,165 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,165 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,165 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9C7090>
2025-07-25 11:01:59,165 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,166 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,166 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:01:59,166 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,166 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,166 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:01:59,166 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,166 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,166 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,166 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,166 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:01:59,166 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,166 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,167 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,167 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,167 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,167 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,167 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9C7090>
2025-07-25 11:01:59,167 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:01:59,167 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 11:01:59,167 - DEBUG - replaced with: frac.2 = $binop_sub504.3
2025-07-25 11:01:59,168 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,168 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,168 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,168 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,168 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,168 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:01:59,168 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,168 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,168 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:01:59,169 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,169 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,169 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,169 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,169 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,169 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,169 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,169 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,169 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9C7090>
2025-07-25 11:01:59,169 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,169 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,169 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,170 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,170 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,170 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,170 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9C7090>
2025-07-25 11:01:59,170 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,170 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,170 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:01:59,170 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,170 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,170 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:01:59,170 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,170 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,171 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,171 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,171 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:01:59,171 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,171 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,171 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,171 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,171 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,171 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,171 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,172 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,172 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9C7090>
2025-07-25 11:01:59,172 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,172 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,172 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9C7090>
2025-07-25 11:01:59,172 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,172 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,172 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,172 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002274C9C7C90>],
             180: [<numba.core.ir.Assign object at 0x000002274C9F51D0>],
             500: [<numba.core.ir.Assign object at 0x000002274C9F7010>]})
2025-07-25 11:01:59,173 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,173 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9FA390>
2025-07-25 11:01:59,173 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,173 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,173 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,173 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,173 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,173 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,173 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,173 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,173 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,173 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,174 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,174 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,174 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,174 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,174 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,174 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,174 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,174 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,174 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,174 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,174 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,174 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,174 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,175 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,175 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,175 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,175 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,175 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,175 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,175 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,175 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,176 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,176 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9FA390>
2025-07-25 11:01:59,176 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,176 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,176 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9FA390>
2025-07-25 11:01:59,176 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,176 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,176 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,176 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,176 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,176 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,177 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9FA390>
2025-07-25 11:01:59,177 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,177 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,177 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,177 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,177 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:01:59,177 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:01:59,177 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,177 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 11:01:59,177 - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-07-25 11:01:59,177 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,177 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,178 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,178 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,178 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,178 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:01:59,178 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:01:59,178 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,178 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,178 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,178 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,178 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,178 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,178 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,178 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,179 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9FA390>
2025-07-25 11:01:59,179 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,179 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,179 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,179 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,179 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,179 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,179 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9FA390>
2025-07-25 11:01:59,179 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,179 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,180 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:01:59,180 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,180 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,180 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:01:59,180 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,180 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,180 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,180 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,180 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:01:59,180 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,181 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,181 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,181 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,181 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,181 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,181 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9FA390>
2025-07-25 11:01:59,181 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:01:59,181 - DEBUG - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
2025-07-25 11:01:59,181 - DEBUG - find_def_from_top label 500
2025-07-25 11:01:59,181 - DEBUG - idom 374 from label 500
2025-07-25 11:01:59,181 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:01:59,181 - DEBUG - find_def_from_top label 374
2025-07-25 11:01:59,182 - DEBUG - idom 180 from label 374
2025-07-25 11:01:59,182 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:01:59,182 - DEBUG - replaced with: $binop_sub504.3 = scale - frac.1
2025-07-25 11:01:59,182 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:01:59,182 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:01:59,182 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 11:01:59,182 - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-07-25 11:01:59,182 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,182 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,183 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,183 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,183 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:01:59,183 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,183 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,183 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:01:59,183 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,183 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,183 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,184 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,184 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,184 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,184 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,184 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,184 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9FA390>
2025-07-25 11:01:59,184 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,184 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,185 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,185 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,185 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,185 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,185 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9FA390>
2025-07-25 11:01:59,185 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,185 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,185 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:01:59,185 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,185 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,185 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:01:59,186 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,186 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,186 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,186 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,186 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:01:59,186 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,186 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,186 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,186 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,186 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,186 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,186 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,187 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,187 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9FA390>
2025-07-25 11:01:59,187 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,187 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,187 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9FA390>
2025-07-25 11:01:59,187 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,187 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,187 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,187 - DEBUG - Fix SSA violator on var index_frac
2025-07-25 11:01:59,187 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,187 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA0DF50>
2025-07-25 11:01:59,188 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,188 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,188 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,188 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,188 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,188 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,188 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,188 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,188 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,188 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,188 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,189 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,189 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,189 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,189 - DEBUG - first assign: index_frac
2025-07-25 11:01:59,189 - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-07-25 11:01:59,189 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,189 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,189 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,189 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,189 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,189 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,190 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,190 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,190 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,190 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,190 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,190 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,190 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,190 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,190 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,190 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,190 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,190 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,190 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA0DF50>
2025-07-25 11:01:59,191 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,191 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,191 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA0DF50>
2025-07-25 11:01:59,191 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,191 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,191 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,191 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,191 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,191 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,191 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA0DF50>
2025-07-25 11:01:59,191 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,191 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,192 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,192 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,192 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:01:59,192 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:01:59,192 - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-07-25 11:01:59,192 - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-07-25 11:01:59,192 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,192 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,192 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,193 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,193 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,193 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:01:59,193 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:01:59,193 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,193 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,193 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,193 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,193 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,193 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,194 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,194 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,194 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA0DF50>
2025-07-25 11:01:59,194 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,194 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,194 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,194 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,194 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,194 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,194 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA0DF50>
2025-07-25 11:01:59,194 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,194 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,194 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:01:59,194 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,195 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,195 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:01:59,195 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,195 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,195 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,195 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,195 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:01:59,195 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,195 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,196 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,196 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,196 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,196 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,196 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA0DF50>
2025-07-25 11:01:59,196 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:01:59,196 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:01:59,196 - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-07-25 11:01:59,197 - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-07-25 11:01:59,197 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,197 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,197 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,197 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,197 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:01:59,197 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,197 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,197 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:01:59,197 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,197 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,198 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,198 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,198 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,198 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,198 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,198 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,198 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA0DF50>
2025-07-25 11:01:59,198 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,198 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,198 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,198 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,198 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,198 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,199 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA0DF50>
2025-07-25 11:01:59,199 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,199 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,199 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:01:59,199 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,199 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,199 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:01:59,199 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,199 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,199 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,199 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,200 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:01:59,200 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,200 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,200 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,200 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,200 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,200 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,200 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,201 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,201 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA0DF50>
2025-07-25 11:01:59,201 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,201 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,201 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA0DF50>
2025-07-25 11:01:59,201 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,201 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,201 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,201 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002274CA02350>],
             180: [<numba.core.ir.Assign object at 0x000002274C9F7910>],
             500: [<numba.core.ir.Assign object at 0x000002274C9F7650>]})
2025-07-25 11:01:59,202 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,202 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7E90>
2025-07-25 11:01:59,202 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,202 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,202 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,202 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,202 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,202 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,202 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,202 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,202 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,203 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,203 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,203 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,203 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,203 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,203 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,203 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,203 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,203 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,203 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,203 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,203 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,203 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,203 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,204 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,204 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,204 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,204 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,204 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,204 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,204 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,204 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,204 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,205 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7E90>
2025-07-25 11:01:59,205 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,205 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,205 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7E90>
2025-07-25 11:01:59,205 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,205 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,205 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,205 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,205 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,206 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,206 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7E90>
2025-07-25 11:01:59,206 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,206 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,206 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,206 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,206 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:01:59,206 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:01:59,206 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:01:59,206 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,206 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,207 - DEBUG - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,207 - DEBUG - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,207 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,207 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 11:01:59,207 - DEBUG - replaced with: eta = index_frac.1 - offset
2025-07-25 11:01:59,207 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,207 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,207 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:01:59,207 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:01:59,207 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,207 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,208 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,208 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,208 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,208 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,208 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,208 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,208 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7E90>
2025-07-25 11:01:59,208 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,208 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,208 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,209 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,209 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,209 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,209 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7E90>
2025-07-25 11:01:59,209 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,209 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,209 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:01:59,209 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,209 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,209 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:01:59,210 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,210 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,210 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,210 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,210 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:01:59,210 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,210 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,210 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,210 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,211 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,211 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,211 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7E90>
2025-07-25 11:01:59,211 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:01:59,211 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:01:59,211 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:01:59,211 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,211 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,211 - DEBUG - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,211 - DEBUG - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,211 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:01:59,212 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 11:01:59,212 - DEBUG - replaced with: eta = index_frac.2 - offset
2025-07-25 11:01:59,212 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,212 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:01:59,212 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,212 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,212 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:01:59,212 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,212 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,212 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,212 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,213 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,213 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,213 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,213 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,213 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7E90>
2025-07-25 11:01:59,213 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,213 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,213 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,213 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,213 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,214 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,214 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7E90>
2025-07-25 11:01:59,214 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,214 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,214 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:01:59,214 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,214 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,214 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:01:59,214 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,215 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,215 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,215 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,215 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:01:59,215 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,215 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,215 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,215 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,215 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,215 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,216 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,216 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,216 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7E90>
2025-07-25 11:01:59,216 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,216 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,216 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7E90>
2025-07-25 11:01:59,216 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,216 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,216 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,216 - DEBUG - Fix SSA violator on var offset
2025-07-25 11:01:59,216 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,216 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA02450>
2025-07-25 11:01:59,216 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,217 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,217 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,217 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,217 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,217 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,217 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,217 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,217 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,217 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,218 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,218 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,218 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,218 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,218 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,218 - DEBUG - first assign: offset
2025-07-25 11:01:59,218 - DEBUG - replaced with: offset = const(int, 0)
2025-07-25 11:01:59,218 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,218 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,218 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,218 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,219 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,219 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,219 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,219 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,219 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,219 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,219 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,219 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,219 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,219 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,219 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,219 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,219 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,220 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA02450>
2025-07-25 11:01:59,220 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,220 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,220 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA02450>
2025-07-25 11:01:59,220 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,220 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,220 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,220 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,220 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,220 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,220 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA02450>
2025-07-25 11:01:59,220 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,220 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,220 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,221 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,221 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:01:59,221 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:01:59,221 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:01:59,221 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,221 - DEBUG - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,221 - DEBUG - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,222 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 11:01:59,222 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,222 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,222 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:01:59,222 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:01:59,222 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,222 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,222 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,222 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,223 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,223 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,223 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,223 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,223 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA02450>
2025-07-25 11:01:59,223 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,223 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,223 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,223 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,223 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,223 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,223 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA02450>
2025-07-25 11:01:59,223 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,224 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,224 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:01:59,224 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,224 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,224 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:01:59,224 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,224 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,224 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,224 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,224 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:01:59,224 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,224 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,224 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,225 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,225 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,225 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,225 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA02450>
2025-07-25 11:01:59,225 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:01:59,225 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:01:59,225 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:01:59,226 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,226 - DEBUG - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,226 - DEBUG - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,226 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 11:01:59,226 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,226 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:01:59,226 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,226 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,227 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:01:59,227 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,227 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,227 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,227 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,227 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,227 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,227 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,227 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,227 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA02450>
2025-07-25 11:01:59,227 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,227 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,228 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,228 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,228 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,228 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,228 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA02450>
2025-07-25 11:01:59,228 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,228 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,228 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:01:59,228 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,228 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,228 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:01:59,228 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,228 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,228 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,229 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,229 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:01:59,229 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,229 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,229 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,229 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,229 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,229 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,229 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,230 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,230 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA02450>
2025-07-25 11:01:59,230 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,230 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,230 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA02450>
2025-07-25 11:01:59,230 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,230 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,230 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,230 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002274C9F60D0>],
             180: [<numba.core.ir.Assign object at 0x000002274C9BB3D0>],
             500: [<numba.core.ir.Assign object at 0x000002274C9BB6D0>]})
2025-07-25 11:01:59,230 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,231 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D1590>
2025-07-25 11:01:59,231 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,231 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,231 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,231 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,231 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,231 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,231 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,232 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,232 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,232 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,233 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,233 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,233 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,233 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,234 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,234 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,234 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,234 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,234 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,234 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,235 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,235 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,235 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,235 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,235 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,236 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,236 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,236 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,236 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,236 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,237 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,237 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,237 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D1590>
2025-07-25 11:01:59,237 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,237 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,237 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D1590>
2025-07-25 11:01:59,237 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,238 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,238 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,238 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,238 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,238 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,238 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D1590>
2025-07-25 11:01:59,239 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,239 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,239 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,239 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,239 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:01:59,240 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:01:59,240 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:01:59,240 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,240 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,240 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 11:01:59,241 - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-07-25 11:01:59,241 - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-07-25 11:01:59,241 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,241 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,241 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:01:59,241 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:01:59,241 - DEBUG - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
2025-07-25 11:01:59,242 - DEBUG - replaced with: $binop_sub318.31 = nwin - offset.1
2025-07-25 11:01:59,242 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,242 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,242 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,242 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,242 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,243 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,243 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,243 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,243 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D1590>
2025-07-25 11:01:59,243 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,243 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,244 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,244 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,244 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,244 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,244 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D1590>
2025-07-25 11:01:59,244 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,245 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,245 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:01:59,245 - DEBUG - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:01:59,245 - DEBUG - find_def_from_top label 376
2025-07-25 11:01:59,245 - DEBUG - idom 374 from label 376
2025-07-25 11:01:59,245 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:01:59,245 - DEBUG - find_def_from_top label 374
2025-07-25 11:01:59,246 - DEBUG - idom 180 from label 374
2025-07-25 11:01:59,246 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:01:59,246 - DEBUG - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 11:01:59,246 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,246 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,246 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:01:59,246 - DEBUG - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:01:59,247 - DEBUG - find_def_from_top label 376
2025-07-25 11:01:59,247 - DEBUG - idom 374 from label 376
2025-07-25 11:01:59,247 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:01:59,247 - DEBUG - find_def_from_top label 374
2025-07-25 11:01:59,247 - DEBUG - idom 180 from label 374
2025-07-25 11:01:59,247 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:01:59,248 - DEBUG - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 11:01:59,248 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,248 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,248 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,248 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,248 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:01:59,249 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,249 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,249 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,249 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,249 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,250 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,250 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D1590>
2025-07-25 11:01:59,250 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:01:59,250 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:01:59,250 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:01:59,250 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,251 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,251 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 11:01:59,251 - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-07-25 11:01:59,251 - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-07-25 11:01:59,251 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,251 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:01:59,251 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,251 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,251 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:01:59,252 - DEBUG - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
2025-07-25 11:01:59,252 - DEBUG - replaced with: $binop_sub590.23 = nwin - offset.2
2025-07-25 11:01:59,252 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,252 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,252 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,252 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,252 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,252 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,252 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,252 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,252 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D1590>
2025-07-25 11:01:59,253 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,253 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,253 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,253 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,253 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,253 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,253 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D1590>
2025-07-25 11:01:59,253 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,253 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,253 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:01:59,253 - DEBUG - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:01:59,254 - DEBUG - find_def_from_top label 648
2025-07-25 11:01:59,254 - DEBUG - idom 646 from label 648
2025-07-25 11:01:59,254 - DEBUG - find_def_from_bottom label 646
2025-07-25 11:01:59,254 - DEBUG - find_def_from_top label 646
2025-07-25 11:01:59,254 - DEBUG - idom 500 from label 646
2025-07-25 11:01:59,254 - DEBUG - find_def_from_bottom label 500
2025-07-25 11:01:59,254 - DEBUG - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 11:01:59,254 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,254 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,254 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:01:59,254 - DEBUG - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:01:59,254 - DEBUG - find_def_from_top label 648
2025-07-25 11:01:59,255 - DEBUG - idom 646 from label 648
2025-07-25 11:01:59,255 - DEBUG - find_def_from_bottom label 646
2025-07-25 11:01:59,255 - DEBUG - find_def_from_top label 646
2025-07-25 11:01:59,255 - DEBUG - idom 500 from label 646
2025-07-25 11:01:59,255 - DEBUG - find_def_from_bottom label 500
2025-07-25 11:01:59,255 - DEBUG - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 11:01:59,255 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,255 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,255 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,255 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,255 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:01:59,255 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,255 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,256 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,256 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,256 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,256 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,256 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,256 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,256 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D1590>
2025-07-25 11:01:59,257 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,257 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,257 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9D1590>
2025-07-25 11:01:59,257 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,257 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,257 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,258 - DEBUG - Fix SSA violator on var eta
2025-07-25 11:01:59,258 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,258 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9BB8D0>
2025-07-25 11:01:59,258 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,258 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,258 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,258 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,258 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,259 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,259 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,259 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,259 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,259 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,259 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,259 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,260 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,260 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,260 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,260 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,260 - DEBUG - first assign: eta
2025-07-25 11:01:59,260 - DEBUG - replaced with: eta = const(float, 0.0)
2025-07-25 11:01:59,260 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,261 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,261 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,261 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,261 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,261 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,261 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,261 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,261 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,262 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,262 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,262 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,262 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,262 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,262 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,262 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,262 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9BB8D0>
2025-07-25 11:01:59,262 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,262 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,262 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9BB8D0>
2025-07-25 11:01:59,262 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,262 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,263 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,263 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,263 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,263 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,263 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9BB8D0>
2025-07-25 11:01:59,263 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,263 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,263 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,263 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,263 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:01:59,263 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:01:59,264 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:01:59,264 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,264 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,264 - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-07-25 11:01:59,264 - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-07-25 11:01:59,264 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,264 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,264 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:01:59,264 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 11:01:59,264 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,265 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,265 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,265 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,265 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,265 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,265 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,265 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,265 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9BB8D0>
2025-07-25 11:01:59,265 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,265 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,265 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,265 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,265 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,266 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,266 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9BB8D0>
2025-07-25 11:01:59,266 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,266 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,266 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 11:01:59,266 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,266 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,266 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 11:01:59,266 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,266 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,266 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,266 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,266 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:01:59,266 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,267 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,267 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,267 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,267 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,267 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,267 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9BB8D0>
2025-07-25 11:01:59,267 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:01:59,267 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:01:59,267 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:01:59,268 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,268 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,268 - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-07-25 11:01:59,268 - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-07-25 11:01:59,268 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,268 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:01:59,268 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,268 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,268 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 11:01:59,268 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,268 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,269 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,269 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,269 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,269 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,269 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,269 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,269 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9BB8D0>
2025-07-25 11:01:59,269 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,269 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,269 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,269 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,269 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,269 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,270 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9BB8D0>
2025-07-25 11:01:59,270 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,270 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,270 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 11:01:59,270 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,270 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,270 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 11:01:59,270 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,270 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,270 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,270 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,270 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:01:59,271 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,271 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,271 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,271 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,271 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,271 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,271 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,271 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,271 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9BB8D0>
2025-07-25 11:01:59,271 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,272 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,272 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274C9BB8D0>
2025-07-25 11:01:59,272 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,272 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,272 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,272 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002274C9BB850>],
             180: [<numba.core.ir.Assign object at 0x000002274C9D1590>],
             500: [<numba.core.ir.Assign object at 0x000002274CA14AD0>]})
2025-07-25 11:01:59,272 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,272 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7F10>
2025-07-25 11:01:59,272 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,272 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,273 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,273 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,273 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,273 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,273 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,273 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,273 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,273 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,273 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,273 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,273 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,273 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,273 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,274 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,274 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,274 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,274 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,274 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,274 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,274 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,274 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,274 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,274 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,274 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,274 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,275 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,275 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,275 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,275 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,275 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,275 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7F10>
2025-07-25 11:01:59,275 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,275 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,275 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7F10>
2025-07-25 11:01:59,275 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,275 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,276 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,276 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,276 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,276 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,276 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7F10>
2025-07-25 11:01:59,276 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,276 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,276 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,276 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,276 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:01:59,277 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:01:59,277 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:01:59,277 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,277 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,277 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 11:01:59,277 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,277 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,277 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:01:59,277 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 11:01:59,277 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,277 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,277 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,278 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,278 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,278 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,278 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,278 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,278 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7F10>
2025-07-25 11:01:59,278 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,278 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,278 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,278 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,278 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,278 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,278 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7F10>
2025-07-25 11:01:59,278 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,279 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,279 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 11:01:59,279 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,279 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,279 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 11:01:59,279 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,279 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,279 - DEBUG - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:01:59,279 - DEBUG - find_def_from_top label 376
2025-07-25 11:01:59,279 - DEBUG - idom 374 from label 376
2025-07-25 11:01:59,280 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:01:59,280 - DEBUG - find_def_from_top label 374
2025-07-25 11:01:59,280 - DEBUG - idom 180 from label 374
2025-07-25 11:01:59,280 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:01:59,280 - DEBUG - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 11:01:59,280 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,280 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,280 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:01:59,280 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,280 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,280 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,281 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,281 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,281 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,281 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7F10>
2025-07-25 11:01:59,281 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:01:59,281 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:01:59,281 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:01:59,281 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,281 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,281 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 11:01:59,281 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,281 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:01:59,282 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,282 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,282 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 11:01:59,282 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,282 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,282 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,282 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,282 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,282 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,282 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,282 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,282 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7F10>
2025-07-25 11:01:59,282 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,283 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,283 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,283 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,283 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,283 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,283 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7F10>
2025-07-25 11:01:59,283 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,283 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,283 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 11:01:59,283 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,283 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,283 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 11:01:59,284 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,284 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,284 - DEBUG - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:01:59,284 - DEBUG - find_def_from_top label 648
2025-07-25 11:01:59,284 - DEBUG - idom 646 from label 648
2025-07-25 11:01:59,284 - DEBUG - find_def_from_bottom label 646
2025-07-25 11:01:59,284 - DEBUG - find_def_from_top label 646
2025-07-25 11:01:59,284 - DEBUG - idom 500 from label 646
2025-07-25 11:01:59,284 - DEBUG - find_def_from_bottom label 500
2025-07-25 11:01:59,284 - DEBUG - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 11:01:59,285 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,285 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,285 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:01:59,285 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,285 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,285 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,285 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,285 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,285 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,285 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,285 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,286 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7F10>
2025-07-25 11:01:59,286 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,286 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,286 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274C9F7F10>
2025-07-25 11:01:59,286 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,286 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,286 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,286 - DEBUG - Fix SSA violator on var weight
2025-07-25 11:01:59,286 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,286 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA160D0>
2025-07-25 11:01:59,286 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,286 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,286 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,287 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,287 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,287 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,287 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,287 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,287 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,287 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,287 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,287 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,287 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,287 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,287 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,287 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,288 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,288 - DEBUG - first assign: weight
2025-07-25 11:01:59,288 - DEBUG - replaced with: weight = const(float, 0.0)
2025-07-25 11:01:59,288 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,288 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,288 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,288 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,288 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,288 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,288 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,289 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,289 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,289 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,289 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,289 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,289 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,289 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,289 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,289 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA160D0>
2025-07-25 11:01:59,289 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,289 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,289 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA160D0>
2025-07-25 11:01:59,290 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,290 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,290 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,290 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,290 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,290 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,290 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA160D0>
2025-07-25 11:01:59,290 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,290 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,290 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,290 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,290 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:01:59,291 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:01:59,291 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:01:59,291 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,291 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,291 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 11:01:59,291 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,291 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,291 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:01:59,291 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 11:01:59,291 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,291 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,291 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,292 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,292 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,292 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,292 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,292 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,292 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA160D0>
2025-07-25 11:01:59,292 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,292 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,292 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,292 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,292 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,292 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,293 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA160D0>
2025-07-25 11:01:59,293 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,293 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,293 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 11:01:59,293 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,293 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,293 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 11:01:59,293 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,293 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 11:01:59,293 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,293 - DEBUG - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,294 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,294 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:01:59,294 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,294 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,294 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,294 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,294 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,294 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,294 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA160D0>
2025-07-25 11:01:59,294 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:01:59,294 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:01:59,294 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:01:59,294 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,295 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,295 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 11:01:59,295 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,295 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:01:59,295 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,295 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,295 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 11:01:59,295 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,295 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,295 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,295 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,295 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,296 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,296 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,296 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,296 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA160D0>
2025-07-25 11:01:59,296 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,296 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,296 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,296 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,296 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,296 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,296 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA160D0>
2025-07-25 11:01:59,297 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,297 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,297 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 11:01:59,297 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,297 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,297 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 11:01:59,297 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,297 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 11:01:59,297 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,297 - DEBUG - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,297 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,298 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:01:59,298 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,298 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,298 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,298 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,298 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,298 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,298 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,298 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,298 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA160D0>
2025-07-25 11:01:59,298 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,298 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,299 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000002274CA160D0>
2025-07-25 11:01:59,299 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,299 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,299 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,299 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000002274CA14910>],
             376: [<numba.core.ir.Assign object at 0x000002274CCC83D0>],
             648: [<numba.core.ir.Assign object at 0x000002274CA1FFD0>]})
2025-07-25 11:01:59,299 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:01:59,299 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274CCC8550>
2025-07-25 11:01:59,299 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:01:59,299 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:01:59,299 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:01:59,299 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:01:59,300 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:01:59,300 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:01:59,300 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:01:59,300 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:01:59,300 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:01:59,300 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,300 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:01:59,300 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:01:59,300 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:01:59,300 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:01:59,301 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:01:59,301 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:01:59,301 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:01:59,301 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:01:59,301 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:01:59,301 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,301 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:01:59,301 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:01:59,301 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,302 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:01:59,302 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:01:59,302 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:01:59,302 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:01:59,302 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,302 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:01:59,302 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:01:59,302 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,302 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:01:59,302 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274CCC8550>
2025-07-25 11:01:59,302 - DEBUG - on stmt: jump 178
2025-07-25 11:01:59,302 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:01:59,302 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274CCC8550>
2025-07-25 11:01:59,303 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:01:59,303 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:01:59,303 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:01:59,303 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:01:59,303 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:01:59,303 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:01:59,303 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274CCC8550>
2025-07-25 11:01:59,303 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:01:59,303 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,303 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:01:59,303 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,303 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:01:59,303 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:01:59,304 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:01:59,304 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:01:59,304 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,304 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 11:01:59,304 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:01:59,304 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:01:59,304 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:01:59,304 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 11:01:59,304 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:01:59,304 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,305 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:01:59,305 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,305 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:01:59,305 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:01:59,305 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,305 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:01:59,305 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274CCC8550>
2025-07-25 11:01:59,305 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:01:59,305 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:01:59,305 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:01:59,305 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:01:59,305 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:01:59,306 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:01:59,306 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274CCC8550>
2025-07-25 11:01:59,306 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:01:59,306 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:01:59,306 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 11:01:59,306 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,306 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:01:59,306 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 11:01:59,307 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,307 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 11:01:59,307 - DEBUG - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:01:59,307 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,307 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:01:59,307 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:01:59,307 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,307 - DEBUG - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:01:59,307 - DEBUG - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
2025-07-25 11:01:59,308 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,308 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:01:59,308 - DEBUG - on stmt: jump 374
2025-07-25 11:01:59,308 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:01:59,308 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274CCC8550>
2025-07-25 11:01:59,308 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:01:59,308 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:01:59,308 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:01:59,309 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:01:59,309 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,309 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 11:01:59,309 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:01:59,309 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:01:59,310 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:01:59,310 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:01:59,310 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 11:01:59,310 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:01:59,310 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,310 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:01:59,310 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:01:59,311 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:01:59,311 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:01:59,311 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,311 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:01:59,311 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274CCC8550>
2025-07-25 11:01:59,311 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:01:59,311 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:01:59,311 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:01:59,311 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:01:59,311 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:01:59,311 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:01:59,311 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274CCC8550>
2025-07-25 11:01:59,311 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:01:59,312 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:01:59,312 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 11:01:59,312 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:01:59,312 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:01:59,312 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 11:01:59,312 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:01:59,312 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 11:01:59,312 - DEBUG - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:01:59,312 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:01:59,312 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:01:59,312 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:01:59,313 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:01:59,313 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:01:59,313 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,313 - DEBUG - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:01:59,313 - DEBUG - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
2025-07-25 11:01:59,313 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:01:59,313 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:01:59,313 - DEBUG - on stmt: jump 646
2025-07-25 11:01:59,313 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:01:59,314 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274CCC8550>
2025-07-25 11:01:59,314 - DEBUG - on stmt: jump 176
2025-07-25 11:01:59,314 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:01:59,314 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000002274CCC8550>
2025-07-25 11:01:59,314 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:01:59,314 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:01:59,314 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:01:59,695 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-07-25 11:01:59,696 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 11:01:59,697 - DEBUG - stack: []
2025-07-25 11:01:59,697 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 11:01:59,697 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-07-25 11:01:59,697 - DEBUG - stack []
2025-07-25 11:01:59,697 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-07-25 11:01:59,697 - DEBUG - stack []
2025-07-25 11:01:59,698 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 11:01:59,698 - DEBUG - stack []
2025-07-25 11:01:59,698 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-07-25 11:01:59,698 - DEBUG - stack ['$x4.0']
2025-07-25 11:01:59,698 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 11:01:59,698 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-07-25 11:01:59,699 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 11:01:59,699 - DEBUG - stack ['$8binary_subscr.2']
2025-07-25 11:01:59,699 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-07-25 11:01:59,699 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-07-25 11:01:59,699 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 11:01:59,699 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-07-25 11:01:59,699 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-07-25 11:01:59,699 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-07-25 11:01:59,700 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-07-25 11:01:59,700 - DEBUG - stack ['$binop_add32.6']
2025-07-25 11:01:59,700 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 11:01:59,700 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-07-25 11:01:59,700 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-07-25 11:01:59,700 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-07-25 11:01:59,700 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 11:01:59,701 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-07-25 11:01:59,701 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-07-25 11:01:59,701 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-07-25 11:01:59,701 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-07-25 11:01:59,701 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-07-25 11:01:59,701 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-07-25 11:01:59,702 - DEBUG - stack ['$binop_sub56.12']
2025-07-25 11:01:59,702 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 11:01:59,702 - DEBUG - stack []
2025-07-25 11:01:59,702 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-07-25 11:01:59,702 - DEBUG - stack ['$x62.13']
2025-07-25 11:01:59,703 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 11:01:59,703 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-07-25 11:01:59,703 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 11:01:59,703 - DEBUG - stack ['$66binary_subscr.15']
2025-07-25 11:01:59,703 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-07-25 11:01:59,703 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-07-25 11:01:59,703 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 11:01:59,704 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-07-25 11:01:59,704 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-07-25 11:01:59,704 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-07-25 11:01:59,704 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-07-25 11:01:59,704 - DEBUG - stack ['$binop_sub90.19']
2025-07-25 11:01:59,704 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-07-25 11:01:59,704 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-07-25 11:01:59,705 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-07-25 11:01:59,705 - DEBUG - stack ['$binop_truediv96.21']
2025-07-25 11:01:59,705 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 11:01:59,705 - DEBUG - stack []
2025-07-25 11:01:59,705 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 11:01:59,705 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-07-25 11:01:59,706 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-07-25 11:01:59,706 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-07-25 11:01:59,706 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-07-25 11:01:59,706 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 11:01:59,706 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-07-25 11:01:59,706 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 11:01:59,706 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 11:01:59,706 - DEBUG - stack ['$130call.26']
2025-07-25 11:01:59,707 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 11:01:59,707 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-07-25 11:01:59,707 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-07-25 11:01:59,707 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-07-25 11:01:59,707 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-07-25 11:01:59,707 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 11:01:59,707 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-07-25 11:01:59,707 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 11:01:59,707 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-07-25 11:01:59,708 - DEBUG - stack ['$130call.26', '$168call.31']
2025-07-25 11:01:59,708 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-07-25 11:01:59,708 - DEBUG - stack ['$178compare_op.32']
2025-07-25 11:01:59,708 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-25 11:01:59,708 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-25 11:01:59,708 - DEBUG - stack: []
2025-07-25 11:01:59,708 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-07-25 11:01:59,709 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-07-25 11:01:59,709 - DEBUG - stack []
2025-07-25 11:01:59,709 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-07-25 11:01:59,709 - DEBUG - stack ['$const186.0.4']
2025-07-25 11:01:59,709 - DEBUG - end state. edges=[]
2025-07-25 11:01:59,709 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-07-25 11:01:59,709 - DEBUG - stack: []
2025-07-25 11:01:59,710 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-25 11:01:59,710 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-07-25 11:01:59,710 - DEBUG - stack []
2025-07-25 11:01:59,710 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-07-25 11:01:59,710 - DEBUG - stack ['$b190.0']
2025-07-25 11:01:59,710 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-07-25 11:01:59,710 - DEBUG - stack ['$192unary_negative.1']
2025-07-25 11:01:59,710 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-07-25 11:01:59,711 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-07-25 11:01:59,711 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-07-25 11:01:59,711 - DEBUG - stack ['$binop_truediv196.3']
2025-07-25 11:01:59,711 - DEBUG - end state. edges=[]
2025-07-25 11:01:59,711 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 11:01:59,711 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-25 11:01:59,712 - DEBUG - defmap: {}
2025-07-25 11:01:59,712 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 11:01:59,712 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 11:01:59,712 - DEBUG - keep phismap: {}
2025-07-25 11:01:59,712 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 11:01:59,712 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 11:01:59,712 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-07-25 11:01:59,713 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 11:01:59,713 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 11:01:59,714 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-07-25 11:01:59,794 - DEBUG - BPM-Wert ermittelt: 172
2025-07-25 11:02:02,024 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:02:12,313 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:02:24,593 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:02:38,864 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:02:42,933 - INFO - Tags gespeichert für: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 11:02:42,934 - ERROR - Fehler bei der Verarbeitung von data\05. Untergrund (Feat. Eko Fresh).mp3: 'NoneType' object is not subscriptable
2025-07-25 11:02:42,934 - INFO - Verarbeite Datei: data\08. Das Leben ist hart.mp3
2025-07-25 11:02:42,934 - INFO - Beginne Verarbeitung der Datei: data\08. Das Leben ist hart.mp3
2025-07-25 11:02:42,945 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Das Leben ist hart
2025-07-25 11:02:43,167 - DEBUG - BPM-Wert ermittelt: 83
2025-07-25 11:02:45,391 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:02:55,666 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:03:07,946 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:03:22,248 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:03:26,322 - INFO - Tags gespeichert für: data\08. Das Leben ist hart.mp3
2025-07-25 11:03:26,322 - ERROR - Fehler bei der Verarbeitung von data\08. Das Leben ist hart.mp3: 'NoneType' object is not subscriptable
2025-07-25 11:03:26,323 - INFO - Verarbeite Datei: data\09. Hast du was bist du was.mp3
2025-07-25 11:03:26,323 - INFO - Beginne Verarbeitung der Datei: data\09. Hast du was bist du was.mp3
2025-07-25 11:03:26,334 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Hast du was bist du was
2025-07-25 11:03:26,556 - DEBUG - BPM-Wert ermittelt: 129
2025-07-25 11:03:28,770 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:03:39,061 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:03:51,350 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:04:05,636 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:04:09,706 - INFO - Tags gespeichert für: data\09. Hast du was bist du was.mp3
2025-07-25 11:04:09,706 - ERROR - Fehler bei der Verarbeitung von data\09. Hast du was bist du was.mp3: 'NoneType' object is not subscriptable
2025-07-25 11:04:09,707 - INFO - Verarbeite Datei: data\09. Staatsfeind Nr. 1.mp3
2025-07-25 11:04:09,707 - INFO - Beginne Verarbeitung der Datei: data\09. Staatsfeind Nr. 1.mp3
2025-07-25 11:04:09,716 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Staatsfeind Nr. 1
2025-07-25 11:04:09,716 - INFO - Lade und speichere Lyrics für: Bushido - Staatsfeind Nr. 1
2025-07-25 11:04:09,718 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:04:10,158 - DEBUG - https://genius.com:443 "GET /bushido-staatsfeind-nr-1-lyrics HTTP/1.1" 301 None
2025-07-25 11:04:10,533 - DEBUG - https://genius.com:443 "GET /Bushido-staatsfeind-nr-1-lyrics HTTP/1.1" 200 None
2025-07-25 11:04:10,788 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 11:04:13,007 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:04:23,291 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:04:35,555 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:04:49,812 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:04:53,841 - INFO - Tags gespeichert für: data\09. Staatsfeind Nr. 1.mp3
2025-07-25 11:04:53,842 - ERROR - Fehler bei der Verarbeitung von data\09. Staatsfeind Nr. 1.mp3: 'NoneType' object is not subscriptable
2025-07-25 11:04:53,842 - INFO - Verarbeite Datei: data\12. Sex in the City.mp3
2025-07-25 11:04:53,842 - INFO - Beginne Verarbeitung der Datei: data\12. Sex in the City.mp3
2025-07-25 11:04:53,854 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Sex in the City
2025-07-25 11:04:53,855 - INFO - Lade und speichere Lyrics für: Bushido - Sex in the City
2025-07-25 11:04:53,857 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:04:54,062 - DEBUG - https://genius.com:443 "GET /bushido-sex-in-the-city-lyrics HTTP/1.1" 301 None
2025-07-25 11:04:54,443 - DEBUG - https://genius.com:443 "GET /Bushido-sex-in-the-city-lyrics HTTP/1.1" 200 None
2025-07-25 11:04:54,686 - DEBUG - BPM-Wert ermittelt: 96
2025-07-25 11:04:56,898 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:05:07,156 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:05:19,462 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:05:33,748 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:05:37,833 - INFO - Tags gespeichert für: data\12. Sex in the City.mp3
2025-07-25 11:05:37,834 - ERROR - Fehler bei der Verarbeitung von data\12. Sex in the City.mp3: 'NoneType' object is not subscriptable
2025-07-25 11:05:37,834 - INFO - Verarbeite Datei: data\13. Augenblick.mp3
2025-07-25 11:05:37,834 - INFO - Beginne Verarbeitung der Datei: data\13. Augenblick.mp3
2025-07-25 11:05:37,863 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Augenblick
2025-07-25 11:05:37,864 - INFO - Lade und speichere Lyrics für: Bushido - Augenblick
2025-07-25 11:05:37,866 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:05:38,304 - DEBUG - https://genius.com:443 "GET /bushido-augenblick-lyrics HTTP/1.1" 301 None
2025-07-25 11:05:39,777 - DEBUG - https://genius.com:443 "GET /Bushido-augenblick-lyrics HTTP/1.1" 200 None
2025-07-25 11:05:40,193 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 11:05:42,413 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:05:52,701 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:06:04,995 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:06:19,287 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:06:23,348 - INFO - Tags gespeichert für: data\13. Augenblick.mp3
2025-07-25 11:06:23,348 - ERROR - Fehler bei der Verarbeitung von data\13. Augenblick.mp3: 'NoneType' object is not subscriptable
2025-07-25 11:06:23,349 - INFO - Verarbeite Datei: data\17. Mein Leben lang (Feat. Chakuza).mp3
2025-07-25 11:06:23,349 - INFO - Beginne Verarbeitung der Datei: data\17. Mein Leben lang (Feat. Chakuza).mp3
2025-07-25 11:06:23,381 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Mein Leben lang (Feat. Chakuza)
2025-07-25 11:06:23,382 - INFO - Lade und speichere Lyrics für: Bushido - Mein Leben lang (Feat. Chakuza)
2025-07-25 11:06:23,383 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:06:23,841 - DEBUG - https://genius.com:443 "GET /bushido-mein-leben-lang-lyrics HTTP/1.1" 301 None
2025-07-25 11:06:25,349 - DEBUG - https://genius.com:443 "GET /Bushido-mein-leben-lang-lyrics HTTP/1.1" 200 None
2025-07-25 11:06:25,749 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 11:06:27,962 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:06:38,248 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:06:50,538 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:07:04,795 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:21:01,353 - DEBUG - Starte die Anwendung...
2025-07-25 11:21:01,354 - INFO - Verarbeite MP3-Datei...
2025-07-25 11:21:01,354 - ERROR - Fehler bei der Verarbeitung!
2025-07-25 11:21:01,357 - DEBUG - Using proactor: IocpProactor
2025-07-25 11:21:01,360 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 11:21:01,511 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-25 11:21:01,513 - DEBUG - Using proactor: IocpProactor
2025-07-25 11:21:01,606 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-25 11:21:01,677 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=None socket_options=None
2025-07-25 11:21:01,677 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E98FDF410>
2025-07-25 11:21:01,677 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 11:21:01,678 - DEBUG - send_request_headers.complete
2025-07-25 11:21:01,678 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 11:21:01,678 - DEBUG - send_request_body.complete
2025-07-25 11:21:01,678 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 11:21:01,678 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 09:21:01 GMT'), (b'server', b'uvicorn'), (b'content-length', b'4'), (b'content-type', b'application/json')])
2025-07-25 11:21:01,679 - INFO - HTTP Request: GET http://127.0.0.1:7860/gradio_api/startup-events "HTTP/1.1 200 OK"
2025-07-25 11:21:01,679 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 11:21:01,679 - DEBUG - receive_response_body.complete
2025-07-25 11:21:01,679 - DEBUG - response_closed.started
2025-07-25 11:21:01,679 - DEBUG - response_closed.complete
2025-07-25 11:21:01,679 - DEBUG - close.started
2025-07-25 11:21:01,679 - DEBUG - close.complete
2025-07-25 11:21:01,680 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=3 socket_options=None
2025-07-25 11:21:01,699 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E99048050>
2025-07-25 11:21:01,699 - DEBUG - send_request_headers.started request=<Request [b'HEAD']>
2025-07-25 11:21:01,699 - DEBUG - send_request_headers.complete
2025-07-25 11:21:01,700 - DEBUG - send_request_body.started request=<Request [b'HEAD']>
2025-07-25 11:21:01,700 - DEBUG - send_request_body.complete
2025-07-25 11:21:01,700 - DEBUG - receive_response_headers.started request=<Request [b'HEAD']>
2025-07-25 11:21:01,708 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Fri, 25 Jul 2025 09:21:01 GMT'), (b'server', b'uvicorn'), (b'content-length', b'25374'), (b'content-type', b'text/html; charset=utf-8')])
2025-07-25 11:21:01,708 - INFO - HTTP Request: HEAD http://127.0.0.1:7860/ "HTTP/1.1 200 OK"
2025-07-25 11:21:01,709 - DEBUG - receive_response_body.started request=<Request [b'HEAD']>
2025-07-25 11:21:01,709 - DEBUG - receive_response_body.complete
2025-07-25 11:21:01,709 - DEBUG - response_closed.started
2025-07-25 11:21:01,709 - DEBUG - response_closed.complete
2025-07-25 11:21:01,710 - DEBUG - close.started
2025-07-25 11:21:01,710 - DEBUG - close.complete
2025-07-25 11:21:01,712 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-25 11:21:01,763 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E99115C90>
2025-07-25 11:21:01,763 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E98C6F530> server_hostname='api.gradio.app' timeout=3
2025-07-25 11:21:01,856 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/launched HTTP/1.1" 200 0
2025-07-25 11:21:02,103 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E98FDD890>
2025-07-25 11:21:02,103 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-25 11:21:02,104 - DEBUG - send_request_headers.complete
2025-07-25 11:21:02,104 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-25 11:21:02,104 - DEBUG - send_request_body.complete
2025-07-25 11:21:02,104 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-25 11:21:02,275 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 25 Jul 2025 09:21:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-25 11:21:02,276 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-25 11:21:02,276 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-25 11:21:02,277 - DEBUG - receive_response_body.complete
2025-07-25 11:21:02,277 - DEBUG - response_closed.started
2025-07-25 11:21:02,277 - DEBUG - response_closed.complete
2025-07-25 11:21:02,277 - DEBUG - close.started
2025-07-25 11:21:02,277 - DEBUG - close.complete
2025-07-25 11:21:31,263 - DEBUG - matplotlib data path: Z:\AI\software\miniconda3\envs\ace-data_env\Lib\site-packages\matplotlib\mpl-data
2025-07-25 11:21:31,266 - DEBUG - CONFIGDIR=C:\Users\methm\.matplotlib
2025-07-25 11:21:31,267 - DEBUG - interactive is False
2025-07-25 11:21:31,268 - DEBUG - platform is win32
2025-07-25 11:21:31,303 - DEBUG - CACHEDIR=C:\Users\methm\.matplotlib
2025-07-25 11:21:31,310 - DEBUG - Using fontManager instance from C:\Users\methm\.matplotlib\fontlist-v390.json
2025-07-25 11:21:31,443 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 11:21:31,444 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 11:21:31,444 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 11:21:31,445 - INFO - Verarbeite Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 11:21:31,445 - INFO - Beginne Verarbeitung der Datei: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 11:21:31,448 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Untergrund (Feat. Eko Fresh)
2025-07-25 11:21:31,526 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
2025-07-25 11:21:31,527 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 11:21:31,527 - DEBUG - stack: []
2025-07-25 11:21:31,527 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 11:21:31,527 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-07-25 11:21:31,528 - DEBUG - stack []
2025-07-25 11:21:31,528 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
2025-07-25 11:21:31,528 - DEBUG - stack []
2025-07-25 11:21:31,528 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
2025-07-25 11:21:31,528 - DEBUG - stack []
2025-07-25 11:21:31,528 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
2025-07-25 11:21:31,528 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 11:21:31,528 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
2025-07-25 11:21:31,528 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2025-07-25 11:21:31,528 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
2025-07-25 11:21:31,529 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
2025-07-25 11:21:31,529 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
2025-07-25 11:21:31,529 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
2025-07-25 11:21:31,529 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
2025-07-25 11:21:31,529 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
2025-07-25 11:21:31,529 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
2025-07-25 11:21:31,529 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
2025-07-25 11:21:31,529 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
2025-07-25 11:21:31,529 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
2025-07-25 11:21:31,529 - DEBUG - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
2025-07-25 11:21:31,529 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 11:21:31,530 - DEBUG - dispatch pc=34, inst=CALL(arg=7, lineno=86)
2025-07-25 11:21:31,530 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-25 11:21:31,530 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
2025-07-25 11:21:31,530 - DEBUG - stack ['$34call.9']
2025-07-25 11:21:31,530 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
2025-07-25 11:21:31,530 - DEBUG - stack []
2025-07-25 11:21:31,530 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
2025-07-25 11:21:31,530 - DEBUG - stack ['$const46.10.0']
2025-07-25 11:21:31,531 - DEBUG - end state. edges=[]
2025-07-25 11:21:31,531 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 11:21:31,531 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-25 11:21:31,531 - DEBUG - defmap: {}
2025-07-25 11:21:31,531 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 11:21:31,531 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 11:21:31,531 - DEBUG - keep phismap: {}
2025-07-25 11:21:31,531 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 11:21:31,531 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 11:21:31,532 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10.0'}), (48, {'retval': '$const46.10.0', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 11:21:31,532 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000024E9B032200>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10.0 = const(NoneType, None)    ['$const46.10.0']
    $48return_value.11 = cast(value=$const46.10.0) ['$48return_value.11', '$const46.10.0']
    return $48return_value.11                ['$48return_value.11']

2025-07-25 11:21:31,534 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 11:21:31,534 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024E9B0917D0>
2025-07-25 11:21:31,535 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,535 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,535 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,535 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,535 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,535 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,535 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,535 - DEBUG - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000024E9B032200>))
2025-07-25 11:21:31,535 - DEBUG - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,536 - DEBUG - on stmt: $const46.10.0 = const(NoneType, None)
2025-07-25 11:21:31,536 - DEBUG - on stmt: $48return_value.11 = cast(value=$const46.10.0)
2025-07-25 11:21:31,536 - DEBUG - on stmt: return $48return_value.11
2025-07-25 11:21:31,536 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x0000024E9B0910D0>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x0000024E9B091550>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000024E9B090190>,
                                  0)],
             '$const46.10.0': [(<numba.core.ir.Assign object at 0x0000024E9B091350>,
                                0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000024E9B087B90>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000024E9B087A90>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000024E9B087C90>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x0000024E9B087DD0>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x0000024E9B087990>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x0000024E9AFE7910>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000024E9B087ED0>, 0)]})
2025-07-25 11:21:31,537 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x0000024E9B0917D0>
2025-07-25 11:21:31,539 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
2025-07-25 11:21:31,544 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 11:21:31,544 - DEBUG - stack: []
2025-07-25 11:21:31,544 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 11:21:31,544 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-07-25 11:21:31,544 - DEBUG - stack []
2025-07-25 11:21:31,544 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
2025-07-25 11:21:31,544 - DEBUG - stack []
2025-07-25 11:21:31,545 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
2025-07-25 11:21:31,545 - DEBUG - stack []
2025-07-25 11:21:31,545 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
2025-07-25 11:21:31,545 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-25 11:21:31,545 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
2025-07-25 11:21:31,545 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
2025-07-25 11:21:31,545 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
2025-07-25 11:21:31,545 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
2025-07-25 11:21:31,545 - DEBUG - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
2025-07-25 11:21:31,545 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 11:21:31,545 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=9)
2025-07-25 11:21:31,545 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-25 11:21:31,546 - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
2025-07-25 11:21:31,546 - DEBUG - stack ['$28call.5']
2025-07-25 11:21:31,546 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
2025-07-25 11:21:31,546 - DEBUG - stack []
2025-07-25 11:21:31,546 - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
2025-07-25 11:21:31,546 - DEBUG - stack ['$const40.6.1']
2025-07-25 11:21:31,546 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
2025-07-25 11:21:31,546 - DEBUG - stack []
2025-07-25 11:21:31,546 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
2025-07-25 11:21:31,546 - DEBUG - stack ['$const44.7.2']
2025-07-25 11:21:31,546 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
2025-07-25 11:21:31,547 - DEBUG - stack []
2025-07-25 11:21:31,547 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
2025-07-25 11:21:31,547 - DEBUG - stack ['$const48.8.1']
2025-07-25 11:21:31,547 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
2025-07-25 11:21:31,547 - DEBUG - stack []
2025-07-25 11:21:31,547 - DEBUG - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
2025-07-25 11:21:31,547 - DEBUG - stack ['$const52.9.1']
2025-07-25 11:21:31,547 - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
2025-07-25 11:21:31,548 - DEBUG - stack []
2025-07-25 11:21:31,548 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
2025-07-25 11:21:31,548 - DEBUG - stack ['$const56.10.2']
2025-07-25 11:21:31,548 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
2025-07-25 11:21:31,548 - DEBUG - stack []
2025-07-25 11:21:31,548 - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
2025-07-25 11:21:31,548 - DEBUG - stack ['$const60.11.1']
2025-07-25 11:21:31,548 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
2025-07-25 11:21:31,548 - DEBUG - stack []
2025-07-25 11:21:31,549 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
2025-07-25 11:21:31,549 - DEBUG - stack ['$const64.12.1']
2025-07-25 11:21:31,549 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
2025-07-25 11:21:31,549 - DEBUG - stack []
2025-07-25 11:21:31,549 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
2025-07-25 11:21:31,549 - DEBUG - stack ['$interp_win68.13']
2025-07-25 11:21:31,549 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
2025-07-25 11:21:31,549 - DEBUG - stack ['$70load_attr.14']
2025-07-25 11:21:31,549 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-07-25 11:21:31,549 - DEBUG - stack ['$70load_attr.14', '$const80.15.2']
2025-07-25 11:21:31,549 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
2025-07-25 11:21:31,549 - DEBUG - stack ['$82binary_subscr.16']
2025-07-25 11:21:31,549 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
2025-07-25 11:21:31,550 - DEBUG - stack []
2025-07-25 11:21:31,550 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
2025-07-25 11:21:31,550 - DEBUG - stack ['$x94.17']
2025-07-25 11:21:31,550 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
2025-07-25 11:21:31,550 - DEBUG - stack ['$96load_attr.18']
2025-07-25 11:21:31,550 - DEBUG - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-07-25 11:21:31,550 - DEBUG - stack ['$96load_attr.18', '$const106.19.2']
2025-07-25 11:21:31,550 - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
2025-07-25 11:21:31,550 - DEBUG - stack ['$108binary_subscr.20']
2025-07-25 11:21:31,550 - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
2025-07-25 11:21:31,550 - DEBUG - stack []
2025-07-25 11:21:31,550 - DEBUG - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
2025-07-25 11:21:31,551 - DEBUG - stack ['$t_out120.21']
2025-07-25 11:21:31,551 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
2025-07-25 11:21:31,551 - DEBUG - stack ['$122load_attr.22']
2025-07-25 11:21:31,551 - DEBUG - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-07-25 11:21:31,551 - DEBUG - stack ['$122load_attr.22', '$const132.23.2']
2025-07-25 11:21:31,551 - DEBUG - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
2025-07-25 11:21:31,551 - DEBUG - stack ['$134binary_subscr.24']
2025-07-25 11:21:31,552 - DEBUG - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
2025-07-25 11:21:31,552 - DEBUG - stack []
2025-07-25 11:21:31,552 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
2025-07-25 11:21:31,552 - DEBUG - stack ['$null$146.26', '$146load_global.25']
2025-07-25 11:21:31,552 - DEBUG - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
2025-07-25 11:21:31,552 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 11:21:31,552 - DEBUG - dispatch pc=164, inst=CALL(arg=1, lineno=23)
2025-07-25 11:21:31,552 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-25 11:21:31,553 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
2025-07-25 11:21:31,553 - DEBUG - stack ['$164call.28']
2025-07-25 11:21:31,553 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
2025-07-25 11:21:31,553 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2025-07-25 11:21:31,553 - DEBUG - stack: ['$phi176.0']
2025-07-25 11:21:31,553 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2025-07-25 11:21:31,553 - DEBUG - dispatch pc=176, inst=NOP(arg=1, lineno=23)
2025-07-25 11:21:31,553 - DEBUG - stack ['$phi176.0']
2025-07-25 11:21:31,553 - DEBUG - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
2025-07-25 11:21:31,553 - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=1)])
2025-07-25 11:21:31,553 - DEBUG - stack: ['$phi178.0']
2025-07-25 11:21:31,553 - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=1)
2025-07-25 11:21:31,554 - DEBUG - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
2025-07-25 11:21:31,554 - DEBUG - stack ['$phi178.0']
2025-07-25 11:21:31,554 - DEBUG - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
2025-07-25 11:21:31,554 - DEBUG - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
2025-07-25 11:21:31,554 - DEBUG - stack: []
2025-07-25 11:21:31,554 - DEBUG - state.pc_initial: State(pc_initial=782 nstack_initial=0)
2025-07-25 11:21:31,554 - DEBUG - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
2025-07-25 11:21:31,554 - DEBUG - stack []
2025-07-25 11:21:31,554 - DEBUG - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
2025-07-25 11:21:31,554 - DEBUG - stack ['$const782.0.0']
2025-07-25 11:21:31,554 - DEBUG - end state. edges=[]
2025-07-25 11:21:31,554 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2025-07-25 11:21:31,554 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2025-07-25 11:21:31,555 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2025-07-25 11:21:31,555 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
2025-07-25 11:21:31,555 - DEBUG - stack ['$phi180.0', '$phi180.1']
2025-07-25 11:21:31,555 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
2025-07-25 11:21:31,555 - DEBUG - stack ['$phi180.0']
2025-07-25 11:21:31,555 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
2025-07-25 11:21:31,555 - DEBUG - stack ['$phi180.0', '$t_out182.2']
2025-07-25 11:21:31,556 - DEBUG - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-07-25 11:21:31,556 - DEBUG - stack ['$phi180.0', '$t_out182.2', '$t184.3']
2025-07-25 11:21:31,556 - DEBUG - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
2025-07-25 11:21:31,556 - DEBUG - stack ['$phi180.0', '$186binary_subscr.4']
2025-07-25 11:21:31,556 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
2025-07-25 11:21:31,556 - DEBUG - stack ['$phi180.0']
2025-07-25 11:21:31,556 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
2025-07-25 11:21:31,556 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
2025-07-25 11:21:31,556 - DEBUG - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
2025-07-25 11:21:31,557 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 11:21:31,557 - DEBUG - dispatch pc=216, inst=CALL(arg=1, lineno=27)
2025-07-25 11:21:31,557 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-25 11:21:31,557 - DEBUG - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
2025-07-25 11:21:31,557 - DEBUG - stack ['$phi180.0', '$216call.8']
2025-07-25 11:21:31,557 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
2025-07-25 11:21:31,557 - DEBUG - stack ['$phi180.0']
2025-07-25 11:21:31,557 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
2025-07-25 11:21:31,557 - DEBUG - stack ['$phi180.0', '$scale228.9']
2025-07-25 11:21:31,557 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
2025-07-25 11:21:31,557 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
2025-07-25 11:21:31,557 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
2025-07-25 11:21:31,558 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
2025-07-25 11:21:31,558 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
2025-07-25 11:21:31,558 - DEBUG - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
2025-07-25 11:21:31,558 - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
2025-07-25 11:21:31,558 - DEBUG - stack ['$phi180.0', '$binop_mul238.13']
2025-07-25 11:21:31,558 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
2025-07-25 11:21:31,558 - DEBUG - stack ['$phi180.0']
2025-07-25 11:21:31,558 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
2025-07-25 11:21:31,558 - DEBUG - stack ['$phi180.0', '$frac244.14']
2025-07-25 11:21:31,558 - DEBUG - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
2025-07-25 11:21:31,558 - DEBUG - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
2025-07-25 11:21:31,558 - DEBUG - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
2025-07-25 11:21:31,558 - DEBUG - stack ['$phi180.0', '$binop_mul248.16']
2025-07-25 11:21:31,559 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
2025-07-25 11:21:31,559 - DEBUG - stack ['$phi180.0']
2025-07-25 11:21:31,559 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
2025-07-25 11:21:31,559 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
2025-07-25 11:21:31,559 - DEBUG - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
2025-07-25 11:21:31,560 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 11:21:31,560 - DEBUG - dispatch pc=272, inst=CALL(arg=1, lineno=34)
2025-07-25 11:21:31,560 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-25 11:21:31,560 - DEBUG - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
2025-07-25 11:21:31,560 - DEBUG - stack ['$phi180.0', '$272call.20']
2025-07-25 11:21:31,560 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
2025-07-25 11:21:31,560 - DEBUG - stack ['$phi180.0']
2025-07-25 11:21:31,560 - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
2025-07-25 11:21:31,560 - DEBUG - stack ['$phi180.0', '$index_frac284.21']
2025-07-25 11:21:31,561 - DEBUG - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
2025-07-25 11:21:31,561 - DEBUG - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
2025-07-25 11:21:31,561 - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
2025-07-25 11:21:31,561 - DEBUG - stack ['$phi180.0', '$binop_sub288.23']
2025-07-25 11:21:31,561 - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
2025-07-25 11:21:31,561 - DEBUG - stack ['$phi180.0']
2025-07-25 11:21:31,561 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
2025-07-25 11:21:31,561 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
2025-07-25 11:21:31,561 - DEBUG - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
2025-07-25 11:21:31,561 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
2025-07-25 11:21:31,562 - DEBUG - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
2025-07-25 11:21:31,562 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27.3']
2025-07-25 11:21:31,562 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
2025-07-25 11:21:31,562 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
2025-07-25 11:21:31,562 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
2025-07-25 11:21:31,562 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
2025-07-25 11:21:31,562 - DEBUG - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
2025-07-25 11:21:31,562 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
2025-07-25 11:21:31,562 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
2025-07-25 11:21:31,562 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
2025-07-25 11:21:31,562 - DEBUG - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
2025-07-25 11:21:31,562 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
2025-07-25 11:21:31,563 - DEBUG - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
2025-07-25 11:21:31,563 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 11:21:31,563 - DEBUG - dispatch pc=332, inst=CALL(arg=2, lineno=40)
2025-07-25 11:21:31,563 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-25 11:21:31,563 - DEBUG - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
2025-07-25 11:21:31,563 - DEBUG - stack ['$phi180.0', '$332call.34']
2025-07-25 11:21:31,563 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
2025-07-25 11:21:31,563 - DEBUG - stack ['$phi180.0']
2025-07-25 11:21:31,563 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
2025-07-25 11:21:31,563 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
2025-07-25 11:21:31,564 - DEBUG - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
2025-07-25 11:21:31,564 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 11:21:31,564 - DEBUG - dispatch pc=362, inst=CALL(arg=1, lineno=41)
2025-07-25 11:21:31,564 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-25 11:21:31,564 - DEBUG - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
2025-07-25 11:21:31,564 - DEBUG - stack ['$phi180.0', '$362call.38']
2025-07-25 11:21:31,564 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
2025-07-25 11:21:31,565 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2)])
2025-07-25 11:21:31,565 - DEBUG - stack: ['$phi374.0', '$phi374.1']
2025-07-25 11:21:31,565 - DEBUG - state.pc_initial: State(pc_initial=374 nstack_initial=2)
2025-07-25 11:21:31,565 - DEBUG - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
2025-07-25 11:21:31,565 - DEBUG - stack ['$phi374.0', '$phi374.1']
2025-07-25 11:21:31,565 - DEBUG - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
2025-07-25 11:21:31,565 - DEBUG - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
2025-07-25 11:21:31,565 - DEBUG - stack: ['$phi500.0']
2025-07-25 11:21:31,565 - DEBUG - state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-07-25 11:21:31,565 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
2025-07-25 11:21:31,565 - DEBUG - stack ['$phi500.0']
2025-07-25 11:21:31,566 - DEBUG - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
2025-07-25 11:21:31,566 - DEBUG - stack ['$phi500.0', '$scale500.1']
2025-07-25 11:21:31,566 - DEBUG - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
2025-07-25 11:21:31,566 - DEBUG - stack ['$phi500.0', '$scale500.1', '$frac502.2']
2025-07-25 11:21:31,566 - DEBUG - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
2025-07-25 11:21:31,566 - DEBUG - stack ['$phi500.0', '$binop_sub504.3']
2025-07-25 11:21:31,566 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
2025-07-25 11:21:31,566 - DEBUG - stack ['$phi500.0']
2025-07-25 11:21:31,566 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
2025-07-25 11:21:31,567 - DEBUG - stack ['$phi500.0', '$frac510.4']
2025-07-25 11:21:31,567 - DEBUG - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
2025-07-25 11:21:31,567 - DEBUG - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
2025-07-25 11:21:31,567 - DEBUG - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
2025-07-25 11:21:31,567 - DEBUG - stack ['$phi500.0', '$binop_mul514.6']
2025-07-25 11:21:31,567 - DEBUG - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
2025-07-25 11:21:31,567 - DEBUG - stack ['$phi500.0']
2025-07-25 11:21:31,567 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
2025-07-25 11:21:31,568 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
2025-07-25 11:21:31,568 - DEBUG - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
2025-07-25 11:21:31,568 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 11:21:31,568 - DEBUG - dispatch pc=538, inst=CALL(arg=1, lineno=54)
2025-07-25 11:21:31,568 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-25 11:21:31,568 - DEBUG - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
2025-07-25 11:21:31,568 - DEBUG - stack ['$phi500.0', '$538call.10']
2025-07-25 11:21:31,568 - DEBUG - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
2025-07-25 11:21:31,568 - DEBUG - stack ['$phi500.0']
2025-07-25 11:21:31,569 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
2025-07-25 11:21:31,569 - DEBUG - stack ['$phi500.0', '$index_frac550.11']
2025-07-25 11:21:31,569 - DEBUG - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
2025-07-25 11:21:31,569 - DEBUG - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
2025-07-25 11:21:31,569 - DEBUG - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
2025-07-25 11:21:31,569 - DEBUG - stack ['$phi500.0', '$binop_sub554.13']
2025-07-25 11:21:31,569 - DEBUG - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
2025-07-25 11:21:31,569 - DEBUG - stack ['$phi500.0']
2025-07-25 11:21:31,569 - DEBUG - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
2025-07-25 11:21:31,569 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
2025-07-25 11:21:31,569 - DEBUG - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
2025-07-25 11:21:31,569 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
2025-07-25 11:21:31,570 - DEBUG - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 11:21:31,570 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
2025-07-25 11:21:31,570 - DEBUG - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
2025-07-25 11:21:31,570 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
2025-07-25 11:21:31,570 - DEBUG - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 11:21:31,570 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19.3']
2025-07-25 11:21:31,570 - DEBUG - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
2025-07-25 11:21:31,570 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
2025-07-25 11:21:31,570 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
2025-07-25 11:21:31,570 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
2025-07-25 11:21:31,570 - DEBUG - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
2025-07-25 11:21:31,570 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
2025-07-25 11:21:31,570 - DEBUG - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
2025-07-25 11:21:31,571 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
2025-07-25 11:21:31,571 - DEBUG - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
2025-07-25 11:21:31,571 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
2025-07-25 11:21:31,571 - DEBUG - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
2025-07-25 11:21:31,571 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 11:21:31,571 - DEBUG - dispatch pc=604, inst=CALL(arg=2, lineno=60)
2025-07-25 11:21:31,571 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-25 11:21:31,571 - DEBUG - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
2025-07-25 11:21:31,571 - DEBUG - stack ['$phi500.0', '$604call.26']
2025-07-25 11:21:31,571 - DEBUG - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
2025-07-25 11:21:31,572 - DEBUG - stack ['$phi500.0']
2025-07-25 11:21:31,572 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
2025-07-25 11:21:31,572 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
2025-07-25 11:21:31,572 - DEBUG - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
2025-07-25 11:21:31,572 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 11:21:31,572 - DEBUG - dispatch pc=634, inst=CALL(arg=1, lineno=61)
2025-07-25 11:21:31,572 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-25 11:21:31,572 - DEBUG - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
2025-07-25 11:21:31,572 - DEBUG - stack ['$phi500.0', '$634call.30']
2025-07-25 11:21:31,573 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
2025-07-25 11:21:31,573 - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
2025-07-25 11:21:31,573 - DEBUG - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 11:21:31,573 - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=3)
2025-07-25 11:21:31,573 - DEBUG - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
2025-07-25 11:21:31,573 - DEBUG - stack ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-25 11:21:31,573 - DEBUG - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
2025-07-25 11:21:31,573 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 11:21:31,573 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
2025-07-25 11:21:31,573 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
2025-07-25 11:21:31,573 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
2025-07-25 11:21:31,574 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
2025-07-25 11:21:31,574 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
2025-07-25 11:21:31,574 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
2025-07-25 11:21:31,574 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
2025-07-25 11:21:31,574 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
2025-07-25 11:21:31,574 - DEBUG - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 11:21:31,574 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
2025-07-25 11:21:31,574 - DEBUG - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-07-25 11:21:31,574 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
2025-07-25 11:21:31,574 - DEBUG - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
2025-07-25 11:21:31,574 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
2025-07-25 11:21:31,574 - DEBUG - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
2025-07-25 11:21:31,574 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
2025-07-25 11:21:31,574 - DEBUG - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
2025-07-25 11:21:31,575 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
2025-07-25 11:21:31,575 - DEBUG - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
2025-07-25 11:21:31,575 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
2025-07-25 11:21:31,575 - DEBUG - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
2025-07-25 11:21:31,575 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
2025-07-25 11:21:31,575 - DEBUG - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 11:21:31,575 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
2025-07-25 11:21:31,575 - DEBUG - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
2025-07-25 11:21:31,575 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
2025-07-25 11:21:31,575 - DEBUG - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-07-25 11:21:31,575 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
2025-07-25 11:21:31,576 - DEBUG - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
2025-07-25 11:21:31,576 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
2025-07-25 11:21:31,576 - DEBUG - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
2025-07-25 11:21:31,576 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
2025-07-25 11:21:31,576 - DEBUG - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
2025-07-25 11:21:31,576 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
2025-07-25 11:21:31,576 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
2025-07-25 11:21:31,576 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 11:21:31,576 - DEBUG - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
2025-07-25 11:21:31,577 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20']
2025-07-25 11:21:31,577 - DEBUG - dispatch pc=446, inst=COPY(arg=2, lineno=47)
2025-07-25 11:21:31,577 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
2025-07-25 11:21:31,577 - DEBUG - dispatch pc=448, inst=COPY(arg=2, lineno=47)
2025-07-25 11:21:31,577 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
2025-07-25 11:21:31,577 - DEBUG - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 11:21:31,577 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
2025-07-25 11:21:31,577 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
2025-07-25 11:21:31,577 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
2025-07-25 11:21:31,577 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
2025-07-25 11:21:31,577 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
2025-07-25 11:21:31,577 - DEBUG - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
2025-07-25 11:21:31,578 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
2025-07-25 11:21:31,578 - DEBUG - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
2025-07-25 11:21:31,578 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
2025-07-25 11:21:31,578 - DEBUG - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
2025-07-25 11:21:31,578 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
2025-07-25 11:21:31,578 - DEBUG - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-25 11:21:31,578 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
2025-07-25 11:21:31,578 - DEBUG - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
2025-07-25 11:21:31,578 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
2025-07-25 11:21:31,578 - DEBUG - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
2025-07-25 11:21:31,578 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
2025-07-25 11:21:31,578 - DEBUG - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
2025-07-25 11:21:31,578 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
2025-07-25 11:21:31,579 - DEBUG - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
2025-07-25 11:21:31,579 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
2025-07-25 11:21:31,579 - DEBUG - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-07-25 11:21:31,579 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
2025-07-25 11:21:31,579 - DEBUG - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
2025-07-25 11:21:31,579 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-25 11:21:31,579 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
2025-07-25 11:21:31,579 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
2025-07-25 11:21:31,579 - DEBUG - stack: ['$phi646.0', '$phi646.1']
2025-07-25 11:21:31,579 - DEBUG - state.pc_initial: State(pc_initial=646 nstack_initial=2)
2025-07-25 11:21:31,579 - DEBUG - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
2025-07-25 11:21:31,579 - DEBUG - stack ['$phi646.0', '$phi646.1']
2025-07-25 11:21:31,580 - DEBUG - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
2025-07-25 11:21:31,580 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 11:21:31,580 - DEBUG - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-25 11:21:31,580 - DEBUG - stack: ['$phi778.0']
2025-07-25 11:21:31,580 - DEBUG - state.pc_initial: State(pc_initial=778 nstack_initial=1)
2025-07-25 11:21:31,580 - DEBUG - dispatch pc=778, inst=NOP(arg=1, lineno=61)
2025-07-25 11:21:31,580 - DEBUG - stack ['$phi778.0']
2025-07-25 11:21:31,580 - DEBUG - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
2025-07-25 11:21:31,581 - DEBUG - stack ['$phi778.0']
2025-07-25 11:21:31,581 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
2025-07-25 11:21:31,581 - DEBUG - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
2025-07-25 11:21:31,581 - DEBUG - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 11:21:31,581 - DEBUG - state.pc_initial: State(pc_initial=648 nstack_initial=3)
2025-07-25 11:21:31,581 - DEBUG - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
2025-07-25 11:21:31,581 - DEBUG - stack ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-25 11:21:31,581 - DEBUG - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
2025-07-25 11:21:31,581 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 11:21:31,581 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
2025-07-25 11:21:31,582 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
2025-07-25 11:21:31,582 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
2025-07-25 11:21:31,582 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
2025-07-25 11:21:31,582 - DEBUG - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
2025-07-25 11:21:31,582 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
2025-07-25 11:21:31,582 - DEBUG - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
2025-07-25 11:21:31,582 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
2025-07-25 11:21:31,582 - DEBUG - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 11:21:31,582 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
2025-07-25 11:21:31,582 - DEBUG - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-07-25 11:21:31,582 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
2025-07-25 11:21:31,583 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
2025-07-25 11:21:31,583 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
2025-07-25 11:21:31,583 - DEBUG - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
2025-07-25 11:21:31,583 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
2025-07-25 11:21:31,583 - DEBUG - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
2025-07-25 11:21:31,583 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
2025-07-25 11:21:31,583 - DEBUG - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
2025-07-25 11:21:31,583 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
2025-07-25 11:21:31,583 - DEBUG - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
2025-07-25 11:21:31,583 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
2025-07-25 11:21:31,583 - DEBUG - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 11:21:31,583 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
2025-07-25 11:21:31,584 - DEBUG - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
2025-07-25 11:21:31,584 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
2025-07-25 11:21:31,584 - DEBUG - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-07-25 11:21:31,584 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
2025-07-25 11:21:31,584 - DEBUG - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
2025-07-25 11:21:31,584 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
2025-07-25 11:21:31,584 - DEBUG - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
2025-07-25 11:21:31,584 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
2025-07-25 11:21:31,584 - DEBUG - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
2025-07-25 11:21:31,584 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
2025-07-25 11:21:31,585 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
2025-07-25 11:21:31,585 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 11:21:31,585 - DEBUG - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
2025-07-25 11:21:31,585 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20']
2025-07-25 11:21:31,585 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=66)
2025-07-25 11:21:31,585 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
2025-07-25 11:21:31,585 - DEBUG - dispatch pc=720, inst=COPY(arg=2, lineno=66)
2025-07-25 11:21:31,585 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
2025-07-25 11:21:31,585 - DEBUG - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 11:21:31,586 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
2025-07-25 11:21:31,586 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
2025-07-25 11:21:31,586 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
2025-07-25 11:21:31,586 - DEBUG - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
2025-07-25 11:21:31,586 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
2025-07-25 11:21:31,586 - DEBUG - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
2025-07-25 11:21:31,586 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
2025-07-25 11:21:31,586 - DEBUG - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
2025-07-25 11:21:31,586 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
2025-07-25 11:21:31,586 - DEBUG - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 11:21:31,586 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
2025-07-25 11:21:31,587 - DEBUG - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
2025-07-25 11:21:31,587 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
2025-07-25 11:21:31,587 - DEBUG - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
2025-07-25 11:21:31,587 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28.3']
2025-07-25 11:21:31,587 - DEBUG - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-25 11:21:31,587 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
2025-07-25 11:21:31,587 - DEBUG - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
2025-07-25 11:21:31,587 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
2025-07-25 11:21:31,587 - DEBUG - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
2025-07-25 11:21:31,587 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
2025-07-25 11:21:31,587 - DEBUG - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
2025-07-25 11:21:31,587 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
2025-07-25 11:21:31,588 - DEBUG - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
2025-07-25 11:21:31,588 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
2025-07-25 11:21:31,588 - DEBUG - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-07-25 11:21:31,588 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
2025-07-25 11:21:31,588 - DEBUG - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
2025-07-25 11:21:31,588 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-25 11:21:31,588 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
2025-07-25 11:21:31,588 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
2025-07-25 11:21:31,588 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2)])
2025-07-25 11:21:31,589 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 11:21:31,589 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
2025-07-25 11:21:31,589 - DEBUG - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
2025-07-25 11:21:31,589 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
2025-07-25 11:21:31,591 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 11:21:31,592 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 11:21:31,593 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-25 11:21:31,594 - DEBUG - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
2025-07-25 11:21:31,595 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
2025-07-25 11:21:31,595 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 11:21:31,595 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6.1'}), (42, {'value': '$const40.6.1'}), (44, {'res': '$const44.7.2'}), (46, {'value': '$const44.7.2'}), (48, {'res': '$const48.8.1'}), (50, {'value': '$const48.8.1'}), (52, {'res': '$const52.9.1'}), (54, {'value': '$const52.9.1'}), (56, {'res': '$const56.10.2'}), (58, {'value': '$const56.10.2'}), (60, {'res': '$const60.11.1'}), (62, {'value': '$const60.11.1'}), (64, {'res': '$const64.12.1'}), (66, {'value': '$const64.12.1'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15.2'}), (82, {'index': '$const80.15.2', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19.2'}), (108, {'index': '$const106.19.2', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23.2'}), (134, {'index': '$const132.23.2', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
2025-07-25 11:21:31,596 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
2025-07-25 11:21:31,596 - DEBUG - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
2025-07-25 11:21:31,596 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27.3'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27.3', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
2025-07-25 11:21:31,596 - DEBUG - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
2025-07-25 11:21:31,597 - DEBUG - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
2025-07-25 11:21:31,597 - DEBUG - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19.3'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19.3', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
2025-07-25 11:21:31,598 - DEBUG - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
2025-07-25 11:21:31,598 - DEBUG - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28.3'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28.3', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
2025-07-25 11:21:31,599 - DEBUG - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
2025-07-25 11:21:31,599 - DEBUG - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0.0'}), (784, {'retval': '$const782.0.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 11:21:31,601 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15.2 = const(int, 0)            ['$const80.15.2']
    nwin = getitem(value=$70load_attr.14, index=$const80.15.2, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15.2', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19.2 = const(int, 0)           ['$const106.19.2']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19.2, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19.2', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23.2 = const(int, 0)           ['$const132.23.2']
    n_out = getitem(value=$122load_attr.22, index=$const132.23.2, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23.2', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27.3 = const(int, 1)           ['$const308.27.3']
    $binop_add310.28 = n + $const308.27.3    ['$binop_add310.28', '$const308.27.3', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19.3 = const(int, 1)           ['$const580.19.3']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19.3 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19.3']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28.3 = const(int, 1)           ['$const744.28.3']
    $binop_add746.29 = $binop_add740.27 + $const744.28.3 ['$binop_add740.27', '$binop_add746.29', '$const744.28.3']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0.0 = const(NoneType, None)    ['$const782.0.0']
    $784return_value.1 = cast(value=$const782.0.0) ['$784return_value.1', '$const782.0.0']
    return $784return_value.1                ['$784return_value.1']

2025-07-25 11:21:31,618 - DEBUG - ==== SSA block analysis pass on 0
2025-07-25 11:21:31,618 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024E9B065ED0>
2025-07-25 11:21:31,618 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,618 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,619 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,619 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,619 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,619 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,619 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,619 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,619 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,619 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,619 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,620 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,620 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,620 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,620 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,620 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,620 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,620 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,620 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,620 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,620 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,620 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,621 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,621 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,621 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,621 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,621 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,621 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,621 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,621 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,621 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,622 - DEBUG - ==== SSA block analysis pass on 176
2025-07-25 11:21:31,622 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024E9B065ED0>
2025-07-25 11:21:31,622 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,622 - DEBUG - ==== SSA block analysis pass on 178
2025-07-25 11:21:31,622 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024E9B065ED0>
2025-07-25 11:21:31,622 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,622 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,622 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,622 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,623 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,623 - DEBUG - ==== SSA block analysis pass on 180
2025-07-25 11:21:31,623 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024E9B065ED0>
2025-07-25 11:21:31,623 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,623 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,623 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,623 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,624 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 11:21:31,624 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 11:21:31,624 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,624 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,624 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,624 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,624 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,624 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,624 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 11:21:31,624 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:21:31,625 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,625 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,625 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,625 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,625 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,625 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,625 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,625 - DEBUG - ==== SSA block analysis pass on 374
2025-07-25 11:21:31,626 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024E9B065ED0>
2025-07-25 11:21:31,626 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,626 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,626 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,626 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,626 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,627 - DEBUG - ==== SSA block analysis pass on 376
2025-07-25 11:21:31,627 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024E9B065ED0>
2025-07-25 11:21:31,627 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,627 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,627 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:21:31,627 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,627 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,627 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:21:31,628 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,628 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,628 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,628 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,628 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 11:21:31,628 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,628 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,628 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,628 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,629 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,629 - DEBUG - ==== SSA block analysis pass on 500
2025-07-25 11:21:31,629 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024E9B065ED0>
2025-07-25 11:21:31,629 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:21:31,629 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 11:21:31,629 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,629 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,629 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,629 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,629 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,629 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 11:21:31,629 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,630 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,630 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:21:31,630 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,630 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,630 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,630 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,630 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,631 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,631 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,631 - DEBUG - ==== SSA block analysis pass on 646
2025-07-25 11:21:31,631 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024E9B065ED0>
2025-07-25 11:21:31,631 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,631 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,631 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,631 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,631 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,631 - DEBUG - ==== SSA block analysis pass on 648
2025-07-25 11:21:31,631 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024E9B065ED0>
2025-07-25 11:21:31,632 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,632 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,632 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:21:31,632 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,632 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,632 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:21:31,632 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,632 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,632 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,632 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,632 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 11:21:31,632 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,632 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,633 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,633 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,633 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,633 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,633 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,633 - DEBUG - ==== SSA block analysis pass on 778
2025-07-25 11:21:31,633 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024E9B065ED0>
2025-07-25 11:21:31,633 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,633 - DEBUG - ==== SSA block analysis pass on 782
2025-07-25 11:21:31,633 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000024E9B065ED0>
2025-07-25 11:21:31,634 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,634 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,634 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,634 - DEBUG - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x0000024E9B0DFA10>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x0000024E9B0E4250>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x0000024E9B0E46D0>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x0000024E9B0E49D0>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x0000024E9B0E4A50>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x0000024E9B0E4B90>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x0000024E9B0E4CD0>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x0000024E9B0E5890>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x0000024E9B0E7050>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x0000024E9B0E7E50>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x0000024E9B0E93D0>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x0000024E9B0E9910>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x0000024E9B0E9B90>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x0000024E9B0E5AD0>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x0000024E9B0E6150>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x0000024E9B0E6B90>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000024E9B0EA650>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000024E9B0EB490>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000024E9B0EBF10>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000024E9B0ECAD0>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000024E9AFAF250>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x0000024E9B0ED9D0>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x0000024E9B0EE5D0>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x0000024E9B0EFE50>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x0000024E9B394250>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x0000024E9B394450>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x0000024E9B0ED4D0>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x0000024E9B0EE390>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x0000024E9B0EF610>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000024E9B395410>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000024E9B396250>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x0000024E9B0DE850>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000024E9B396CD0>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000024E9B397B90>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x0000024E9B396ED0>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x0000024E9B0DF150>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x0000024E9B0E8410>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x0000024E9B0EA450>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x0000024E9B0EB290>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x0000024E9B3951D0>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x0000024E9B396010>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x0000024E9B397590>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x0000024E9B397950>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x0000024E9B0E8D10>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x0000024E9B0EF850>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x0000024E9B0ED010>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x0000024E9B397FD0>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x0000024E9B0CADD0>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x0000024E9B0EA210>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x0000024E9B0EB010>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x0000024E9B0EB710>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x0000024E9B0ECE10>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x0000024E9B394F50>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x0000024E9B395E10>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x0000024E9B396450>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x0000024E9B397D90>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x0000024E9B0E6510>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x0000024E9B0E8950>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x0000024E9B0EC8D0>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x0000024E9B0EC350>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x0000024E9B0EEBD0>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x0000024E9B0EEFD0>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x0000024E9B0EF490>,
                                   500)],
             '$const106.19.2': [(<numba.core.ir.Assign object at 0x0000024E9B0DF3D0>,
                                 0)],
             '$const132.23.2': [(<numba.core.ir.Assign object at 0x0000024E9B0DFC50>,
                                 0)],
             '$const308.27.3': [(<numba.core.ir.Assign object at 0x0000024E9B0E8210>,
                                 180)],
             '$const580.19.3': [(<numba.core.ir.Assign object at 0x0000024E9B0EED90>,
                                 500)],
             '$const744.28.3': [(<numba.core.ir.Assign object at 0x0000024E9B397710>,
                                 648)],
             '$const782.0.0': [(<numba.core.ir.Assign object at 0x0000024E9B395790>,
                                782)],
             '$const80.15.2': [(<numba.core.ir.Assign object at 0x0000024E9B0DEAD0>,
                                0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x0000024E9B0DD550>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x0000024E9B00B310>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x0000024E9A625C10>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x0000024E9AFA7990>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x0000024E9B0E9DD0>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x0000024E9B0EF110>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x0000024E9B0DE050>, 0),
                     (<numba.core.ir.Assign object at 0x0000024E9B0E7B90>, 180),
                     (<numba.core.ir.Assign object at 0x0000024E9B0EE310>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x0000024E9B0DD750>, 0),
                      (<numba.core.ir.Assign object at 0x0000024E9B0E6750>,
                       180),
                      (<numba.core.ir.Assign object at 0x0000024E9B0EAAD0>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x0000024E9B0E7CD0>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x0000024E9B0E8F90>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x0000024E9B0DDA90>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000024E9B0E6DD0>,
                             180),
                            (<numba.core.ir.Assign object at 0x0000024E9B0ED710>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x0000024E9B0D8790>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000024E9B087E10>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000024E9B087850>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x0000024E9B3945D0>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x0000024E9B0EFA90>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x0000024E9B0DD490>, 0),
                   (<numba.core.ir.Assign object at 0x0000024E9B0E5D90>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x0000024E9B086590>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x0000024E9B086990>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000024E9B064C10>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x0000024E9B066210>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x0000024E9B0DDD90>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000024E9B0E7510>,
                         180),
                        (<numba.core.ir.Assign object at 0x0000024E9B0EDD10>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x0000024E9B0C6850>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x0000024E9B0E4F90>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x0000024E9B0C9AD0>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x0000024E9B091110>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000024E9B0E54D0>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x0000024E9B0DE390>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000024E9B0EB910>,
                         376),
                        (<numba.core.ir.Assign object at 0x0000024E9B396650>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x0000024E9B0CA850>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000024E9B0C65D0>, 0)]})
2025-07-25 11:21:31,640 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x0000024E9B0DAA50>
2025-07-25 11:21:31,640 - DEBUG - Fix SSA violator on var time_register
2025-07-25 11:21:31,640 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,640 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63CD0>
2025-07-25 11:21:31,641 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,641 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,641 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,641 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,641 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,641 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,641 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,641 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,641 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,641 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,641 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,642 - DEBUG - first assign: time_register
2025-07-25 11:21:31,642 - DEBUG - replaced with: time_register = const(float, 0.0)
2025-07-25 11:21:31,642 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,642 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,642 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,642 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,642 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,642 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,642 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,642 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,643 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,643 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,643 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,643 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,643 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,643 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,643 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,643 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,643 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,644 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,644 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,644 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,644 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,644 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63CD0>
2025-07-25 11:21:31,644 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,644 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,644 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63CD0>
2025-07-25 11:21:31,644 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,645 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,645 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,645 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,645 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,645 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,645 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63CD0>
2025-07-25 11:21:31,645 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,645 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,645 - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,645 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,645 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,645 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 11:21:31,645 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 11:21:31,646 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,646 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,646 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,646 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,646 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,646 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,646 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 11:21:31,646 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:21:31,646 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,646 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,646 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,646 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,647 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,647 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,647 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,647 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,647 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63CD0>
2025-07-25 11:21:31,647 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,647 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,647 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,647 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,648 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,648 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,648 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63CD0>
2025-07-25 11:21:31,648 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,648 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,648 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:21:31,648 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,648 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,648 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:21:31,648 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,648 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,649 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,649 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,649 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 11:21:31,649 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,649 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,649 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,649 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,649 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,649 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,649 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63CD0>
2025-07-25 11:21:31,649 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:21:31,649 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 11:21:31,650 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,650 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,650 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,650 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,650 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,650 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 11:21:31,650 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,650 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,650 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:21:31,650 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,650 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,650 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,651 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,651 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,651 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,651 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,651 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,651 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63CD0>
2025-07-25 11:21:31,651 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,651 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,651 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,652 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,652 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,652 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,652 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63CD0>
2025-07-25 11:21:31,652 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,652 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,652 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:21:31,652 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,652 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,652 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:21:31,652 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,652 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,653 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,653 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,653 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 11:21:31,653 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,653 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,653 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,653 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,653 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,653 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,653 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,653 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,654 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63CD0>
2025-07-25 11:21:31,654 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,654 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,654 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63CD0>
2025-07-25 11:21:31,654 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,654 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,654 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,654 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024E9AF60790>],
             180: [<numba.core.ir.Assign object at 0x0000024E9B0A5590>]})
2025-07-25 11:21:31,654 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,654 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,655 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,655 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,655 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,655 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,655 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,655 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,655 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,655 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,656 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,656 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,656 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,656 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,656 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,656 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,656 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,656 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,656 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,656 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,656 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,656 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,657 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,657 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,657 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,657 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,657 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,657 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,657 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,657 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,657 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,657 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,657 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,657 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,658 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,658 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,658 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,658 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,658 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,658 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,658 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,658 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,658 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,658 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,658 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,658 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,659 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,659 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,659 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,659 - DEBUG - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,659 - DEBUG - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,659 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-25 11:21:31,659 - DEBUG - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
2025-07-25 11:21:31,659 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n
2025-07-25 11:21:31,660 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 11:21:31,660 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,660 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,660 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,660 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,660 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,660 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,660 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 11:21:31,660 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:21:31,661 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,661 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,661 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,661 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,661 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,661 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,661 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,661 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,661 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,661 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,662 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,662 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,662 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,662 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,662 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,662 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,662 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,662 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,662 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:21:31,662 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,662 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,662 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:21:31,662 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,663 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,663 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,663 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,663 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 11:21:31,663 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,663 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,663 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,663 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,663 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,664 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,664 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,664 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:21:31,664 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 11:21:31,664 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,664 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,664 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,664 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,664 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,664 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 11:21:31,664 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,665 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,665 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:21:31,665 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,665 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,665 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,665 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,665 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,665 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,665 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,665 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,665 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,665 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,666 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,666 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,666 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,666 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,666 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,666 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,666 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,666 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,666 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:21:31,666 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,666 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,666 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:21:31,666 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,666 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,667 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,667 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,667 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 11:21:31,667 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,667 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,667 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,667 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,667 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,667 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,667 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,668 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,668 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,668 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,668 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,668 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,668 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,668 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,668 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,668 - DEBUG - Fix SSA violator on var n
2025-07-25 11:21:31,669 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,669 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0A7510>
2025-07-25 11:21:31,669 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,669 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,669 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,669 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,669 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,669 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,669 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,669 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,669 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,670 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,670 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,670 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,670 - DEBUG - first assign: n
2025-07-25 11:21:31,670 - DEBUG - replaced with: n = const(int, 0)
2025-07-25 11:21:31,670 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,670 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,670 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,670 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,670 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,670 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,670 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,670 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,671 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,671 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,671 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,671 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,671 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,672 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,672 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,672 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,672 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,672 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,672 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,672 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,672 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0A7510>
2025-07-25 11:21:31,672 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,673 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,673 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0A7510>
2025-07-25 11:21:31,673 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,673 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,673 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,673 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,673 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,673 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,673 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0A7510>
2025-07-25 11:21:31,673 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,674 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,674 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,674 - DEBUG - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,674 - DEBUG - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,674 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 11:21:31,674 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 11:21:31,674 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,674 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,674 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,674 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,675 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,675 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,675 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 11:21:31,675 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:21:31,675 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,675 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,675 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,675 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,675 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,675 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,675 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,675 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,675 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0A7510>
2025-07-25 11:21:31,676 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,676 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,676 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,676 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,676 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,676 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,676 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0A7510>
2025-07-25 11:21:31,676 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,676 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,676 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:21:31,676 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,677 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,677 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:21:31,677 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,677 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,677 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,677 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,677 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 11:21:31,677 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,677 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,677 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,678 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,678 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,678 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,678 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0A7510>
2025-07-25 11:21:31,678 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:21:31,678 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 11:21:31,678 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,678 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,678 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,678 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,678 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,678 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 11:21:31,679 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,679 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,679 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:21:31,679 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,679 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,679 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,679 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,679 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,679 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,680 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,680 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,680 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0A7510>
2025-07-25 11:21:31,680 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,680 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,680 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,680 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,680 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,680 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,680 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0A7510>
2025-07-25 11:21:31,680 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,680 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,681 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:21:31,681 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,681 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,681 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:21:31,681 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,681 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,681 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,681 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,681 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 11:21:31,682 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,682 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,682 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,682 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,682 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,682 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,682 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,682 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,682 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0A7510>
2025-07-25 11:21:31,682 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,682 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,682 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0A7510>
2025-07-25 11:21:31,682 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,683 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,683 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,683 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024E9B0A67D0>],
             180: [<numba.core.ir.Assign object at 0x0000024E9B0D8ED0>]})
2025-07-25 11:21:31,683 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,683 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B086DD0>
2025-07-25 11:21:31,683 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,683 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,683 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,683 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,683 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,683 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,684 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,684 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,684 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,684 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,684 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,684 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,684 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,684 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,684 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,684 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,685 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,685 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,685 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,685 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,685 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,685 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,685 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,686 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,686 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,686 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,686 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,686 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,686 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,686 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,686 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,686 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,686 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B086DD0>
2025-07-25 11:21:31,687 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,687 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,687 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B086DD0>
2025-07-25 11:21:31,687 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,687 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,687 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,687 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,687 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,687 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,687 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B086DD0>
2025-07-25 11:21:31,687 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,687 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,687 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,687 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,688 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-25 11:21:31,688 - DEBUG - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
2025-07-25 11:21:31,688 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:21:31,688 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 11:21:31,688 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,688 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,688 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,688 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,688 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,688 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,688 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-25 11:21:31,688 - DEBUG - find_def var='n' stmt=$binop_add310.28 = n + $const308.27.3
2025-07-25 11:21:31,689 - DEBUG - replaced with: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:21:31,689 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:21:31,689 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,689 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,689 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,689 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,689 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,689 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,690 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,690 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,690 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B086DD0>
2025-07-25 11:21:31,690 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,690 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,690 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,690 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,690 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,690 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,690 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B086DD0>
2025-07-25 11:21:31,690 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,690 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,690 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:21:31,691 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,691 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,691 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:21:31,691 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,691 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,691 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,691 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,691 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-25 11:21:31,691 - DEBUG - find_def var='n' stmt=$binop_sub468.27 = n - i
2025-07-25 11:21:31,691 - DEBUG - find_def_from_top label 376
2025-07-25 11:21:31,691 - DEBUG - idom 374 from label 376
2025-07-25 11:21:31,691 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:21:31,691 - DEBUG - find_def_from_top label 374
2025-07-25 11:21:31,692 - DEBUG - idom 180 from label 374
2025-07-25 11:21:31,692 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:21:31,692 - DEBUG - replaced with: $binop_sub468.27 = n.1 - i
2025-07-25 11:21:31,692 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,692 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,692 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,692 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,692 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,692 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,692 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B086DD0>
2025-07-25 11:21:31,692 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:21:31,692 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 11:21:31,692 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,693 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,693 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,693 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,693 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,693 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-25 11:21:31,693 - DEBUG - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
2025-07-25 11:21:31,693 - DEBUG - find_def_from_top label 500
2025-07-25 11:21:31,693 - DEBUG - idom 374 from label 500
2025-07-25 11:21:31,693 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:21:31,694 - DEBUG - find_def_from_top label 374
2025-07-25 11:21:31,694 - DEBUG - idom 180 from label 374
2025-07-25 11:21:31,694 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:21:31,694 - DEBUG - replaced with: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:21:31,694 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,694 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,694 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:21:31,694 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,694 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,695 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,695 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,695 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,695 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,695 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,695 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,695 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B086DD0>
2025-07-25 11:21:31,695 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,695 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,695 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,695 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,695 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,696 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,696 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B086DD0>
2025-07-25 11:21:31,696 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,696 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,696 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:21:31,696 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,696 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,696 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:21:31,696 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,696 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,696 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,696 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,696 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-25 11:21:31,697 - DEBUG - find_def var='n' stmt=$binop_add740.27 = n + k
2025-07-25 11:21:31,697 - DEBUG - find_def_from_top label 648
2025-07-25 11:21:31,697 - DEBUG - idom 646 from label 648
2025-07-25 11:21:31,697 - DEBUG - find_def_from_bottom label 646
2025-07-25 11:21:31,697 - DEBUG - find_def_from_top label 646
2025-07-25 11:21:31,697 - DEBUG - idom 500 from label 646
2025-07-25 11:21:31,697 - DEBUG - find_def_from_bottom label 500
2025-07-25 11:21:31,697 - DEBUG - find_def_from_top label 500
2025-07-25 11:21:31,697 - DEBUG - idom 374 from label 500
2025-07-25 11:21:31,697 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:21:31,697 - DEBUG - find_def_from_top label 374
2025-07-25 11:21:31,698 - DEBUG - idom 180 from label 374
2025-07-25 11:21:31,698 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:21:31,698 - DEBUG - replaced with: $binop_add740.27 = n.1 + k
2025-07-25 11:21:31,698 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,698 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,698 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,698 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,698 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,699 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,699 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,699 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,699 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B086DD0>
2025-07-25 11:21:31,699 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,699 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,699 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B086DD0>
2025-07-25 11:21:31,699 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,699 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,699 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,699 - DEBUG - Fix SSA violator on var frac
2025-07-25 11:21:31,700 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,700 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D6550>
2025-07-25 11:21:31,700 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,700 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,700 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,700 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,700 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,700 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,700 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,700 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,700 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,700 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,700 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,700 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,701 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,701 - DEBUG - first assign: frac
2025-07-25 11:21:31,701 - DEBUG - replaced with: frac = const(float, 0.0)
2025-07-25 11:21:31,701 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,701 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,701 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,701 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,701 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,701 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,701 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,702 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,702 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,702 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,702 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,702 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,702 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,702 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,702 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,702 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,703 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,703 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,703 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,703 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D6550>
2025-07-25 11:21:31,703 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,703 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,703 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D6550>
2025-07-25 11:21:31,703 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,703 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,703 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,703 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,703 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,703 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,704 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D6550>
2025-07-25 11:21:31,704 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,704 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,704 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,704 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,704 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:21:31,704 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-25 11:21:31,704 - DEBUG - replaced with: frac.1 = scale * $binop_sub234.12
2025-07-25 11:21:31,704 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,705 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,705 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,705 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,705 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,705 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,705 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:21:31,705 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:21:31,705 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,705 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,706 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,706 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,706 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,706 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,706 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,706 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,706 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D6550>
2025-07-25 11:21:31,706 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,706 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,707 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,707 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,707 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,707 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,707 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D6550>
2025-07-25 11:21:31,707 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,707 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,707 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:21:31,707 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,707 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,707 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:21:31,707 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,708 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,708 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,708 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,708 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:21:31,708 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,708 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,708 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,708 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,708 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,708 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,708 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D6550>
2025-07-25 11:21:31,708 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:21:31,708 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-25 11:21:31,709 - DEBUG - replaced with: frac.2 = $binop_sub504.3
2025-07-25 11:21:31,709 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,709 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,709 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,709 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,709 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,709 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:21:31,709 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,709 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,709 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:21:31,710 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,710 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,710 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,710 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,710 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,710 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,710 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,710 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,710 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D6550>
2025-07-25 11:21:31,711 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,711 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,711 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,711 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,711 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,711 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,711 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D6550>
2025-07-25 11:21:31,711 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,711 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,711 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:21:31,711 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,711 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,711 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:21:31,712 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,712 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,712 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,712 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,712 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:21:31,712 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,712 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,712 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,712 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,712 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,712 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,712 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,712 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,713 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D6550>
2025-07-25 11:21:31,713 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,713 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,713 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D6550>
2025-07-25 11:21:31,713 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,713 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,713 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,713 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024E9B0D6ED0>],
             180: [<numba.core.ir.Assign object at 0x0000024E9B0C9A10>],
             500: [<numba.core.ir.Assign object at 0x0000024E9B0C5950>]})
2025-07-25 11:21:31,713 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,713 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0CB190>
2025-07-25 11:21:31,713 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,713 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,714 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,714 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,714 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,714 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,714 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,714 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,714 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,715 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,715 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,715 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,715 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,715 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,715 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,715 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,715 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,715 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,715 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,715 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,715 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,716 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,716 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,716 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,716 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,716 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,716 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,716 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,716 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,716 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,716 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,716 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,716 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0CB190>
2025-07-25 11:21:31,716 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,716 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,717 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0CB190>
2025-07-25 11:21:31,717 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,717 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,717 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,717 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,717 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,717 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,717 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0CB190>
2025-07-25 11:21:31,717 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,717 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,717 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,717 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,717 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:21:31,718 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:21:31,718 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,718 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 11:21:31,718 - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-07-25 11:21:31,718 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,718 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,718 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,719 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,719 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,719 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:21:31,719 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:21:31,719 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,719 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,719 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,719 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,719 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,720 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,720 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,720 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,720 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0CB190>
2025-07-25 11:21:31,720 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,720 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,720 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,720 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,720 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,720 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,720 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0CB190>
2025-07-25 11:21:31,720 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,720 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,721 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:21:31,721 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,721 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,721 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:21:31,721 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,721 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,721 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,721 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,721 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:21:31,721 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,721 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,721 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,722 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,722 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,722 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,722 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0CB190>
2025-07-25 11:21:31,722 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-25 11:21:31,722 - DEBUG - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
2025-07-25 11:21:31,722 - DEBUG - find_def_from_top label 500
2025-07-25 11:21:31,722 - DEBUG - idom 374 from label 500
2025-07-25 11:21:31,722 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:21:31,723 - DEBUG - find_def_from_top label 374
2025-07-25 11:21:31,723 - DEBUG - idom 180 from label 374
2025-07-25 11:21:31,723 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:21:31,723 - DEBUG - replaced with: $binop_sub504.3 = scale - frac.1
2025-07-25 11:21:31,723 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:21:31,723 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-25 11:21:31,723 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-25 11:21:31,723 - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-07-25 11:21:31,723 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,724 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,724 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,724 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,724 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:21:31,724 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,724 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,724 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:21:31,724 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,724 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,725 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,725 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,725 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,725 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,725 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,725 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,725 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0CB190>
2025-07-25 11:21:31,725 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,725 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,725 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,725 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,725 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,726 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,726 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0CB190>
2025-07-25 11:21:31,726 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,726 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,726 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:21:31,726 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,726 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,726 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:21:31,726 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,726 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,726 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,727 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,727 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:21:31,727 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,727 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,727 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,727 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,727 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,727 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,727 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,728 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,728 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0CB190>
2025-07-25 11:21:31,728 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,728 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,728 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0CB190>
2025-07-25 11:21:31,728 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,728 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,728 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,728 - DEBUG - Fix SSA violator on var index_frac
2025-07-25 11:21:31,728 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,728 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63990>
2025-07-25 11:21:31,728 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,728 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,729 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,729 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,729 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,729 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,729 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,729 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,729 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,729 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,729 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,729 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,729 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,729 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,730 - DEBUG - first assign: index_frac
2025-07-25 11:21:31,730 - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-07-25 11:21:31,730 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,730 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,730 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,730 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,730 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,730 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,730 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,730 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,730 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,731 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,731 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,731 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,731 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,731 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,731 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,731 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,731 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,731 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,731 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63990>
2025-07-25 11:21:31,732 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,732 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,732 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63990>
2025-07-25 11:21:31,732 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,732 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,732 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,732 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,732 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,732 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,732 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63990>
2025-07-25 11:21:31,732 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,732 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,732 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,732 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,733 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:21:31,733 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:21:31,733 - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-07-25 11:21:31,733 - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-07-25 11:21:31,733 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,733 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,733 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,733 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,733 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,733 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:21:31,733 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:21:31,733 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,734 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,734 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,734 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,734 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,734 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,734 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,734 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,734 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63990>
2025-07-25 11:21:31,734 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,735 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,735 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,735 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,735 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,735 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,735 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63990>
2025-07-25 11:21:31,735 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,736 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,736 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:21:31,736 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,736 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,736 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:21:31,736 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,736 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,736 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,736 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,736 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:21:31,736 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,737 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,737 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,737 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,737 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,737 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,737 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63990>
2025-07-25 11:21:31,737 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:21:31,737 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:21:31,737 - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-07-25 11:21:31,737 - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-07-25 11:21:31,737 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,737 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,737 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,738 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,738 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:21:31,738 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,738 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,738 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:21:31,738 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,738 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,738 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,738 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,738 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,738 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,738 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,739 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,739 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63990>
2025-07-25 11:21:31,739 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,739 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,739 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,739 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,739 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,740 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,740 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63990>
2025-07-25 11:21:31,740 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,740 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,740 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:21:31,740 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,740 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,740 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:21:31,740 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,740 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,740 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,741 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,741 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:21:31,741 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,741 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,741 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,741 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,741 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,741 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,741 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,741 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,741 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63990>
2025-07-25 11:21:31,741 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,742 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,742 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9AF63990>
2025-07-25 11:21:31,742 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,742 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,742 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,742 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024E9B087010>],
             180: [<numba.core.ir.Assign object at 0x0000024E9B0C4690>],
             500: [<numba.core.ir.Assign object at 0x0000024E9B0C7E10>]})
2025-07-25 11:21:31,742 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,742 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,742 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,742 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,742 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,742 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,743 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,743 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,743 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,743 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,743 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,743 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,743 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,743 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,743 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,743 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,743 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,744 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,744 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,744 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,744 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,744 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,744 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,744 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,744 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,745 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,745 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,745 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,745 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,745 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,745 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,745 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,745 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,745 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,745 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,745 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,745 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,746 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,746 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,746 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,746 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,746 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,746 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,746 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,746 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,746 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,746 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,746 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,746 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,746 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:21:31,747 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:21:31,747 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:21:31,747 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,747 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,747 - DEBUG - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,747 - DEBUG - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,747 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,747 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 11:21:31,748 - DEBUG - replaced with: eta = index_frac.1 - offset
2025-07-25 11:21:31,748 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,748 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,748 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:21:31,748 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:21:31,748 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,748 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,748 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,748 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,749 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,749 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,749 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,749 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,749 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,749 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,749 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,749 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,749 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,749 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,749 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,750 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,750 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,750 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,750 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:21:31,750 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,750 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,750 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:21:31,750 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,750 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,750 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,750 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,750 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:21:31,750 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,750 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,751 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,751 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,751 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,751 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,751 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,751 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:21:31,751 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:21:31,751 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:21:31,751 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,752 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,752 - DEBUG - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,752 - DEBUG - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,752 - DEBUG - on stmt: eta = index_frac - offset
2025-07-25 11:21:31,752 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-25 11:21:31,752 - DEBUG - replaced with: eta = index_frac.2 - offset
2025-07-25 11:21:31,752 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,752 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:21:31,753 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,753 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,753 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:21:31,753 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,753 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,753 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,753 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,753 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,753 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,753 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,753 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,754 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,754 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,754 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,754 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,754 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,754 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,754 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,754 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,754 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,754 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,754 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:21:31,755 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,755 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,755 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:21:31,755 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,755 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,755 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,755 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,755 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:21:31,755 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,755 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,756 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,756 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,756 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,756 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,756 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,756 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,756 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,756 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,756 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,756 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,757 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,757 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,757 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,757 - DEBUG - Fix SSA violator on var offset
2025-07-25 11:21:31,757 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,757 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,757 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,757 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,757 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,757 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,757 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,757 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,758 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,758 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,758 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,758 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,758 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,758 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,758 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,758 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,758 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,758 - DEBUG - first assign: offset
2025-07-25 11:21:31,758 - DEBUG - replaced with: offset = const(int, 0)
2025-07-25 11:21:31,758 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,758 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,758 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,759 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,759 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,759 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,759 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,759 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,759 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,759 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,759 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,759 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,760 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,760 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,760 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,760 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,760 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,760 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,760 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,760 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,760 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,761 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,761 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,761 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,761 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,761 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,761 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,761 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,761 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,761 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,761 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,761 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,762 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:21:31,762 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:21:31,762 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:21:31,762 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,762 - DEBUG - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,762 - DEBUG - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,762 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 11:21:31,762 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,762 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,762 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:21:31,762 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:21:31,762 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,763 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,763 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,763 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,763 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,763 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,763 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,763 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,763 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,763 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,763 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,763 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,763 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,764 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,764 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,764 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,764 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,764 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,764 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:21:31,764 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,765 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,765 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:21:31,765 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,765 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,765 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,765 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,765 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:21:31,765 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,765 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,765 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,765 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,766 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,766 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,766 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,766 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:21:31,766 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:21:31,766 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:21:31,766 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,766 - DEBUG - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,766 - DEBUG - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,766 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 11:21:31,766 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,766 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:21:31,766 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,766 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,767 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:21:31,767 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,767 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,767 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,767 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,767 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,767 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,767 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,767 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,767 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,767 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,768 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,768 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,768 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,768 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,768 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,768 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,768 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,768 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,768 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:21:31,769 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,769 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,769 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:21:31,769 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,769 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,769 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,769 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,769 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:21:31,769 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,769 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,770 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,770 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,770 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,770 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,770 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,770 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,770 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,770 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,770 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,770 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,770 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,770 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,770 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,771 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024E9B0CBC10>],
             180: [<numba.core.ir.Assign object at 0x0000024E9B0C4350>],
             500: [<numba.core.ir.Assign object at 0x0000024E9B0C7190>]})
2025-07-25 11:21:31,771 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,771 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B065C10>
2025-07-25 11:21:31,771 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,771 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,771 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,771 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,771 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,771 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,771 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,772 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,772 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,772 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,772 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,772 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,772 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,772 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,772 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,772 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,772 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,772 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,772 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,772 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,772 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,773 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,773 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,773 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,773 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,773 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,773 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,773 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,773 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,773 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,773 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,774 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,774 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B065C10>
2025-07-25 11:21:31,774 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,774 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,774 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B065C10>
2025-07-25 11:21:31,774 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,774 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,774 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,774 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,774 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,774 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,775 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B065C10>
2025-07-25 11:21:31,775 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,775 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,775 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,775 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,775 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:21:31,775 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:21:31,775 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:21:31,775 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,775 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,775 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-25 11:21:31,775 - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-07-25 11:21:31,776 - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-07-25 11:21:31,776 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,776 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,776 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:21:31,776 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-25 11:21:31,776 - DEBUG - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
2025-07-25 11:21:31,776 - DEBUG - replaced with: $binop_sub318.31 = nwin - offset.1
2025-07-25 11:21:31,776 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,777 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,777 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,777 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,777 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,777 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,777 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,777 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,777 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B065C10>
2025-07-25 11:21:31,777 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,777 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,778 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,778 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,778 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,778 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,778 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B065C10>
2025-07-25 11:21:31,778 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,778 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,778 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:21:31,778 - DEBUG - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
2025-07-25 11:21:31,778 - DEBUG - find_def_from_top label 376
2025-07-25 11:21:31,778 - DEBUG - idom 374 from label 376
2025-07-25 11:21:31,778 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:21:31,778 - DEBUG - find_def_from_top label 374
2025-07-25 11:21:31,779 - DEBUG - idom 180 from label 374
2025-07-25 11:21:31,779 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:21:31,779 - DEBUG - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 11:21:31,779 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,779 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,779 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:21:31,779 - DEBUG - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
2025-07-25 11:21:31,779 - DEBUG - find_def_from_top label 376
2025-07-25 11:21:31,779 - DEBUG - idom 374 from label 376
2025-07-25 11:21:31,779 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:21:31,779 - DEBUG - find_def_from_top label 374
2025-07-25 11:21:31,779 - DEBUG - idom 180 from label 374
2025-07-25 11:21:31,779 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:21:31,780 - DEBUG - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 11:21:31,780 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,780 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,780 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,780 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,780 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:21:31,780 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,780 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,780 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,781 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,781 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,781 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,781 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B065C10>
2025-07-25 11:21:31,781 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:21:31,781 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:21:31,781 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:21:31,781 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,781 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,781 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-25 11:21:31,781 - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-07-25 11:21:31,782 - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-07-25 11:21:31,782 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,782 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:21:31,782 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,782 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,782 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-25 11:21:31,782 - DEBUG - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
2025-07-25 11:21:31,782 - DEBUG - replaced with: $binop_sub590.23 = nwin - offset.2
2025-07-25 11:21:31,782 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,782 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,783 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,783 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,783 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,783 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,783 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,783 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,783 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B065C10>
2025-07-25 11:21:31,783 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,783 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,783 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,783 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,784 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,784 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,784 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B065C10>
2025-07-25 11:21:31,784 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,784 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,784 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:21:31,784 - DEBUG - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
2025-07-25 11:21:31,784 - DEBUG - find_def_from_top label 648
2025-07-25 11:21:31,784 - DEBUG - idom 646 from label 648
2025-07-25 11:21:31,784 - DEBUG - find_def_from_bottom label 646
2025-07-25 11:21:31,785 - DEBUG - find_def_from_top label 646
2025-07-25 11:21:31,785 - DEBUG - idom 500 from label 646
2025-07-25 11:21:31,785 - DEBUG - find_def_from_bottom label 500
2025-07-25 11:21:31,785 - DEBUG - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 11:21:31,785 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,785 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,785 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:21:31,785 - DEBUG - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
2025-07-25 11:21:31,785 - DEBUG - find_def_from_top label 648
2025-07-25 11:21:31,786 - DEBUG - idom 646 from label 648
2025-07-25 11:21:31,786 - DEBUG - find_def_from_bottom label 646
2025-07-25 11:21:31,786 - DEBUG - find_def_from_top label 646
2025-07-25 11:21:31,786 - DEBUG - idom 500 from label 646
2025-07-25 11:21:31,786 - DEBUG - find_def_from_bottom label 500
2025-07-25 11:21:31,786 - DEBUG - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 11:21:31,786 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,786 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,786 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,786 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,786 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:21:31,787 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,787 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,787 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,787 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,787 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,787 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,787 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,787 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,787 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B065C10>
2025-07-25 11:21:31,787 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,787 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,787 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B065C10>
2025-07-25 11:21:31,787 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,788 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,788 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,788 - DEBUG - Fix SSA violator on var eta
2025-07-25 11:21:31,788 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,788 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C73D0>
2025-07-25 11:21:31,788 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,788 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,788 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,788 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,789 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,789 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,789 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,789 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,789 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,789 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,789 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,789 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,789 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,789 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,790 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,790 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,790 - DEBUG - first assign: eta
2025-07-25 11:21:31,790 - DEBUG - replaced with: eta = const(float, 0.0)
2025-07-25 11:21:31,790 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,790 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,790 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,790 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,790 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,790 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,790 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,790 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,790 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,790 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,791 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,791 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,791 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,791 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,791 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,791 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,791 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C73D0>
2025-07-25 11:21:31,791 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,791 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,791 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C73D0>
2025-07-25 11:21:31,791 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,791 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,792 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,792 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,792 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,792 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,792 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C73D0>
2025-07-25 11:21:31,792 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,792 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,792 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,792 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,792 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:21:31,792 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:21:31,793 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:21:31,793 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,793 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,793 - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-07-25 11:21:31,793 - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-07-25 11:21:31,793 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,793 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,793 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:21:31,794 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 11:21:31,794 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,794 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,794 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,794 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,794 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,794 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,794 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,794 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,794 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C73D0>
2025-07-25 11:21:31,794 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,795 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,795 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,795 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,795 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,795 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,795 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C73D0>
2025-07-25 11:21:31,795 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,795 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,795 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 11:21:31,795 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,795 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,795 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 11:21:31,795 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,795 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,795 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,796 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,796 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:21:31,796 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,796 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,796 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,796 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,796 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,796 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,796 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C73D0>
2025-07-25 11:21:31,797 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:21:31,797 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:21:31,797 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:21:31,797 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,797 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,797 - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-07-25 11:21:31,797 - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-07-25 11:21:31,797 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,797 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:21:31,798 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,798 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,798 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 11:21:31,798 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,798 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,798 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,798 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,798 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,798 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,799 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,799 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,799 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C73D0>
2025-07-25 11:21:31,799 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,799 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,799 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,799 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,799 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,799 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,799 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C73D0>
2025-07-25 11:21:31,799 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,799 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,800 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 11:21:31,800 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,800 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,800 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 11:21:31,800 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,800 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,800 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,800 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,800 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:21:31,800 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,800 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,800 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,800 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,801 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,801 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,801 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,801 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,801 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C73D0>
2025-07-25 11:21:31,801 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,801 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,802 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0C73D0>
2025-07-25 11:21:31,802 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,802 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,802 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,802 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024E9B0C7410>],
             180: [<numba.core.ir.Assign object at 0x0000024E9B0C6090>],
             500: [<numba.core.ir.Assign object at 0x0000024E9B091150>]})
2025-07-25 11:21:31,802 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,802 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,802 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,802 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,802 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,802 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,803 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,803 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,803 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,803 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,803 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,803 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,803 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,803 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,803 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,803 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,803 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,804 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,804 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,804 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,804 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,804 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,804 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,804 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,804 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,804 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,804 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,804 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,804 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,805 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,805 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,805 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,805 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,805 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,805 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,805 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,805 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,805 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,805 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,806 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,806 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,806 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,806 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,806 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,806 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,806 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,806 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,806 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,806 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,806 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:21:31,807 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:21:31,807 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:21:31,807 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,807 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,807 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 11:21:31,807 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,807 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,807 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:21:31,807 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 11:21:31,807 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,807 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,807 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,808 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,808 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,808 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,808 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,808 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,808 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,808 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,808 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,808 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,808 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,808 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,809 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,809 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,809 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,809 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,809 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 11:21:31,809 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,809 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,809 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 11:21:31,809 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,810 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,810 - DEBUG - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
2025-07-25 11:21:31,810 - DEBUG - find_def_from_top label 376
2025-07-25 11:21:31,810 - DEBUG - idom 374 from label 376
2025-07-25 11:21:31,810 - DEBUG - find_def_from_bottom label 374
2025-07-25 11:21:31,810 - DEBUG - find_def_from_top label 374
2025-07-25 11:21:31,810 - DEBUG - idom 180 from label 374
2025-07-25 11:21:31,810 - DEBUG - find_def_from_bottom label 180
2025-07-25 11:21:31,810 - DEBUG - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 11:21:31,810 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,811 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,811 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:21:31,811 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,811 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,811 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,811 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,811 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,811 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,811 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,811 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:21:31,811 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:21:31,811 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:21:31,812 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,812 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,812 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 11:21:31,812 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,812 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:21:31,812 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,812 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,812 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 11:21:31,812 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,812 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,812 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,812 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,813 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,813 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,813 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,813 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,813 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,813 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,813 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,813 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,813 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,814 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,814 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,814 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,814 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,814 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,814 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 11:21:31,814 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,814 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,815 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 11:21:31,815 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,815 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,815 - DEBUG - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
2025-07-25 11:21:31,815 - DEBUG - find_def_from_top label 648
2025-07-25 11:21:31,815 - DEBUG - idom 646 from label 648
2025-07-25 11:21:31,815 - DEBUG - find_def_from_bottom label 646
2025-07-25 11:21:31,815 - DEBUG - find_def_from_top label 646
2025-07-25 11:21:31,815 - DEBUG - idom 500 from label 646
2025-07-25 11:21:31,815 - DEBUG - find_def_from_bottom label 500
2025-07-25 11:21:31,815 - DEBUG - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 11:21:31,815 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,816 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,816 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:21:31,816 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,816 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,816 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,816 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,816 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,816 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,816 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,816 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,816 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,816 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,816 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,817 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C8F50>
2025-07-25 11:21:31,817 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,817 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,817 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,817 - DEBUG - Fix SSA violator on var weight
2025-07-25 11:21:31,817 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,817 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,817 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,817 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,817 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,817 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,817 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,818 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,818 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,818 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,818 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,818 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,818 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,818 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,819 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,819 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,819 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,819 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,819 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,819 - DEBUG - first assign: weight
2025-07-25 11:21:31,819 - DEBUG - replaced with: weight = const(float, 0.0)
2025-07-25 11:21:31,819 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,819 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,819 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,819 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,819 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,820 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,820 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,820 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,820 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,820 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,820 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,820 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,820 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,820 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,820 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,820 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,820 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,820 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,821 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,821 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,821 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,821 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,821 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,821 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,821 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,821 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,821 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,821 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,821 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,822 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,822 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:21:31,822 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:21:31,822 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:21:31,822 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,822 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,822 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 11:21:31,822 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,822 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,823 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:21:31,823 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 11:21:31,823 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,823 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,823 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,823 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,823 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,823 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,823 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,823 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,823 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,824 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,824 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,824 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,824 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,824 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,824 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,824 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,824 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,824 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,824 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 11:21:31,824 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,824 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,824 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 11:21:31,825 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,825 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 11:21:31,825 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,825 - DEBUG - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,825 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,825 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:21:31,825 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,825 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,825 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,825 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,825 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,825 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,826 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,826 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:21:31,826 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:21:31,826 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:21:31,826 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,826 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,826 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 11:21:31,826 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,827 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:21:31,827 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,827 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,827 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 11:21:31,827 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,827 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,827 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,827 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,827 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,827 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,828 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,828 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,828 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,828 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,828 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,828 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,828 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,828 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,828 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,828 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,828 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,828 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,829 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 11:21:31,829 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,829 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,829 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 11:21:31,829 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,829 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 11:21:31,829 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,829 - DEBUG - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,829 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,829 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:21:31,829 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,829 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,830 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,830 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,830 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,830 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,830 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,830 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,830 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,830 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,831 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,831 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000024E9B0D7BD0>
2025-07-25 11:21:31,831 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,831 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,831 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:31,831 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000024E9B0A6C50>],
             376: [<numba.core.ir.Assign object at 0x0000024E9B091D50>],
             648: [<numba.core.ir.Assign object at 0x0000024E9B093E90>]})
2025-07-25 11:21:31,831 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-25 11:21:31,831 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C7F90>
2025-07-25 11:21:31,831 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-25 11:21:31,832 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-25 11:21:31,832 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-25 11:21:31,832 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-25 11:21:31,832 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-25 11:21:31,832 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-25 11:21:31,832 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-25 11:21:31,832 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-25 11:21:31,832 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-25 11:21:31,832 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,832 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-25 11:21:31,832 - DEBUG - on stmt: n = const(int, 0)
2025-07-25 11:21:31,832 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-25 11:21:31,832 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-25 11:21:31,833 - DEBUG - on stmt: offset = const(int, 0)
2025-07-25 11:21:31,833 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-25 11:21:31,833 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-25 11:21:31,833 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-25 11:21:31,833 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-25 11:21:31,833 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,833 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-25 11:21:31,833 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-25 11:21:31,833 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,833 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-25 11:21:31,833 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-25 11:21:31,833 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-25 11:21:31,834 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-25 11:21:31,834 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,834 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-25 11:21:31,834 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-25 11:21:31,834 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,834 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-25 11:21:31,834 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C7F90>
2025-07-25 11:21:31,834 - DEBUG - on stmt: jump 178
2025-07-25 11:21:31,835 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-25 11:21:31,835 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C7F90>
2025-07-25 11:21:31,835 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-25 11:21:31,835 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-25 11:21:31,835 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-25 11:21:31,835 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-25 11:21:31,835 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-25 11:21:31,835 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-25 11:21:31,835 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C7F90>
2025-07-25 11:21:31,835 - DEBUG - on stmt: t = $phi180.1
2025-07-25 11:21:31,836 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,836 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-25 11:21:31,836 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,836 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-25 11:21:31,836 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-25 11:21:31,836 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-25 11:21:31,836 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-25 11:21:31,836 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,836 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-25 11:21:31,836 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-25 11:21:31,836 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-25 11:21:31,836 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-25 11:21:31,836 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-25 11:21:31,837 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-25 11:21:31,837 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,837 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-25 11:21:31,837 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,837 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-25 11:21:31,837 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-25 11:21:31,837 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,837 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-25 11:21:31,837 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C7F90>
2025-07-25 11:21:31,837 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-25 11:21:31,837 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-25 11:21:31,837 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-25 11:21:31,837 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-25 11:21:31,838 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-25 11:21:31,838 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-25 11:21:31,838 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C7F90>
2025-07-25 11:21:31,838 - DEBUG - on stmt: i = $phi376.2
2025-07-25 11:21:31,838 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-25 11:21:31,838 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-25 11:21:31,838 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,838 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-25 11:21:31,838 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-25 11:21:31,839 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,839 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-25 11:21:31,839 - DEBUG - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-25 11:21:31,839 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,839 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-25 11:21:31,839 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-25 11:21:31,839 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,840 - DEBUG - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
2025-07-25 11:21:31,840 - DEBUG - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
2025-07-25 11:21:31,840 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,840 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-25 11:21:31,840 - DEBUG - on stmt: jump 374
2025-07-25 11:21:31,840 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-25 11:21:31,840 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C7F90>
2025-07-25 11:21:31,840 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-25 11:21:31,840 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-25 11:21:31,840 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-25 11:21:31,840 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-25 11:21:31,840 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,841 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-25 11:21:31,841 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-25 11:21:31,841 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-25 11:21:31,841 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-25 11:21:31,841 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-25 11:21:31,841 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-25 11:21:31,841 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-25 11:21:31,841 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,841 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-25 11:21:31,841 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-25 11:21:31,842 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-25 11:21:31,842 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-25 11:21:31,842 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,842 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-25 11:21:31,842 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C7F90>
2025-07-25 11:21:31,842 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-25 11:21:31,842 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-25 11:21:31,842 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-25 11:21:31,842 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-25 11:21:31,842 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-25 11:21:31,842 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-25 11:21:31,842 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C7F90>
2025-07-25 11:21:31,843 - DEBUG - on stmt: k = $phi648.2
2025-07-25 11:21:31,843 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-25 11:21:31,843 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-25 11:21:31,843 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-25 11:21:31,843 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-25 11:21:31,843 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-25 11:21:31,843 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-25 11:21:31,843 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-25 11:21:31,844 - DEBUG - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-25 11:21:31,844 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-25 11:21:31,844 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-25 11:21:31,844 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-25 11:21:31,844 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-25 11:21:31,844 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-25 11:21:31,844 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,844 - DEBUG - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
2025-07-25 11:21:31,844 - DEBUG - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
2025-07-25 11:21:31,844 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-25 11:21:31,844 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-25 11:21:31,845 - DEBUG - on stmt: jump 646
2025-07-25 11:21:31,845 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-25 11:21:31,845 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C7F90>
2025-07-25 11:21:31,845 - DEBUG - on stmt: jump 176
2025-07-25 11:21:31,845 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-25 11:21:31,845 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000024E9B0C7F90>
2025-07-25 11:21:31,845 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-25 11:21:31,845 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-25 11:21:31,845 - DEBUG - on stmt: return $784return_value.1
2025-07-25 11:21:32,218 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-07-25 11:21:32,219 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-25 11:21:32,220 - DEBUG - stack: []
2025-07-25 11:21:32,220 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-25 11:21:32,220 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-07-25 11:21:32,220 - DEBUG - stack []
2025-07-25 11:21:32,221 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-07-25 11:21:32,221 - DEBUG - stack []
2025-07-25 11:21:32,221 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 11:21:32,221 - DEBUG - stack []
2025-07-25 11:21:32,221 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-07-25 11:21:32,221 - DEBUG - stack ['$x4.0']
2025-07-25 11:21:32,222 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 11:21:32,222 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-07-25 11:21:32,222 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 11:21:32,222 - DEBUG - stack ['$8binary_subscr.2']
2025-07-25 11:21:32,222 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-07-25 11:21:32,222 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-07-25 11:21:32,223 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 11:21:32,223 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-07-25 11:21:32,223 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-07-25 11:21:32,223 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-07-25 11:21:32,223 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-07-25 11:21:32,223 - DEBUG - stack ['$binop_add32.6']
2025-07-25 11:21:32,224 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-25 11:21:32,224 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-07-25 11:21:32,224 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-07-25 11:21:32,224 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-07-25 11:21:32,224 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-25 11:21:32,225 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-07-25 11:21:32,225 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-07-25 11:21:32,225 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-07-25 11:21:32,225 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-07-25 11:21:32,225 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-07-25 11:21:32,226 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-07-25 11:21:32,226 - DEBUG - stack ['$binop_sub56.12']
2025-07-25 11:21:32,226 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 11:21:32,226 - DEBUG - stack []
2025-07-25 11:21:32,226 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-07-25 11:21:32,227 - DEBUG - stack ['$x62.13']
2025-07-25 11:21:32,227 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 11:21:32,227 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-07-25 11:21:32,227 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-25 11:21:32,227 - DEBUG - stack ['$66binary_subscr.15']
2025-07-25 11:21:32,227 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-07-25 11:21:32,227 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-07-25 11:21:32,228 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-25 11:21:32,228 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-07-25 11:21:32,228 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-07-25 11:21:32,228 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-07-25 11:21:32,228 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-07-25 11:21:32,228 - DEBUG - stack ['$binop_sub90.19']
2025-07-25 11:21:32,229 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-07-25 11:21:32,229 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-07-25 11:21:32,229 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-07-25 11:21:32,229 - DEBUG - stack ['$binop_truediv96.21']
2025-07-25 11:21:32,229 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 11:21:32,229 - DEBUG - stack []
2025-07-25 11:21:32,229 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 11:21:32,229 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-07-25 11:21:32,230 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-07-25 11:21:32,230 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-07-25 11:21:32,230 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-07-25 11:21:32,230 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 11:21:32,230 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-07-25 11:21:32,230 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-25 11:21:32,231 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-25 11:21:32,231 - DEBUG - stack ['$130call.26']
2025-07-25 11:21:32,231 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-25 11:21:32,231 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-07-25 11:21:32,231 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-07-25 11:21:32,231 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-07-25 11:21:32,231 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-07-25 11:21:32,231 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 11:21:32,232 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-07-25 11:21:32,232 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-25 11:21:32,232 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-07-25 11:21:32,232 - DEBUG - stack ['$130call.26', '$168call.31']
2025-07-25 11:21:32,232 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-07-25 11:21:32,232 - DEBUG - stack ['$178compare_op.32']
2025-07-25 11:21:32,232 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-25 11:21:32,232 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-25 11:21:32,233 - DEBUG - stack: []
2025-07-25 11:21:32,233 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-07-25 11:21:32,233 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-07-25 11:21:32,233 - DEBUG - stack []
2025-07-25 11:21:32,233 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-07-25 11:21:32,233 - DEBUG - stack ['$const186.0.4']
2025-07-25 11:21:32,233 - DEBUG - end state. edges=[]
2025-07-25 11:21:32,233 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-07-25 11:21:32,234 - DEBUG - stack: []
2025-07-25 11:21:32,234 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-25 11:21:32,234 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-07-25 11:21:32,234 - DEBUG - stack []
2025-07-25 11:21:32,234 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-07-25 11:21:32,234 - DEBUG - stack ['$b190.0']
2025-07-25 11:21:32,234 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-07-25 11:21:32,235 - DEBUG - stack ['$192unary_negative.1']
2025-07-25 11:21:32,235 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-07-25 11:21:32,235 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-07-25 11:21:32,235 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-07-25 11:21:32,235 - DEBUG - stack ['$binop_truediv196.3']
2025-07-25 11:21:32,235 - DEBUG - end state. edges=[]
2025-07-25 11:21:32,235 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-25 11:21:32,235 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-25 11:21:32,236 - DEBUG - defmap: {}
2025-07-25 11:21:32,236 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-25 11:21:32,236 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-25 11:21:32,236 - DEBUG - keep phismap: {}
2025-07-25 11:21:32,236 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-25 11:21:32,236 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-25 11:21:32,236 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-07-25 11:21:32,237 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 11:21:32,237 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-25 11:21:32,238 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-07-25 11:21:32,302 - DEBUG - BPM-Wert ermittelt: 172
2025-07-25 11:21:34,518 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:21:53,652 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:21:53,654 - INFO - Tags gespeichert für: data\05. Untergrund (Feat. Eko Fresh).mp3
2025-07-25 11:21:53,654 - INFO - Verarbeite Datei: data\08. Das Leben ist hart.mp3
2025-07-25 11:21:53,654 - INFO - Beginne Verarbeitung der Datei: data\08. Das Leben ist hart.mp3
2025-07-25 11:21:53,657 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Das Leben ist hart
2025-07-25 11:21:53,870 - DEBUG - BPM-Wert ermittelt: 83
2025-07-25 11:21:56,087 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:22:04,148 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:22:04,149 - INFO - Tags gespeichert für: data\08. Das Leben ist hart.mp3
2025-07-25 11:22:04,149 - INFO - Verarbeite Datei: data\09. Hast du was bist du was.mp3
2025-07-25 11:22:04,150 - INFO - Beginne Verarbeitung der Datei: data\09. Hast du was bist du was.mp3
2025-07-25 11:22:04,154 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Hast du was bist du was
2025-07-25 11:22:04,369 - DEBUG - BPM-Wert ermittelt: 129
2025-07-25 11:22:06,584 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:22:18,962 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:22:18,963 - INFO - Tags gespeichert für: data\09. Hast du was bist du was.mp3
2025-07-25 11:22:18,964 - INFO - Verarbeite Datei: data\09. Staatsfeind Nr. 1.mp3
2025-07-25 11:22:18,964 - INFO - Beginne Verarbeitung der Datei: data\09. Staatsfeind Nr. 1.mp3
2025-07-25 11:22:18,968 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Staatsfeind Nr. 1
2025-07-25 11:22:19,183 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 11:22:21,403 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:22:31,110 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:22:31,111 - INFO - Tags gespeichert für: data\09. Staatsfeind Nr. 1.mp3
2025-07-25 11:22:31,111 - INFO - Verarbeite Datei: data\12. Sex in the City.mp3
2025-07-25 11:22:31,111 - INFO - Beginne Verarbeitung der Datei: data\12. Sex in the City.mp3
2025-07-25 11:22:31,113 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Sex in the City
2025-07-25 11:22:31,326 - DEBUG - BPM-Wert ermittelt: 96
2025-07-25 11:22:33,543 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:22:43,082 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:22:43,083 - INFO - Tags gespeichert für: data\12. Sex in the City.mp3
2025-07-25 11:22:43,084 - INFO - Verarbeite Datei: data\13. Augenblick.mp3
2025-07-25 11:22:43,084 - INFO - Beginne Verarbeitung der Datei: data\13. Augenblick.mp3
2025-07-25 11:22:43,087 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Augenblick
2025-07-25 11:22:43,300 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 11:22:45,517 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:22:54,854 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:22:54,855 - INFO - Tags gespeichert für: data\13. Augenblick.mp3
2025-07-25 11:22:54,855 - INFO - Verarbeite Datei: data\17. Mein Leben lang (Feat. Chakuza).mp3
2025-07-25 11:22:54,856 - INFO - Beginne Verarbeitung der Datei: data\17. Mein Leben lang (Feat. Chakuza).mp3
2025-07-25 11:22:54,859 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Mein Leben lang (Feat. Chakuza)
2025-07-25 11:22:55,074 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 11:22:57,287 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:23:09,074 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:23:09,075 - INFO - Tags gespeichert für: data\17. Mein Leben lang (Feat. Chakuza).mp3
2025-07-25 11:23:09,076 - INFO - Verarbeite Datei: data\20. Von der Skyline zum Bordstein zurück.mp3
2025-07-25 11:23:09,076 - INFO - Beginne Verarbeitung der Datei: data\20. Von der Skyline zum Bordstein zurück.mp3
2025-07-25 11:23:09,106 - DEBUG - Metadaten geladen: Artist=Bushido, Title=Von der Skyline zum Bordstein zurück
2025-07-25 11:23:09,106 - INFO - Lade und speichere Lyrics für: Bushido - Von der Skyline zum Bordstein zurück
2025-07-25 11:23:09,108 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:23:09,365 - DEBUG - https://genius.com:443 "GET /bushido-von-der-skyline-zum-bordstein-zuruck-lyrics HTTP/1.1" 301 None
2025-07-25 11:23:11,245 - DEBUG - https://genius.com:443 "GET /Bushido-von-der-skyline-zum-bordstein-zuruck-lyrics HTTP/1.1" 200 None
2025-07-25 11:23:11,702 - DEBUG - BPM-Wert ermittelt: 96
2025-07-25 11:23:13,914 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:23:29,061 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:23:29,066 - INFO - Tags gespeichert für: data\20. Von der Skyline zum Bordstein zurück.mp3
2025-07-25 11:23:29,066 - INFO - Verarbeitung abgeschlossen.
2025-07-25 11:23:29,067 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 11:26:59,299 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 11:26:59,300 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 11:26:59,301 - INFO - Verarbeite Datei: data\01. KDR.mp3
2025-07-25 11:26:59,301 - INFO - Beginne Verarbeitung der Datei: data\01. KDR.mp3
2025-07-25 11:26:59,309 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=KDR
2025-07-25 11:26:59,309 - INFO - Lade und speichere Lyrics für: Kool Savas - KDR
2025-07-25 11:26:59,311 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:26:59,777 - DEBUG - https://genius.com:443 "GET /kool-savas-kdr-lyrics HTTP/1.1" 301 None
2025-07-25 11:27:01,229 - DEBUG - https://genius.com:443 "GET /Kool-savas-kdr-lyrics HTTP/1.1" 200 None
2025-07-25 11:27:01,610 - DEBUG - BPM-Wert ermittelt: 152
2025-07-25 11:27:03,832 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:27:10,709 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:27:10,710 - INFO - Tags gespeichert für: data\01. KDR.mp3
2025-07-25 11:27:10,710 - INFO - Verarbeite Datei: data\01. Martinshorn.mp3
2025-07-25 11:27:10,710 - INFO - Beginne Verarbeitung der Datei: data\01. Martinshorn.mp3
2025-07-25 11:27:10,717 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Martinshorn
2025-07-25 11:27:10,718 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Martinshorn
2025-07-25 11:27:10,719 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:27:11,137 - DEBUG - https://genius.com:443 "GET /samy-deluxe-martinshorn-lyrics HTTP/1.1" 301 None
2025-07-25 11:27:12,529 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-martinshorn-lyrics HTTP/1.1" 200 None
2025-07-25 11:27:12,900 - DEBUG - BPM-Wert ermittelt: 152
2025-07-25 11:27:15,120 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:27:22,646 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:27:22,650 - INFO - Tags gespeichert für: data\01. Martinshorn.mp3
2025-07-25 11:27:22,651 - INFO - Verarbeite Datei: data\01. Till' ab Joe (ZRY VERSION).mp3
2025-07-25 11:27:22,651 - INFO - Beginne Verarbeitung der Datei: data\01. Till' ab Joe (ZRY VERSION).mp3
2025-07-25 11:27:22,660 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Till' ab Joe (ZRY VERSION)
2025-07-25 11:27:22,661 - INFO - Lade und speichere Lyrics für: Kool Savas - Till' ab Joe (ZRY VERSION)
2025-07-25 11:27:22,662 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:27:23,082 - DEBUG - https://genius.com:443 "GET /kool-savas-till-ab-joe-lyrics HTTP/1.1" 301 None
2025-07-25 11:27:24,805 - DEBUG - https://genius.com:443 "GET /Kool-savas-till-ab-joe-lyrics HTTP/1.1" 200 None
2025-07-25 11:27:25,187 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 11:27:27,396 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:27:34,424 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:27:34,425 - INFO - Tags gespeichert für: data\01. Till' ab Joe (ZRY VERSION).mp3
2025-07-25 11:27:34,425 - INFO - Verarbeite Datei: data\02. KKS.mp3
2025-07-25 11:27:34,425 - INFO - Beginne Verarbeitung der Datei: data\02. KKS.mp3
2025-07-25 11:27:34,434 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=KKS
2025-07-25 11:27:34,434 - INFO - Lade und speichere Lyrics für: Kool Savas - KKS
2025-07-25 11:27:34,435 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:27:34,693 - DEBUG - https://genius.com:443 "GET /kool-savas-kks-lyrics HTTP/1.1" 301 None
2025-07-25 11:27:36,479 - DEBUG - https://genius.com:443 "GET /Kool-savas-kks-lyrics HTTP/1.1" 200 None
2025-07-25 11:27:36,963 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 11:27:39,176 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:31:15,939 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:31:15,955 - INFO - Tags gespeichert für: data\02. KKS.mp3
2025-07-25 11:31:15,955 - INFO - Verarbeite Datei: data\02. Matrix (Tengobeatz Version).mp3
2025-07-25 11:31:15,955 - INFO - Beginne Verarbeitung der Datei: data\02. Matrix (Tengobeatz Version).mp3
2025-07-25 11:31:15,964 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Matrix (Tengobeatz Version)
2025-07-25 11:31:15,964 - INFO - Lade und speichere Lyrics für: Kool Savas - Matrix (Tengobeatz Version)
2025-07-25 11:31:15,965 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:31:16,446 - DEBUG - https://genius.com:443 "GET /kool-savas-matrix-lyrics HTTP/1.1" 301 None
2025-07-25 11:31:18,590 - DEBUG - https://genius.com:443 "GET /Kool-savas-matrix-lyrics HTTP/1.1" 200 None
2025-07-25 11:31:18,850 - DEBUG - BPM-Wert ermittelt: 89
2025-07-25 11:31:21,070 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:37:59,632 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:37:59,654 - INFO - Tags gespeichert für: data\02. Matrix (Tengobeatz Version).mp3
2025-07-25 11:37:59,655 - INFO - Verarbeite Datei: data\02. Roter Velour (Feat. DJ Desue).mp3
2025-07-25 11:37:59,655 - INFO - Beginne Verarbeitung der Datei: data\02. Roter Velour (Feat. DJ Desue).mp3
2025-07-25 11:37:59,663 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Roter Velour (Feat. DJ Desue)
2025-07-25 11:37:59,663 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Roter Velour (Feat. DJ Desue)
2025-07-25 11:37:59,665 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:38:00,070 - DEBUG - https://genius.com:443 "GET /samy-deluxe-roter-velour-lyrics HTTP/1.1" 404 None
2025-07-25 11:38:00,178 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:38:00,782 - DEBUG - https://genius.com:443 "GET /roter-velour-samy-deluxe-lyrics HTTP/1.1" 404 None
2025-07-25 11:38:02,396 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:38:02,815 - DEBUG - https://genius.com:443 "GET /search?q=Samy%20Deluxe%20Roter%20Velour%20%28Feat.%20DJ%20Desue%29 HTTP/1.1" 200 None
2025-07-25 11:38:02,997 - WARNING - Keine Lyrics gefunden für: data\02. Roter Velour (Feat. DJ Desue).mp3
2025-07-25 11:38:02,997 - INFO - Verarbeite Datei: data\03. Deine Mutter (Feat. Nessi).mp3
2025-07-25 11:38:02,998 - INFO - Beginne Verarbeitung der Datei: data\03. Deine Mutter (Feat. Nessi).mp3
2025-07-25 11:38:03,005 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Deine Mutter (Feat. Nessi)
2025-07-25 11:38:03,006 - INFO - Lade und speichere Lyrics für: Kool Savas - Deine Mutter (Feat. Nessi)
2025-07-25 11:38:03,008 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:38:03,283 - DEBUG - https://genius.com:443 "GET /kool-savas-deine-mutter-lyrics HTTP/1.1" 301 None
2025-07-25 11:38:05,371 - DEBUG - https://genius.com:443 "GET /Kool-savas-deine-mutter-lyrics HTTP/1.1" 200 None
2025-07-25 11:38:05,773 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 11:38:07,993 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:39:13,723 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 11:39:13,730 - INFO - Tags gespeichert für: data\03. Deine Mutter (Feat. Nessi).mp3
2025-07-25 11:39:13,730 - INFO - Verarbeite Datei: data\03. Masterclass.mp3
2025-07-25 11:39:13,730 - INFO - Beginne Verarbeitung der Datei: data\03. Masterclass.mp3
2025-07-25 11:39:13,741 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Masterclass
2025-07-25 11:39:13,741 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Masterclass
2025-07-25 11:39:13,743 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:39:14,041 - DEBUG - https://genius.com:443 "GET /samy-deluxe-masterclass-lyrics HTTP/1.1" 301 None
2025-07-25 11:39:15,249 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-masterclass-lyrics HTTP/1.1" 200 None
2025-07-25 11:39:15,568 - DEBUG - BPM-Wert ermittelt: 152
2025-07-25 11:39:17,790 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:39:18,509 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:39:18,510 - INFO - Tags gespeichert für: data\03. Masterclass.mp3
2025-07-25 11:39:18,510 - INFO - Verarbeite Datei: data\03. Weck mich nicht auf (ZRY Version) (Feat. Curse & Moe Mitchell).mp3
2025-07-25 11:39:18,510 - INFO - Beginne Verarbeitung der Datei: data\03. Weck mich nicht auf (ZRY Version) (Feat. Curse & Moe Mitchell).mp3
2025-07-25 11:39:18,518 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Weck mich nicht auf (ZRY Version) (Feat. Curse & Moe Mitchell)
2025-07-25 11:39:18,519 - INFO - Lade und speichere Lyrics für: Kool Savas - Weck mich nicht auf (ZRY Version) (Feat. Curse & Moe Mitchell)
2025-07-25 11:39:18,520 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:39:18,939 - DEBUG - https://genius.com:443 "GET /kool-savas-weck-mich-nicht-auf-lyrics HTTP/1.1" 301 None
2025-07-25 11:39:20,342 - DEBUG - https://genius.com:443 "GET /Kool-savas-weck-mich-nicht-auf-lyrics HTTP/1.1" 200 None
2025-07-25 11:39:20,749 - DEBUG - BPM-Wert ermittelt: 83
2025-07-25 11:39:22,970 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:39:23,708 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:39:23,709 - INFO - Tags gespeichert für: data\03. Weck mich nicht auf (ZRY Version) (Feat. Curse & Moe Mitchell).mp3
2025-07-25 11:39:23,710 - INFO - Verarbeite Datei: data\04. ASD Track (Feat. Afrob).mp3
2025-07-25 11:39:23,710 - INFO - Beginne Verarbeitung der Datei: data\04. ASD Track (Feat. Afrob).mp3
2025-07-25 11:39:23,719 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=ASD Track (Feat. Afrob)
2025-07-25 11:39:23,719 - INFO - Lade und speichere Lyrics für: Samy Deluxe - ASD Track (Feat. Afrob)
2025-07-25 11:39:23,721 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:39:24,011 - DEBUG - https://genius.com:443 "GET /samy-deluxe-asd-track-lyrics HTTP/1.1" 301 None
2025-07-25 11:39:25,325 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-and-afrob-deu-asd-track-lyrics HTTP/1.1" 200 None
2025-07-25 11:39:25,705 - DEBUG - BPM-Wert ermittelt: 81
2025-07-25 11:39:27,928 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:39:28,765 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:39:28,765 - INFO - Tags gespeichert für: data\04. ASD Track (Feat. Afrob).mp3
2025-07-25 11:39:28,766 - INFO - Verarbeite Datei: data\04. King of Rap (ZRY Version) (Feat. Plattenpapzt).mp3
2025-07-25 11:39:28,766 - INFO - Beginne Verarbeitung der Datei: data\04. King of Rap (ZRY Version) (Feat. Plattenpapzt).mp3
2025-07-25 11:39:28,774 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=King of Rap (ZRY Version) (Feat. Plattenpapzt)
2025-07-25 11:39:28,775 - INFO - Lade und speichere Lyrics für: Kool Savas - King of Rap (ZRY Version) (Feat. Plattenpapzt)
2025-07-25 11:39:28,775 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:39:29,222 - DEBUG - https://genius.com:443 "GET /kool-savas-king-of-rap-lyrics HTTP/1.1" 301 None
2025-07-25 11:39:30,800 - DEBUG - https://genius.com:443 "GET /Plattenpapzt-king-of-rap-lyrics HTTP/1.1" 200 None
2025-07-25 11:39:31,190 - DEBUG - BPM-Wert ermittelt: 89
2025-07-25 11:39:33,411 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:39:34,155 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:39:34,160 - INFO - Tags gespeichert für: data\04. King of Rap (ZRY Version) (Feat. Plattenpapzt).mp3
2025-07-25 11:39:34,160 - INFO - Verarbeite Datei: data\04. Skit.mp3
2025-07-25 11:39:34,160 - INFO - Beginne Verarbeitung der Datei: data\04. Skit.mp3
2025-07-25 11:39:34,167 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Skit
2025-07-25 11:39:34,167 - INFO - Lade und speichere Lyrics für: Kool Savas - Skit
2025-07-25 11:39:34,168 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:39:34,702 - DEBUG - https://genius.com:443 "GET /kool-savas-skit-lyrics HTTP/1.1" 404 None
2025-07-25 11:39:34,820 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:39:35,125 - DEBUG - https://genius.com:443 "GET /skit-kool-savas-lyrics HTTP/1.1" 404 None
2025-07-25 11:39:36,655 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:39:37,056 - DEBUG - https://genius.com:443 "GET /search?q=Kool%20Savas%20Skit HTTP/1.1" 200 None
2025-07-25 11:39:37,166 - WARNING - Keine Lyrics gefunden für: data\04. Skit.mp3
2025-07-25 11:39:37,167 - INFO - Verarbeite Datei: data\05. Immer wenn Ich Rhyme (Beatzepz Danno Version) (Feat. Olli Banjo, Azad & Moe Mitchell).mp3
2025-07-25 11:39:37,167 - INFO - Beginne Verarbeitung der Datei: data\05. Immer wenn Ich Rhyme (Beatzepz Danno Version) (Feat. Olli Banjo, Azad & Moe Mitchell).mp3
2025-07-25 11:39:37,171 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Immer wenn Ich Rhyme (Beatzepz Danno Version) (Feat. Olli Banjo, Azad & Moe Mitchell)
2025-07-25 11:39:37,171 - INFO - Lade und speichere Lyrics für: Kool Savas - Immer wenn Ich Rhyme (Beatzepz Danno Version) (Feat. Olli Banjo, Azad & Moe Mitchell)
2025-07-25 11:39:37,172 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:39:37,425 - DEBUG - https://genius.com:443 "GET /kool-savas-immer-wenn-ich-rhyme-lyrics HTTP/1.1" 301 None
2025-07-25 11:39:37,836 - DEBUG - https://genius.com:443 "GET /Kool-savas-immer-wenn-ich-rhyme-lyrics HTTP/1.1" 200 None
2025-07-25 11:39:38,258 - DEBUG - BPM-Wert ermittelt: 172
2025-07-25 11:39:40,477 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:39:41,326 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:39:41,328 - INFO - Tags gespeichert für: data\05. Immer wenn Ich Rhyme (Beatzepz Danno Version) (Feat. Olli Banjo, Azad & Moe Mitchell).mp3
2025-07-25 11:39:41,328 - INFO - Verarbeite Datei: data\05. Universum _ Hawkings (Feat. Olli Banjo, Boz, Cr7z, Daev Yung & Infinit).mp3
2025-07-25 11:39:41,328 - INFO - Beginne Verarbeitung der Datei: data\05. Universum _ Hawkings (Feat. Olli Banjo, Boz, Cr7z, Daev Yung & Infinit).mp3
2025-07-25 11:39:41,334 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Universum / Hawkings (Feat. Olli Banjo, Boz, Cr7z, Daev Yung & Infinit)
2025-07-25 11:39:41,334 - INFO - Lade und speichere Lyrics für: Kool Savas - Universum / Hawkings (Feat. Olli Banjo, Boz, Cr7z, Daev Yung & Infinit)
2025-07-25 11:39:41,335 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:39:41,632 - DEBUG - https://genius.com:443 "GET /kool-savas-universum-hawkings-lyrics HTTP/1.1" 301 None
2025-07-25 11:39:43,502 - DEBUG - https://genius.com:443 "GET /Kool-savas-universum-hawkings-lyrics HTTP/1.1" 200 None
2025-07-25 11:39:43,913 - DEBUG - BPM-Wert ermittelt: 117
2025-07-25 11:39:46,134 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:39:46,925 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:39:46,927 - INFO - Tags gespeichert für: data\05. Universum _ Hawkings (Feat. Olli Banjo, Boz, Cr7z, Daev Yung & Infinit).mp3
2025-07-25 11:39:46,927 - INFO - Verarbeite Datei: data\05. Vendetta.mp3
2025-07-25 11:39:46,927 - INFO - Beginne Verarbeitung der Datei: data\05. Vendetta.mp3
2025-07-25 11:39:46,937 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Vendetta
2025-07-25 11:39:46,938 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Vendetta
2025-07-25 11:39:46,939 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:39:47,392 - DEBUG - https://genius.com:443 "GET /samy-deluxe-vendetta-lyrics HTTP/1.1" 301 None
2025-07-25 11:39:48,408 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-vendetta-lyrics HTTP/1.1" 200 None
2025-07-25 11:39:48,770 - DEBUG - BPM-Wert ermittelt: 152
2025-07-25 11:39:50,990 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:39:51,731 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 130
2025-07-25 11:39:51,732 - INFO - Tags gespeichert für: data\05. Vendetta.mp3
2025-07-25 11:39:51,732 - INFO - Verarbeite Datei: data\06. Ende der Vernunft (Feat. Karen Firlej).mp3
2025-07-25 11:39:51,732 - INFO - Beginne Verarbeitung der Datei: data\06. Ende der Vernunft (Feat. Karen Firlej).mp3
2025-07-25 11:39:51,740 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Ende der Vernunft (Feat. Karen Firlej)
2025-07-25 11:39:51,741 - INFO - Lade und speichere Lyrics für: Kool Savas - Ende der Vernunft (Feat. Karen Firlej)
2025-07-25 11:39:51,742 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:39:52,005 - DEBUG - https://genius.com:443 "GET /kool-savas-ende-der-vernunft-lyrics HTTP/1.1" 301 None
2025-07-25 11:39:53,493 - DEBUG - https://genius.com:443 "GET /Kool-savas-ende-der-vernunft-lyrics HTTP/1.1" 200 None
2025-07-25 11:39:53,907 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 11:39:56,120 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:39:56,915 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:39:56,920 - INFO - Tags gespeichert für: data\06. Ende der Vernunft (Feat. Karen Firlej).mp3
2025-07-25 11:39:56,921 - INFO - Verarbeite Datei: data\06. Optik Anthem (OC Beats Remix) (Feat. Optik Crew).mp3
2025-07-25 11:39:56,921 - INFO - Beginne Verarbeitung der Datei: data\06. Optik Anthem (OC Beats Remix) (Feat. Optik Crew).mp3
2025-07-25 11:39:56,929 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Optik Anthem (OC Beats Remix) (Feat. Optik Crew)
2025-07-25 11:39:56,930 - INFO - Lade und speichere Lyrics für: Kool Savas - Optik Anthem (OC Beats Remix) (Feat. Optik Crew)
2025-07-25 11:39:56,931 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:39:57,196 - DEBUG - https://genius.com:443 "GET /kool-savas-optik-anthem-lyrics HTTP/1.1" 301 None
2025-07-25 11:39:58,833 - DEBUG - https://genius.com:443 "GET /Kool-savas-optik-anthem-lyrics HTTP/1.1" 200 None
2025-07-25 11:39:59,246 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 11:40:01,464 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:40:02,281 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:40:02,282 - INFO - Tags gespeichert für: data\06. Optik Anthem (OC Beats Remix) (Feat. Optik Crew).mp3
2025-07-25 11:40:02,282 - INFO - Verarbeite Datei: data\06. Yves Klein.mp3
2025-07-25 11:40:02,283 - INFO - Beginne Verarbeitung der Datei: data\06. Yves Klein.mp3
2025-07-25 11:40:02,287 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Yves Klein
2025-07-25 11:40:02,288 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Yves Klein
2025-07-25 11:40:02,290 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:40:02,765 - DEBUG - https://genius.com:443 "GET /samy-deluxe-yves-klein-lyrics HTTP/1.1" 301 None
2025-07-25 11:40:03,949 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-yves-klein-lyrics HTTP/1.1" 200 None
2025-07-25 11:40:04,309 - DEBUG - BPM-Wert ermittelt: 108
2025-07-25 11:40:06,528 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:40:07,312 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:40:07,314 - INFO - Tags gespeichert für: data\06. Yves Klein.mp3
2025-07-25 11:40:07,314 - INFO - Verarbeite Datei: data\07. Aura (Beataura Version).mp3
2025-07-25 11:40:07,314 - INFO - Beginne Verarbeitung der Datei: data\07. Aura (Beataura Version).mp3
2025-07-25 11:40:07,321 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Aura (Beataura Version)
2025-07-25 11:40:07,321 - INFO - Lade und speichere Lyrics für: Kool Savas - Aura (Beataura Version)
2025-07-25 11:40:07,322 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:40:07,751 - DEBUG - https://genius.com:443 "GET /kool-savas-aura-lyrics HTTP/1.1" 301 None
2025-07-25 11:40:09,895 - DEBUG - https://genius.com:443 "GET /Kool-savas-aura-lyrics HTTP/1.1" 200 None
2025-07-25 11:40:10,302 - DEBUG - BPM-Wert ermittelt: 185
2025-07-25 11:40:12,519 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:40:13,285 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:40:13,286 - INFO - Tags gespeichert für: data\07. Aura (Beataura Version).mp3
2025-07-25 11:40:13,287 - INFO - Verarbeite Datei: data\07. Kalte Füsse.mp3
2025-07-25 11:40:13,287 - INFO - Beginne Verarbeitung der Datei: data\07. Kalte Füsse.mp3
2025-07-25 11:40:13,295 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Kalte Füsse
2025-07-25 11:40:13,295 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Kalte Füsse
2025-07-25 11:40:13,297 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:40:13,723 - DEBUG - https://genius.com:443 "GET /samy-deluxe-kalte-fusse-lyrics HTTP/1.1" 301 None
2025-07-25 11:40:14,623 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-kalte-fusse-lyrics HTTP/1.1" 200 None
2025-07-25 11:40:14,864 - DEBUG - BPM-Wert ermittelt: 81
2025-07-25 11:40:17,084 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:40:17,873 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 130
2025-07-25 11:40:17,879 - INFO - Tags gespeichert für: data\07. Kalte Füsse.mp3
2025-07-25 11:40:17,879 - INFO - Verarbeite Datei: data\07. Krieg und Frieden (Feat. SDP).mp3
2025-07-25 11:40:17,879 - INFO - Beginne Verarbeitung der Datei: data\07. Krieg und Frieden (Feat. SDP).mp3
2025-07-25 11:40:17,889 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Krieg und Frieden (Feat. SDP)
2025-07-25 11:40:17,889 - INFO - Lade und speichere Lyrics für: Kool Savas - Krieg und Frieden (Feat. SDP)
2025-07-25 11:40:17,892 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:40:18,327 - DEBUG - https://genius.com:443 "GET /kool-savas-krieg-und-frieden-lyrics HTTP/1.1" 301 None
2025-07-25 11:40:20,089 - DEBUG - https://genius.com:443 "GET /Kool-savas-and-sdp-krieg-und-frieden-lyrics HTTP/1.1" 200 None
2025-07-25 11:40:20,481 - DEBUG - BPM-Wert ermittelt: 161
2025-07-25 11:40:22,714 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:40:23,487 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:40:23,489 - INFO - Tags gespeichert für: data\07. Krieg und Frieden (Feat. SDP).mp3
2025-07-25 11:40:23,489 - INFO - Verarbeite Datei: data\08. Antidepressiva (Feat. Audio Dope).mp3
2025-07-25 11:40:23,489 - INFO - Beginne Verarbeitung der Datei: data\08. Antidepressiva (Feat. Audio Dope).mp3
2025-07-25 11:40:23,498 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Antidepressiva (Feat. Audio Dope)
2025-07-25 11:40:23,499 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Antidepressiva (Feat. Audio Dope)
2025-07-25 11:40:23,501 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:40:23,767 - DEBUG - https://genius.com:443 "GET /samy-deluxe-antidepressiva-lyrics HTTP/1.1" 301 None
2025-07-25 11:40:24,599 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-and-audio-dope-antidepressiva-lyrics HTTP/1.1" 200 None
2025-07-25 11:40:24,889 - DEBUG - BPM-Wert ermittelt: 152
2025-07-25 11:40:27,108 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:40:27,869 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:40:27,874 - INFO - Tags gespeichert für: data\08. Antidepressiva (Feat. Audio Dope).mp3
2025-07-25 11:40:27,874 - INFO - Verarbeite Datei: data\08. Brainwash (Kiarash-Beats Version) (Feat. Kaas & Sizzlac).mp3
2025-07-25 11:40:27,874 - INFO - Beginne Verarbeitung der Datei: data\08. Brainwash (Kiarash-Beats Version) (Feat. Kaas & Sizzlac).mp3
2025-07-25 11:40:27,883 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Brainwash (Kiarash-Beats Version) (Feat. Kaas & Sizzlac)
2025-07-25 11:40:27,883 - INFO - Lade und speichere Lyrics für: Kool Savas - Brainwash (Kiarash-Beats Version) (Feat. Kaas & Sizzlac)
2025-07-25 11:40:27,885 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:40:28,304 - DEBUG - https://genius.com:443 "GET /kool-savas-brainwash-lyrics HTTP/1.1" 301 None
2025-07-25 11:40:30,113 - DEBUG - https://genius.com:443 "GET /Kool-savas-brainwash-lyrics HTTP/1.1" 200 None
2025-07-25 11:40:30,535 - DEBUG - BPM-Wert ermittelt: 152
2025-07-25 11:40:32,744 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:40:33,528 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:40:33,530 - INFO - Tags gespeichert für: data\08. Brainwash (Kiarash-Beats Version) (Feat. Kaas & Sizzlac).mp3
2025-07-25 11:40:33,530 - INFO - Verarbeite Datei: data\08. Essah ist zurück.mp3
2025-07-25 11:40:33,530 - INFO - Beginne Verarbeitung der Datei: data\08. Essah ist zurück.mp3
2025-07-25 11:40:33,538 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Essah ist zurück
2025-07-25 11:40:33,538 - INFO - Lade und speichere Lyrics für: Kool Savas - Essah ist zurück
2025-07-25 11:40:33,540 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:40:33,841 - DEBUG - https://genius.com:443 "GET /kool-savas-essah-ist-zuruck-lyrics HTTP/1.1" 301 None
2025-07-25 11:40:35,411 - DEBUG - https://genius.com:443 "GET /Kool-savas-essah-ist-zuruck-lyrics HTTP/1.1" 200 None
2025-07-25 11:40:35,784 - DEBUG - BPM-Wert ermittelt: 199
2025-07-25 11:40:38,001 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:40:38,670 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:40:38,672 - INFO - Tags gespeichert für: data\08. Essah ist zurück.mp3
2025-07-25 11:40:38,672 - INFO - Verarbeite Datei: data\09. MikroDose (Feat. Morten).mp3
2025-07-25 11:40:38,673 - INFO - Beginne Verarbeitung der Datei: data\09. MikroDose (Feat. Morten).mp3
2025-07-25 11:40:38,681 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=MikroDose (Feat. Morten)
2025-07-25 11:40:38,681 - INFO - Lade und speichere Lyrics für: Samy Deluxe - MikroDose (Feat. Morten)
2025-07-25 11:40:38,683 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:40:38,969 - DEBUG - https://genius.com:443 "GET /samy-deluxe-mikrodose-lyrics HTTP/1.1" 301 None
2025-07-25 11:40:40,164 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-and-morten-mikrodose-lyrics HTTP/1.1" 200 None
2025-07-25 11:40:40,555 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 11:40:42,772 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:40:43,550 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:40:43,551 - INFO - Tags gespeichert für: data\09. MikroDose (Feat. Morten).mp3
2025-07-25 11:40:43,551 - INFO - Verarbeite Datei: data\09. Tribut (OC Beats Version).mp3
2025-07-25 11:40:43,552 - INFO - Beginne Verarbeitung der Datei: data\09. Tribut (OC Beats Version).mp3
2025-07-25 11:40:43,559 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Tribut (OC Beats Version)
2025-07-25 11:40:43,559 - INFO - Lade und speichere Lyrics für: Kool Savas - Tribut (OC Beats Version)
2025-07-25 11:40:43,561 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:40:43,881 - DEBUG - https://genius.com:443 "GET /kool-savas-tribut-lyrics HTTP/1.1" 301 None
2025-07-25 11:40:45,863 - DEBUG - https://genius.com:443 "GET /Kool-savas-tribut-lyrics HTTP/1.1" 200 None
2025-07-25 11:40:46,265 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 11:40:48,485 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:40:49,390 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:40:49,392 - INFO - Tags gespeichert für: data\09. Tribut (OC Beats Version).mp3
2025-07-25 11:40:49,392 - INFO - Verarbeite Datei: data\09. Wasser reichen.mp3
2025-07-25 11:40:49,393 - INFO - Beginne Verarbeitung der Datei: data\09. Wasser reichen.mp3
2025-07-25 11:40:49,401 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Wasser reichen
2025-07-25 11:40:49,401 - INFO - Lade und speichere Lyrics für: Kool Savas - Wasser reichen
2025-07-25 11:40:49,402 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:40:49,818 - DEBUG - https://genius.com:443 "GET /kool-savas-wasser-reichen-lyrics HTTP/1.1" 301 None
2025-07-25 11:40:51,517 - DEBUG - https://genius.com:443 "GET /Kool-savas-wasser-reichen-lyrics HTTP/1.1" 200 None
2025-07-25 11:40:51,865 - DEBUG - BPM-Wert ermittelt: 117
2025-07-25 11:40:54,086 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:40:54,836 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:40:54,837 - INFO - Tags gespeichert für: data\09. Wasser reichen.mp3
2025-07-25 11:40:54,838 - INFO - Verarbeite Datei: data\10. Last Exit.mp3
2025-07-25 11:40:54,838 - INFO - Beginne Verarbeitung der Datei: data\10. Last Exit.mp3
2025-07-25 11:40:54,846 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Last Exit
2025-07-25 11:40:54,846 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Last Exit
2025-07-25 11:40:54,847 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:40:55,111 - DEBUG - https://genius.com:443 "GET /samy-deluxe-last-exit-lyrics HTTP/1.1" 301 None
2025-07-25 11:40:56,899 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-last-exit-lyrics HTTP/1.1" 200 None
2025-07-25 11:40:57,270 - DEBUG - BPM-Wert ermittelt: 78
2025-07-25 11:40:59,485 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:41:00,261 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:41:00,266 - INFO - Tags gespeichert für: data\10. Last Exit.mp3
2025-07-25 11:41:00,267 - INFO - Verarbeite Datei: data\10. Nie mehr gehn (Kwake Version).mp3
2025-07-25 11:41:00,267 - INFO - Beginne Verarbeitung der Datei: data\10. Nie mehr gehn (Kwake Version).mp3
2025-07-25 11:41:00,274 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Nie mehr gehn (Kwake Version)
2025-07-25 11:41:00,274 - INFO - Lade und speichere Lyrics für: Kool Savas - Nie mehr gehn (Kwake Version)
2025-07-25 11:41:00,275 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:41:00,739 - DEBUG - https://genius.com:443 "GET /kool-savas-nie-mehr-gehn-lyrics HTTP/1.1" 301 None
2025-07-25 11:41:02,342 - DEBUG - https://genius.com:443 "GET /Kool-savas-nie-mehr-gehn-lyrics HTTP/1.1" 200 None
2025-07-25 11:41:02,733 - DEBUG - BPM-Wert ermittelt: 96
2025-07-25 11:41:04,951 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:41:05,724 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:41:05,726 - INFO - Tags gespeichert für: data\10. Nie mehr gehn (Kwake Version).mp3
2025-07-25 11:41:05,726 - INFO - Verarbeite Datei: data\10. S auf der Brust (Feat. Sido & Nico Santos).mp3
2025-07-25 11:41:05,726 - INFO - Beginne Verarbeitung der Datei: data\10. S auf der Brust (Feat. Sido & Nico Santos).mp3
2025-07-25 11:41:05,735 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=S auf der Brust (Feat. Sido & Nico Santos)
2025-07-25 11:41:05,735 - INFO - Lade und speichere Lyrics für: Kool Savas - S auf der Brust (Feat. Sido & Nico Santos)
2025-07-25 11:41:05,735 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:41:06,174 - DEBUG - https://genius.com:443 "GET /kool-savas-s-auf-der-brust-lyrics HTTP/1.1" 301 None
2025-07-25 11:41:07,908 - DEBUG - https://genius.com:443 "GET /Kool-savas-nico-santos-and-sido-s-auf-der-brust-lyrics HTTP/1.1" 200 None
2025-07-25 11:41:08,302 - DEBUG - BPM-Wert ermittelt: 117
2025-07-25 11:41:10,517 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:41:11,265 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:41:11,267 - INFO - Tags gespeichert für: data\10. S auf der Brust (Feat. Sido & Nico Santos).mp3
2025-07-25 11:41:11,267 - INFO - Verarbeite Datei: data\11. A.S.A (Feat. JuJu Rogers).mp3
2025-07-25 11:41:11,267 - INFO - Beginne Verarbeitung der Datei: data\11. A.S.A (Feat. JuJu Rogers).mp3
2025-07-25 11:41:11,276 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=A.S.A (Feat. JuJu Rogers)
2025-07-25 11:41:11,276 - INFO - Lade und speichere Lyrics für: Samy Deluxe - A.S.A (Feat. JuJu Rogers)
2025-07-25 11:41:11,277 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:41:11,728 - DEBUG - https://genius.com:443 "GET /samy-deluxe-asa-lyrics HTTP/1.1" 301 None
2025-07-25 11:41:13,011 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-and-juju-rogers-asa-lyrics HTTP/1.1" 200 None
2025-07-25 11:41:13,384 - DEBUG - BPM-Wert ermittelt: 161
2025-07-25 11:41:15,606 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:41:16,277 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:41:16,278 - INFO - Tags gespeichert für: data\11. A.S.A (Feat. JuJu Rogers).mp3
2025-07-25 11:41:16,278 - INFO - Verarbeite Datei: data\11. Batman (Feat. Jamule).mp3
2025-07-25 11:41:16,279 - INFO - Beginne Verarbeitung der Datei: data\11. Batman (Feat. Jamule).mp3
2025-07-25 11:41:16,281 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Batman (Feat. Jamule)
2025-07-25 11:41:16,282 - INFO - Lade und speichere Lyrics für: Kool Savas - Batman (Feat. Jamule)
2025-07-25 11:41:16,283 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:41:16,732 - DEBUG - https://genius.com:443 "GET /kool-savas-batman-lyrics HTTP/1.1" 301 None
2025-07-25 11:41:18,233 - DEBUG - https://genius.com:443 "GET /Kool-savas-batman-lyrics HTTP/1.1" 200 None
2025-07-25 11:41:18,607 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 11:41:20,821 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:41:21,638 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 130
2025-07-25 11:41:21,643 - INFO - Tags gespeichert für: data\11. Batman (Feat. Jamule).mp3
2025-07-25 11:41:21,643 - INFO - Verarbeite Datei: data\12. Gatekeeper.mp3
2025-07-25 11:41:21,643 - INFO - Beginne Verarbeitung der Datei: data\12. Gatekeeper.mp3
2025-07-25 11:41:21,650 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Gatekeeper
2025-07-25 11:41:21,650 - INFO - Lade und speichere Lyrics für: Kool Savas - Gatekeeper
2025-07-25 11:41:21,652 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:41:22,105 - DEBUG - https://genius.com:443 "GET /kool-savas-gatekeeper-lyrics HTTP/1.1" 301 None
2025-07-25 11:41:23,378 - DEBUG - https://genius.com:443 "GET /Kool-savas-gatekeeper-lyrics HTTP/1.1" 200 None
2025-07-25 11:41:23,738 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 11:41:25,957 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:41:26,674 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:41:26,675 - INFO - Tags gespeichert für: data\12. Gatekeeper.mp3
2025-07-25 11:41:26,676 - INFO - Verarbeite Datei: data\12. Instinkt.mp3
2025-07-25 11:41:26,676 - INFO - Beginne Verarbeitung der Datei: data\12. Instinkt.mp3
2025-07-25 11:41:26,685 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Instinkt
2025-07-25 11:41:26,685 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Instinkt
2025-07-25 11:41:26,687 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:41:27,175 - DEBUG - https://genius.com:443 "GET /samy-deluxe-instinkt-lyrics HTTP/1.1" 301 None
2025-07-25 11:41:28,438 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-instinkt-lyrics HTTP/1.1" 200 None
2025-07-25 11:41:28,788 - DEBUG - BPM-Wert ermittelt: 66
2025-07-25 11:41:31,002 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:41:31,924 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:41:31,930 - INFO - Tags gespeichert für: data\12. Instinkt.mp3
2025-07-25 11:41:31,930 - INFO - Verarbeite Datei: data\13. Brainwash.mp3
2025-07-25 11:41:31,930 - INFO - Beginne Verarbeitung der Datei: data\13. Brainwash.mp3
2025-07-25 11:41:31,942 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Brainwash
2025-07-25 11:41:31,942 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Brainwash
2025-07-25 11:41:31,943 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:41:32,377 - DEBUG - https://genius.com:443 "GET /samy-deluxe-brainwash-lyrics HTTP/1.1" 301 None
2025-07-25 11:41:33,491 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-brainwash-lyrics HTTP/1.1" 200 None
2025-07-25 11:41:33,869 - DEBUG - BPM-Wert ermittelt: 129
2025-07-25 11:41:36,090 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:41:36,860 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 130
2025-07-25 11:41:36,861 - INFO - Tags gespeichert für: data\13. Brainwash.mp3
2025-07-25 11:41:36,861 - INFO - Verarbeite Datei: data\14. Waxfigur.mp3
2025-07-25 11:41:36,861 - INFO - Beginne Verarbeitung der Datei: data\14. Waxfigur.mp3
2025-07-25 11:41:36,868 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Waxfigur
2025-07-25 11:41:36,869 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Waxfigur
2025-07-25 11:41:36,871 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:41:37,336 - DEBUG - https://genius.com:443 "GET /samy-deluxe-waxfigur-lyrics HTTP/1.1" 301 None
2025-07-25 11:41:38,599 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-waxfigur-lyrics HTTP/1.1" 200 None
2025-07-25 11:41:38,962 - DEBUG - BPM-Wert ermittelt: 99
2025-07-25 11:41:41,183 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:41:41,855 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 130
2025-07-25 11:41:41,860 - INFO - Tags gespeichert für: data\14. Waxfigur.mp3
2025-07-25 11:41:41,861 - INFO - Verarbeite Datei: data\15. Don Quixote.mp3
2025-07-25 11:41:41,861 - INFO - Beginne Verarbeitung der Datei: data\15. Don Quixote.mp3
2025-07-25 11:41:41,869 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Don Quixote
2025-07-25 11:41:41,870 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Don Quixote
2025-07-25 11:41:41,871 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:41:42,142 - DEBUG - https://genius.com:443 "GET /samy-deluxe-don-quixote-lyrics HTTP/1.1" 301 None
2025-07-25 11:41:43,537 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-don-quixote-lyrics HTTP/1.1" 200 None
2025-07-25 11:41:43,999 - DEBUG - BPM-Wert ermittelt: 136
2025-07-25 11:41:46,215 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:41:47,043 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:41:47,044 - INFO - Tags gespeichert für: data\15. Don Quixote.mp3
2025-07-25 11:41:47,045 - INFO - Verarbeite Datei: data\16. Everything.mp3
2025-07-25 11:41:47,045 - INFO - Beginne Verarbeitung der Datei: data\16. Everything.mp3
2025-07-25 11:41:47,052 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Everything
2025-07-25 11:41:47,052 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Everything
2025-07-25 11:41:47,053 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:41:47,511 - DEBUG - https://genius.com:443 "GET /samy-deluxe-everything-lyrics HTTP/1.1" 301 None
2025-07-25 11:41:48,780 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-everything-lyrics HTTP/1.1" 200 None
2025-07-25 11:41:49,139 - DEBUG - BPM-Wert ermittelt: 144
2025-07-25 11:41:51,354 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:41:52,086 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:41:52,087 - INFO - Tags gespeichert für: data\16. Everything.mp3
2025-07-25 11:41:52,088 - INFO - Verarbeite Datei: data\17. Immortal.mp3
2025-07-25 11:41:52,088 - INFO - Beginne Verarbeitung der Datei: data\17. Immortal.mp3
2025-07-25 11:41:52,095 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Immortal
2025-07-25 11:41:52,095 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Immortal
2025-07-25 11:41:52,097 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:41:52,588 - DEBUG - https://genius.com:443 "GET /samy-deluxe-immortal-lyrics HTTP/1.1" 301 None
2025-07-25 11:41:53,498 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-immortal-lyrics HTTP/1.1" 200 None
2025-07-25 11:41:53,765 - DEBUG - BPM-Wert ermittelt: 144
2025-07-25 11:41:55,984 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:41:56,786 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:41:56,787 - INFO - Tags gespeichert für: data\17. Immortal.mp3
2025-07-25 11:41:56,787 - INFO - Verarbeite Datei: data\18. Blanco Check.mp3
2025-07-25 11:41:56,787 - INFO - Beginne Verarbeitung der Datei: data\18. Blanco Check.mp3
2025-07-25 11:41:56,797 - DEBUG - Metadaten geladen: Artist=Samy Deluxe, Title=Blanco Check
2025-07-25 11:41:56,798 - INFO - Lade und speichere Lyrics für: Samy Deluxe - Blanco Check
2025-07-25 11:41:56,799 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 11:41:57,157 - DEBUG - https://genius.com:443 "GET /samy-deluxe-blanco-check-lyrics HTTP/1.1" 301 None
2025-07-25 11:41:58,494 - DEBUG - https://genius.com:443 "GET /Samy-deluxe-blanco-check-lyrics HTTP/1.1" 200 None
2025-07-25 11:41:58,848 - DEBUG - BPM-Wert ermittelt: 161
2025-07-25 11:42:01,062 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 11:42:01,832 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 131
2025-07-25 11:42:01,834 - INFO - Tags gespeichert für: data\18. Blanco Check.mp3
2025-07-25 11:42:01,834 - INFO - Verarbeitung abgeschlossen.
2025-07-25 11:42:01,835 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-25 12:11:23,382 - DEBUG - Loaded backend agg version v2.2.
2025-07-25 12:11:23,383 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-25 12:11:23,383 - INFO - Verarbeite Datei: data\01. Intro (Feat. Tim Bendzko).mp3
2025-07-25 12:11:23,383 - INFO - Beginne Verarbeitung der Datei: data\01. Intro (Feat. Tim Bendzko).mp3
2025-07-25 12:11:23,390 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Intro (Feat. Tim Bendzko)
2025-07-25 12:11:23,390 - INFO - Lade und speichere Lyrics für: Kool Savas - Intro (Feat. Tim Bendzko)
2025-07-25 12:11:23,391 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:11:23,788 - DEBUG - https://genius.com:443 "GET /kool-savas-intro-lyrics HTTP/1.1" 404 None
2025-07-25 12:11:23,892 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:11:24,248 - DEBUG - https://genius.com:443 "GET /intro-kool-savas-lyrics HTTP/1.1" 404 None
2025-07-25 12:11:25,854 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:11:26,176 - DEBUG - https://genius.com:443 "GET /search?q=Kool%20Savas%20Intro%20%28Feat.%20Tim%20Bendzko%29 HTTP/1.1" 200 None
2025-07-25 12:11:26,185 - WARNING - Keine Lyrics gefunden für: data\01. Intro (Feat. Tim Bendzko).mp3
2025-07-25 12:11:26,185 - INFO - Verarbeite Datei: data\02. Märtyrer.mp3
2025-07-25 12:11:26,186 - INFO - Beginne Verarbeitung der Datei: data\02. Märtyrer.mp3
2025-07-25 12:11:26,193 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Märtyrer
2025-07-25 12:11:26,193 - INFO - Lade und speichere Lyrics für: Kool Savas - Märtyrer
2025-07-25 12:11:26,195 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:11:26,654 - DEBUG - https://genius.com:443 "GET /kool-savas-martyrer-lyrics HTTP/1.1" 301 None
2025-07-25 12:11:27,089 - DEBUG - https://genius.com:443 "GET /Kool-savas-martyrer-lyrics HTTP/1.1" 200 None
2025-07-25 12:11:27,518 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 12:11:29,739 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:11:46,298 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:11:46,299 - INFO - Tags gespeichert für: data\02. Märtyrer.mp3
2025-07-25 12:11:46,299 - INFO - Verarbeite Datei: data\03. Es ist wahr _ S a zu dem V.mp3
2025-07-25 12:11:46,299 - INFO - Beginne Verarbeitung der Datei: data\03. Es ist wahr _ S a zu dem V.mp3
2025-07-25 12:11:46,308 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Es ist wahr / S a zu dem V
2025-07-25 12:11:46,308 - INFO - Lade und speichere Lyrics für: Kool Savas - Es ist wahr / S a zu dem V
2025-07-25 12:11:46,310 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:11:46,729 - DEBUG - https://genius.com:443 "GET /kool-savas-es-ist-wahr-s-a-zu-dem-v-lyrics HTTP/1.1" 301 None
2025-07-25 12:11:48,409 - DEBUG - https://genius.com:443 "GET /Kool-savas-es-ist-wahr-s-a-zu-dem-v-lyrics HTTP/1.1" 200 None
2025-07-25 12:11:48,810 - DEBUG - BPM-Wert ermittelt: 89
2025-07-25 12:11:51,029 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:12:03,348 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:12:03,349 - INFO - Tags gespeichert für: data\03. Es ist wahr _ S a zu dem V.mp3
2025-07-25 12:12:03,350 - INFO - Verarbeite Datei: data\04. Zweifel und Bestätigung.mp3
2025-07-25 12:12:03,350 - INFO - Beginne Verarbeitung der Datei: data\04. Zweifel und Bestätigung.mp3
2025-07-25 12:12:03,357 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Zweifel und Bestätigung
2025-07-25 12:12:03,357 - INFO - Lade und speichere Lyrics für: Kool Savas - Zweifel und Bestätigung
2025-07-25 12:12:03,359 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:12:03,825 - DEBUG - https://genius.com:443 "GET /kool-savas-zweifel-und-bestatigung-lyrics HTTP/1.1" 301 None
2025-07-25 12:12:05,023 - DEBUG - https://genius.com:443 "GET /Kool-savas-zweifel-und-bestatigung-lyrics HTTP/1.1" 200 None
2025-07-25 12:12:05,433 - DEBUG - BPM-Wert ermittelt: 144
2025-07-25 12:12:07,651 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:12:15,259 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:12:15,260 - INFO - Tags gespeichert für: data\04. Zweifel und Bestätigung.mp3
2025-07-25 12:12:15,261 - INFO - Verarbeite Datei: data\05. Limit (Feat. Alex Prince).mp3
2025-07-25 12:12:15,261 - INFO - Beginne Verarbeitung der Datei: data\05. Limit (Feat. Alex Prince).mp3
2025-07-25 12:12:15,269 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Limit (Feat. Alex Prince)
2025-07-25 12:12:15,269 - INFO - Lade und speichere Lyrics für: Kool Savas - Limit (Feat. Alex Prince)
2025-07-25 12:12:15,270 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:12:15,700 - DEBUG - https://genius.com:443 "GET /kool-savas-limit-lyrics HTTP/1.1" 301 None
2025-07-25 12:12:17,540 - DEBUG - https://genius.com:443 "GET /Kool-savas-limit-lyrics HTTP/1.1" 200 None
2025-07-25 12:12:17,967 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 12:12:20,179 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:12:34,716 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:12:34,718 - INFO - Tags gespeichert für: data\05. Limit (Feat. Alex Prince).mp3
2025-07-25 12:12:34,718 - INFO - Verarbeite Datei: data\06. Matrix.mp3
2025-07-25 12:12:34,718 - INFO - Beginne Verarbeitung der Datei: data\06. Matrix.mp3
2025-07-25 12:12:34,721 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Matrix
2025-07-25 12:12:34,721 - INFO - Lade und speichere Lyrics für: Kool Savas - Matrix
2025-07-25 12:12:34,722 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:12:35,111 - DEBUG - https://genius.com:443 "GET /kool-savas-matrix-lyrics HTTP/1.1" 301 None
2025-07-25 12:12:35,149 - DEBUG - https://genius.com:443 "GET /Kool-savas-matrix-lyrics HTTP/1.1" 200 None
2025-07-25 12:12:35,400 - DEBUG - BPM-Wert ermittelt: 117
2025-07-25 12:12:37,620 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:12:56,047 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:12:56,048 - INFO - Tags gespeichert für: data\06. Matrix.mp3
2025-07-25 12:12:56,048 - INFO - Verarbeite Datei: data\07. 2 the Essence (Feat. Masta Ace & Tajai).mp3
2025-07-25 12:12:56,048 - INFO - Beginne Verarbeitung der Datei: data\07. 2 the Essence (Feat. Masta Ace & Tajai).mp3
2025-07-25 12:12:56,057 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=2 the Essence (Feat. Masta Ace & Tajai)
2025-07-25 12:12:56,058 - INFO - Lade und speichere Lyrics für: Kool Savas - 2 the Essence (Feat. Masta Ace & Tajai)
2025-07-25 12:12:56,059 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:12:56,516 - DEBUG - https://genius.com:443 "GET /kool-savas-2-the-essence-lyrics HTTP/1.1" 301 None
2025-07-25 12:12:58,177 - DEBUG - https://genius.com:443 "GET /Kool-savas-2-the-essence-lyrics HTTP/1.1" 200 None
2025-07-25 12:12:58,555 - DEBUG - BPM-Wert ermittelt: 117
2025-07-25 12:13:00,776 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:13:11,262 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:13:11,263 - INFO - Tags gespeichert für: data\07. 2 the Essence (Feat. Masta Ace & Tajai).mp3
2025-07-25 12:13:11,263 - INFO - Verarbeite Datei: data\08. Es rappelt im Karton.mp3
2025-07-25 12:13:11,263 - INFO - Beginne Verarbeitung der Datei: data\08. Es rappelt im Karton.mp3
2025-07-25 12:13:11,270 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Es rappelt im Karton
2025-07-25 12:13:11,271 - INFO - Lade und speichere Lyrics für: Kool Savas - Es rappelt im Karton
2025-07-25 12:13:11,273 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:13:11,747 - DEBUG - https://genius.com:443 "GET /kool-savas-es-rappelt-im-karton-lyrics HTTP/1.1" 301 None
2025-07-25 12:13:13,904 - DEBUG - https://genius.com:443 "GET /Kool-savas-es-rappelt-im-karton-lyrics HTTP/1.1" 200 None
2025-07-25 12:13:14,284 - DEBUG - BPM-Wert ermittelt: 185
2025-07-25 12:13:16,503 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:13:28,132 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:13:28,133 - INFO - Tags gespeichert für: data\08. Es rappelt im Karton.mp3
2025-07-25 12:13:28,134 - INFO - Verarbeite Datei: data\09. Rap über Rap.mp3
2025-07-25 12:13:28,134 - INFO - Beginne Verarbeitung der Datei: data\09. Rap über Rap.mp3
2025-07-25 12:13:28,141 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Rap über Rap
2025-07-25 12:13:28,142 - INFO - Lade und speichere Lyrics für: Kool Savas - Rap über Rap
2025-07-25 12:13:28,143 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:13:28,573 - DEBUG - https://genius.com:443 "GET /kool-savas-rap-uber-rap-lyrics HTTP/1.1" 301 None
2025-07-25 12:13:30,352 - DEBUG - https://genius.com:443 "GET /Kool-savas-rap-uber-rap-lyrics HTTP/1.1" 200 None
2025-07-25 12:13:30,761 - DEBUG - BPM-Wert ermittelt: 45
2025-07-25 12:13:32,971 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:13:55,465 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:13:55,465 - INFO - Tags gespeichert für: data\09. Rap über Rap.mp3
2025-07-25 12:13:55,467 - INFO - Verarbeite Datei: data\10. Summa Summarum.mp3
2025-07-25 12:13:55,467 - INFO - Beginne Verarbeitung der Datei: data\10. Summa Summarum.mp3
2025-07-25 12:13:55,475 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Summa Summarum
2025-07-25 12:13:55,475 - INFO - Lade und speichere Lyrics für: Kool Savas - Summa Summarum
2025-07-25 12:13:55,477 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:13:55,948 - DEBUG - https://genius.com:443 "GET /kool-savas-summa-summarum-lyrics HTTP/1.1" 301 None
2025-07-25 12:13:58,009 - DEBUG - https://genius.com:443 "GET /Kool-savas-summa-summarum-lyrics HTTP/1.1" 200 None
2025-07-25 12:13:58,391 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 12:14:00,602 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:14:15,790 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:14:15,791 - INFO - Tags gespeichert für: data\10. Summa Summarum.mp3
2025-07-25 12:14:15,792 - INFO - Verarbeite Datei: data\11. Neue Namen.mp3
2025-07-25 12:14:15,792 - INFO - Beginne Verarbeitung der Datei: data\11. Neue Namen.mp3
2025-07-25 12:14:15,799 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Neue Namen
2025-07-25 12:14:15,800 - INFO - Lade und speichere Lyrics für: Kool Savas - Neue Namen
2025-07-25 12:14:15,801 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:14:16,189 - DEBUG - https://genius.com:443 "GET /kool-savas-neue-namen-lyrics HTTP/1.1" 301 None
2025-07-25 12:14:17,390 - DEBUG - https://genius.com:443 "GET /Kool-savas-neue-namen-lyrics HTTP/1.1" 200 None
2025-07-25 12:14:17,760 - DEBUG - BPM-Wert ermittelt: 129
2025-07-25 12:14:19,970 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:14:34,035 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:14:34,036 - INFO - Tags gespeichert für: data\11. Neue Namen.mp3
2025-07-25 12:14:34,036 - INFO - Verarbeite Datei: data\12. Anekdote aus Istanbul (Skit).mp3
2025-07-25 12:14:34,036 - INFO - Beginne Verarbeitung der Datei: data\12. Anekdote aus Istanbul (Skit).mp3
2025-07-25 12:14:34,044 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Anekdote aus Istanbul (Skit)
2025-07-25 12:14:34,044 - INFO - Lade und speichere Lyrics für: Kool Savas - Anekdote aus Istanbul (Skit)
2025-07-25 12:14:34,045 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:14:34,568 - DEBUG - https://genius.com:443 "GET /kool-savas-anekdote-aus-istanbul-lyrics HTTP/1.1" 404 None
2025-07-25 12:14:34,679 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:14:35,203 - DEBUG - https://genius.com:443 "GET /anekdote-aus-istanbul-kool-savas-lyrics HTTP/1.1" 404 None
2025-07-25 12:14:36,818 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:14:37,276 - DEBUG - https://genius.com:443 "GET /search?q=Kool%20Savas%20Anekdote%20aus%20Istanbul%20%28Skit%29 HTTP/1.1" 200 None
2025-07-25 12:14:37,441 - WARNING - Keine Lyrics gefunden für: data\12. Anekdote aus Istanbul (Skit).mp3
2025-07-25 12:14:37,441 - INFO - Verarbeite Datei: data\13. Lang genug gewartet.mp3
2025-07-25 12:14:37,441 - INFO - Beginne Verarbeitung der Datei: data\13. Lang genug gewartet.mp3
2025-07-25 12:14:37,451 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Lang genug gewartet
2025-07-25 12:14:37,452 - INFO - Lade und speichere Lyrics für: Kool Savas - Lang genug gewartet
2025-07-25 12:14:37,453 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:14:37,873 - DEBUG - https://genius.com:443 "GET /kool-savas-lang-genug-gewartet-lyrics HTTP/1.1" 301 None
2025-07-25 12:14:40,021 - DEBUG - https://genius.com:443 "GET /Kool-savas-lang-genug-gewartet-lyrics HTTP/1.1" 200 None
2025-07-25 12:14:40,360 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 12:14:42,577 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:14:52,303 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:14:52,304 - INFO - Tags gespeichert für: data\13. Lang genug gewartet.mp3
2025-07-25 12:14:52,304 - INFO - Verarbeite Datei: data\14. Märtyrer (Remix).mp3
2025-07-25 12:14:52,304 - INFO - Beginne Verarbeitung der Datei: data\14. Märtyrer (Remix).mp3
2025-07-25 12:14:52,311 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Märtyrer (Remix)
2025-07-25 12:14:52,311 - INFO - Lade und speichere Lyrics für: Kool Savas - Märtyrer (Remix)
2025-07-25 12:14:52,313 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:14:52,693 - DEBUG - https://genius.com:443 "GET /kool-savas-martyrer-lyrics HTTP/1.1" 301 None
2025-07-25 12:14:52,730 - DEBUG - https://genius.com:443 "GET /Kool-savas-martyrer-lyrics HTTP/1.1" 200 None
2025-07-25 12:14:52,966 - DEBUG - BPM-Wert ermittelt: 123
2025-07-25 12:14:55,184 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:15:05,114 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:15:05,115 - INFO - Tags gespeichert für: data\14. Märtyrer (Remix).mp3
2025-07-25 12:15:05,116 - INFO - Verarbeite Datei: data\15. Limit (Remix).mp3
2025-07-25 12:15:05,116 - INFO - Beginne Verarbeitung der Datei: data\15. Limit (Remix).mp3
2025-07-25 12:15:05,125 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Limit (Remix)
2025-07-25 12:15:05,125 - INFO - Lade und speichere Lyrics für: Kool Savas - Limit (Remix)
2025-07-25 12:15:05,126 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:15:05,335 - DEBUG - https://genius.com:443 "GET /kool-savas-limit-lyrics HTTP/1.1" 301 None
2025-07-25 12:15:05,369 - DEBUG - https://genius.com:443 "GET /Kool-savas-limit-lyrics HTTP/1.1" 200 None
2025-07-25 12:15:05,615 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 12:15:07,831 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:15:15,590 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:15:15,591 - INFO - Tags gespeichert für: data\15. Limit (Remix).mp3
2025-07-25 12:15:15,591 - INFO - Verarbeite Datei: data\16. Neue Namen (Remix).mp3
2025-07-25 12:15:15,591 - INFO - Beginne Verarbeitung der Datei: data\16. Neue Namen (Remix).mp3
2025-07-25 12:15:15,599 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Neue Namen (Remix)
2025-07-25 12:15:15,600 - INFO - Lade und speichere Lyrics für: Kool Savas - Neue Namen (Remix)
2025-07-25 12:15:15,601 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:15:15,972 - DEBUG - https://genius.com:443 "GET /kool-savas-neue-namen-lyrics HTTP/1.1" 301 None
2025-07-25 12:15:16,008 - DEBUG - https://genius.com:443 "GET /Kool-savas-neue-namen-lyrics HTTP/1.1" 200 None
2025-07-25 12:15:16,243 - DEBUG - BPM-Wert ermittelt: 96
2025-07-25 12:15:18,460 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:15:24,211 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:15:24,212 - INFO - Tags gespeichert für: data\16. Neue Namen (Remix).mp3
2025-07-25 12:15:24,213 - INFO - Verarbeite Datei: data\17. Waldbrand (Feat. Tone, Curse & Moe Mitchell).mp3
2025-07-25 12:15:24,213 - INFO - Beginne Verarbeitung der Datei: data\17. Waldbrand (Feat. Tone, Curse & Moe Mitchell).mp3
2025-07-25 12:15:24,220 - DEBUG - Metadaten geladen: Artist=Kool Savas, Title=Waldbrand (Feat. Tone, Curse & Moe Mitchell)
2025-07-25 12:15:24,221 - INFO - Lade und speichere Lyrics für: Kool Savas - Waldbrand (Feat. Tone, Curse & Moe Mitchell)
2025-07-25 12:15:24,222 - DEBUG - Starting new HTTPS connection (1): genius.com:443
2025-07-25 12:15:24,510 - DEBUG - https://genius.com:443 "GET /kool-savas-waldbrand-lyrics HTTP/1.1" 301 None
2025-07-25 12:15:27,101 - DEBUG - https://genius.com:443 "GET /Kool-savas-waldbrand-lyrics HTTP/1.1" 200 None
2025-07-25 12:15:27,495 - DEBUG - BPM-Wert ermittelt: 92
2025-07-25 12:15:29,706 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-25 12:15:35,654 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-25 12:15:35,655 - INFO - Tags gespeichert für: data\17. Waldbrand (Feat. Tone, Curse & Moe Mitchell).mp3
2025-07-25 12:15:35,656 - INFO - Verarbeitung abgeschlossen.
2025-07-25 12:15:35,656 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-26 09:45:12,352 - DEBUG - Starte die Anwendung...
2025-07-26 09:45:12,352 - INFO - Verarbeite MP3-Datei...
2025-07-26 09:45:12,352 - ERROR - Fehler bei der Verarbeitung!
2025-07-26 09:45:12,356 - DEBUG - Using proactor: IocpProactor
2025-07-26 09:45:12,387 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-26 09:45:12,500 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-26 09:45:12,523 - DEBUG - Using proactor: IocpProactor
2025-07-26 09:45:12,628 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-26 09:45:12,662 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=None socket_options=None
2025-07-26 09:45:12,663 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E4472F1B10>
2025-07-26 09:45:12,663 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-26 09:45:12,664 - DEBUG - send_request_headers.complete
2025-07-26 09:45:12,664 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-26 09:45:12,665 - DEBUG - send_request_body.complete
2025-07-26 09:45:12,665 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-26 09:45:12,665 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Sat, 26 Jul 2025 07:45:12 GMT'), (b'server', b'uvicorn'), (b'content-length', b'4'), (b'content-type', b'application/json')])
2025-07-26 09:45:12,665 - INFO - HTTP Request: GET http://127.0.0.1:7860/gradio_api/startup-events "HTTP/1.1 200 OK"
2025-07-26 09:45:12,665 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-26 09:45:12,666 - DEBUG - receive_response_body.complete
2025-07-26 09:45:12,666 - DEBUG - response_closed.started
2025-07-26 09:45:12,666 - DEBUG - response_closed.complete
2025-07-26 09:45:12,666 - DEBUG - close.started
2025-07-26 09:45:12,666 - DEBUG - close.complete
2025-07-26 09:45:12,667 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=3 socket_options=None
2025-07-26 09:45:12,677 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E44731F290>
2025-07-26 09:45:12,678 - DEBUG - send_request_headers.started request=<Request [b'HEAD']>
2025-07-26 09:45:12,678 - DEBUG - send_request_headers.complete
2025-07-26 09:45:12,679 - DEBUG - send_request_body.started request=<Request [b'HEAD']>
2025-07-26 09:45:12,679 - DEBUG - send_request_body.complete
2025-07-26 09:45:12,679 - DEBUG - receive_response_headers.started request=<Request [b'HEAD']>
2025-07-26 09:45:12,708 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E44768CA50>
2025-07-26 09:45:12,708 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E44724BAD0> server_hostname='api.gradio.app' timeout=3
2025-07-26 09:45:12,740 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Sat, 26 Jul 2025 07:45:12 GMT'), (b'server', b'uvicorn'), (b'content-length', b'31664'), (b'content-type', b'text/html; charset=utf-8')])
2025-07-26 09:45:12,740 - INFO - HTTP Request: HEAD http://127.0.0.1:7860/ "HTTP/1.1 200 OK"
2025-07-26 09:45:12,741 - DEBUG - receive_response_body.started request=<Request [b'HEAD']>
2025-07-26 09:45:12,741 - DEBUG - receive_response_body.complete
2025-07-26 09:45:12,741 - DEBUG - response_closed.started
2025-07-26 09:45:12,741 - DEBUG - response_closed.complete
2025-07-26 09:45:12,741 - DEBUG - close.started
2025-07-26 09:45:12,741 - DEBUG - close.complete
2025-07-26 09:45:12,744 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-26 09:45:12,891 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/launched HTTP/1.1" 200 0
2025-07-26 09:45:13,060 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E44768CB50>
2025-07-26 09:45:13,061 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-26 09:45:13,062 - DEBUG - send_request_headers.complete
2025-07-26 09:45:13,062 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-26 09:45:13,062 - DEBUG - send_request_body.complete
2025-07-26 09:45:13,062 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-26 09:45:13,235 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 26 Jul 2025 07:45:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-26 09:45:13,235 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-26 09:45:13,236 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-26 09:45:13,237 - DEBUG - receive_response_body.complete
2025-07-26 09:45:13,237 - DEBUG - response_closed.started
2025-07-26 09:45:13,237 - DEBUG - response_closed.complete
2025-07-26 09:45:13,237 - DEBUG - close.started
2025-07-26 09:45:13,238 - DEBUG - close.complete
2025-07-26 09:46:57,292 - DEBUG - matplotlib data path: Z:\AI\software\miniconda3\envs\ace-data_env\Lib\site-packages\matplotlib\mpl-data
2025-07-26 09:46:57,302 - DEBUG - CONFIGDIR=C:\Users\methm\.matplotlib
2025-07-26 09:46:57,303 - DEBUG - interactive is False
2025-07-26 09:46:57,303 - DEBUG - platform is win32
2025-07-26 09:46:57,343 - DEBUG - CACHEDIR=C:\Users\methm\.matplotlib
2025-07-26 09:46:57,356 - DEBUG - Using fontManager instance from C:\Users\methm\.matplotlib\fontlist-v390.json
2025-07-26 09:46:57,617 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-26 09:46:57,617 - DEBUG - Loaded backend agg version v2.2.
2025-07-26 09:46:57,619 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-26 09:46:57,619 - INFO - Verarbeite Datei: data\01. 4AM in Bangkok 130819.mp3
2025-07-26 09:46:57,619 - INFO - Beginne Verarbeitung der Datei: data\01. 4AM in Bangkok 130819.mp3
2025-07-26 09:46:57,863 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
2025-07-26 09:46:57,863 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-26 09:46:57,864 - DEBUG - stack: []
2025-07-26 09:46:57,865 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-26 09:46:57,865 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-07-26 09:46:57,865 - DEBUG - stack []
2025-07-26 09:46:57,865 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
2025-07-26 09:46:57,866 - DEBUG - stack []
2025-07-26 09:46:57,866 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
2025-07-26 09:46:57,866 - DEBUG - stack []
2025-07-26 09:46:57,866 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
2025-07-26 09:46:57,866 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-26 09:46:57,866 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
2025-07-26 09:46:57,867 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2025-07-26 09:46:57,867 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
2025-07-26 09:46:57,867 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
2025-07-26 09:46:57,867 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
2025-07-26 09:46:57,867 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
2025-07-26 09:46:57,867 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
2025-07-26 09:46:57,868 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
2025-07-26 09:46:57,868 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
2025-07-26 09:46:57,868 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
2025-07-26 09:46:57,868 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
2025-07-26 09:46:57,869 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
2025-07-26 09:46:57,869 - DEBUG - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
2025-07-26 09:46:57,869 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-26 09:46:57,869 - DEBUG - dispatch pc=34, inst=CALL(arg=7, lineno=86)
2025-07-26 09:46:57,869 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-26 09:46:57,870 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
2025-07-26 09:46:57,870 - DEBUG - stack ['$34call.9']
2025-07-26 09:46:57,870 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
2025-07-26 09:46:57,870 - DEBUG - stack []
2025-07-26 09:46:57,870 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
2025-07-26 09:46:57,870 - DEBUG - stack ['$const46.10.0']
2025-07-26 09:46:57,870 - DEBUG - end state. edges=[]
2025-07-26 09:46:57,871 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-26 09:46:57,871 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-26 09:46:57,871 - DEBUG - defmap: {}
2025-07-26 09:46:57,871 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-26 09:46:57,871 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-26 09:46:57,871 - DEBUG - keep phismap: {}
2025-07-26 09:46:57,872 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-26 09:46:57,872 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-26 09:46:57,872 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10.0'}), (48, {'retval': '$const46.10.0', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-26 09:46:57,872 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000001E4494ACA40>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10.0 = const(NoneType, None)    ['$const46.10.0']
    $48return_value.11 = cast(value=$const46.10.0) ['$48return_value.11', '$const46.10.0']
    return $48return_value.11                ['$48return_value.11']

2025-07-26 09:46:57,874 - DEBUG - ==== SSA block analysis pass on 0
2025-07-26 09:46:57,874 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E44945A650>
2025-07-26 09:46:57,874 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:57,874 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:57,874 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:57,876 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:57,876 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:57,876 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:57,876 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:57,877 - DEBUG - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000001E4494ACA40>))
2025-07-26 09:46:57,877 - DEBUG - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:57,877 - DEBUG - on stmt: $const46.10.0 = const(NoneType, None)
2025-07-26 09:46:57,877 - DEBUG - on stmt: $48return_value.11 = cast(value=$const46.10.0)
2025-07-26 09:46:57,877 - DEBUG - on stmt: return $48return_value.11
2025-07-26 09:46:57,878 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x000001E448D3E710>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x000001E4497B1010>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001E449507E90>,
                                  0)],
             '$const46.10.0': [(<numba.core.ir.Assign object at 0x000001E4497B0E50>,
                                0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000001E4495078D0>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000001E4495077D0>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000001E4495079D0>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x000001E449507B10>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x000001E449507690>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x000001E449506810>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001E449507C10>, 0)]})
2025-07-26 09:46:57,878 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001E44945A650>
2025-07-26 09:46:57,881 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
2025-07-26 09:46:57,882 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-26 09:46:57,882 - DEBUG - stack: []
2025-07-26 09:46:57,883 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-26 09:46:57,883 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-07-26 09:46:57,883 - DEBUG - stack []
2025-07-26 09:46:57,883 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
2025-07-26 09:46:57,883 - DEBUG - stack []
2025-07-26 09:46:57,883 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
2025-07-26 09:46:57,883 - DEBUG - stack []
2025-07-26 09:46:57,884 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
2025-07-26 09:46:57,884 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-26 09:46:57,884 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
2025-07-26 09:46:57,884 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
2025-07-26 09:46:57,884 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
2025-07-26 09:46:57,884 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
2025-07-26 09:46:57,884 - DEBUG - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
2025-07-26 09:46:57,885 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-26 09:46:57,885 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=9)
2025-07-26 09:46:57,885 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-26 09:46:57,885 - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
2025-07-26 09:46:57,886 - DEBUG - stack ['$28call.5']
2025-07-26 09:46:57,886 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
2025-07-26 09:46:57,886 - DEBUG - stack []
2025-07-26 09:46:57,886 - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
2025-07-26 09:46:57,886 - DEBUG - stack ['$const40.6.1']
2025-07-26 09:46:57,886 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
2025-07-26 09:46:57,887 - DEBUG - stack []
2025-07-26 09:46:57,887 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
2025-07-26 09:46:57,887 - DEBUG - stack ['$const44.7.2']
2025-07-26 09:46:57,887 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
2025-07-26 09:46:57,887 - DEBUG - stack []
2025-07-26 09:46:57,887 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
2025-07-26 09:46:57,887 - DEBUG - stack ['$const48.8.1']
2025-07-26 09:46:57,887 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
2025-07-26 09:46:57,888 - DEBUG - stack []
2025-07-26 09:46:57,888 - DEBUG - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
2025-07-26 09:46:57,888 - DEBUG - stack ['$const52.9.1']
2025-07-26 09:46:57,888 - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
2025-07-26 09:46:57,888 - DEBUG - stack []
2025-07-26 09:46:57,888 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
2025-07-26 09:46:57,888 - DEBUG - stack ['$const56.10.2']
2025-07-26 09:46:57,889 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
2025-07-26 09:46:57,889 - DEBUG - stack []
2025-07-26 09:46:57,889 - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
2025-07-26 09:46:57,889 - DEBUG - stack ['$const60.11.1']
2025-07-26 09:46:57,889 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
2025-07-26 09:46:57,890 - DEBUG - stack []
2025-07-26 09:46:57,890 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
2025-07-26 09:46:57,890 - DEBUG - stack ['$const64.12.1']
2025-07-26 09:46:57,890 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
2025-07-26 09:46:57,890 - DEBUG - stack []
2025-07-26 09:46:57,890 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
2025-07-26 09:46:57,891 - DEBUG - stack ['$interp_win68.13']
2025-07-26 09:46:57,892 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
2025-07-26 09:46:57,892 - DEBUG - stack ['$70load_attr.14']
2025-07-26 09:46:57,892 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-07-26 09:46:57,892 - DEBUG - stack ['$70load_attr.14', '$const80.15.2']
2025-07-26 09:46:57,893 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
2025-07-26 09:46:57,893 - DEBUG - stack ['$82binary_subscr.16']
2025-07-26 09:46:57,893 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
2025-07-26 09:46:57,893 - DEBUG - stack []
2025-07-26 09:46:57,893 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
2025-07-26 09:46:57,893 - DEBUG - stack ['$x94.17']
2025-07-26 09:46:57,894 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
2025-07-26 09:46:57,894 - DEBUG - stack ['$96load_attr.18']
2025-07-26 09:46:57,894 - DEBUG - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-07-26 09:46:57,894 - DEBUG - stack ['$96load_attr.18', '$const106.19.2']
2025-07-26 09:46:57,894 - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
2025-07-26 09:46:57,894 - DEBUG - stack ['$108binary_subscr.20']
2025-07-26 09:46:57,895 - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
2025-07-26 09:46:57,895 - DEBUG - stack []
2025-07-26 09:46:57,895 - DEBUG - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
2025-07-26 09:46:57,895 - DEBUG - stack ['$t_out120.21']
2025-07-26 09:46:57,895 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
2025-07-26 09:46:57,895 - DEBUG - stack ['$122load_attr.22']
2025-07-26 09:46:57,895 - DEBUG - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-07-26 09:46:57,896 - DEBUG - stack ['$122load_attr.22', '$const132.23.2']
2025-07-26 09:46:57,896 - DEBUG - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
2025-07-26 09:46:57,896 - DEBUG - stack ['$134binary_subscr.24']
2025-07-26 09:46:57,896 - DEBUG - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
2025-07-26 09:46:57,896 - DEBUG - stack []
2025-07-26 09:46:57,896 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
2025-07-26 09:46:57,896 - DEBUG - stack ['$null$146.26', '$146load_global.25']
2025-07-26 09:46:57,897 - DEBUG - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
2025-07-26 09:46:57,897 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-26 09:46:57,897 - DEBUG - dispatch pc=164, inst=CALL(arg=1, lineno=23)
2025-07-26 09:46:57,897 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-26 09:46:57,897 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
2025-07-26 09:46:57,897 - DEBUG - stack ['$164call.28']
2025-07-26 09:46:57,898 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
2025-07-26 09:46:57,898 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2025-07-26 09:46:57,898 - DEBUG - stack: ['$phi176.0']
2025-07-26 09:46:57,898 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2025-07-26 09:46:57,898 - DEBUG - dispatch pc=176, inst=NOP(arg=1, lineno=23)
2025-07-26 09:46:57,898 - DEBUG - stack ['$phi176.0']
2025-07-26 09:46:57,898 - DEBUG - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
2025-07-26 09:46:57,899 - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=1)])
2025-07-26 09:46:57,899 - DEBUG - stack: ['$phi178.0']
2025-07-26 09:46:57,899 - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=1)
2025-07-26 09:46:57,899 - DEBUG - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
2025-07-26 09:46:57,899 - DEBUG - stack ['$phi178.0']
2025-07-26 09:46:57,899 - DEBUG - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
2025-07-26 09:46:57,900 - DEBUG - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
2025-07-26 09:46:57,900 - DEBUG - stack: []
2025-07-26 09:46:57,900 - DEBUG - state.pc_initial: State(pc_initial=782 nstack_initial=0)
2025-07-26 09:46:57,900 - DEBUG - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
2025-07-26 09:46:57,900 - DEBUG - stack []
2025-07-26 09:46:57,900 - DEBUG - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
2025-07-26 09:46:57,900 - DEBUG - stack ['$const782.0.0']
2025-07-26 09:46:57,901 - DEBUG - end state. edges=[]
2025-07-26 09:46:57,901 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2025-07-26 09:46:57,901 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2025-07-26 09:46:57,901 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2025-07-26 09:46:57,901 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
2025-07-26 09:46:57,901 - DEBUG - stack ['$phi180.0', '$phi180.1']
2025-07-26 09:46:57,901 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
2025-07-26 09:46:57,902 - DEBUG - stack ['$phi180.0']
2025-07-26 09:46:57,902 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
2025-07-26 09:46:57,902 - DEBUG - stack ['$phi180.0', '$t_out182.2']
2025-07-26 09:46:57,902 - DEBUG - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-07-26 09:46:57,902 - DEBUG - stack ['$phi180.0', '$t_out182.2', '$t184.3']
2025-07-26 09:46:57,903 - DEBUG - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
2025-07-26 09:46:57,903 - DEBUG - stack ['$phi180.0', '$186binary_subscr.4']
2025-07-26 09:46:57,903 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
2025-07-26 09:46:57,903 - DEBUG - stack ['$phi180.0']
2025-07-26 09:46:57,903 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
2025-07-26 09:46:57,903 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
2025-07-26 09:46:57,904 - DEBUG - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
2025-07-26 09:46:57,904 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-26 09:46:57,904 - DEBUG - dispatch pc=216, inst=CALL(arg=1, lineno=27)
2025-07-26 09:46:57,904 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-26 09:46:57,904 - DEBUG - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
2025-07-26 09:46:57,904 - DEBUG - stack ['$phi180.0', '$216call.8']
2025-07-26 09:46:57,904 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
2025-07-26 09:46:57,904 - DEBUG - stack ['$phi180.0']
2025-07-26 09:46:57,905 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
2025-07-26 09:46:57,905 - DEBUG - stack ['$phi180.0', '$scale228.9']
2025-07-26 09:46:57,905 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
2025-07-26 09:46:57,905 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
2025-07-26 09:46:57,905 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
2025-07-26 09:46:57,905 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
2025-07-26 09:46:57,906 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
2025-07-26 09:46:57,906 - DEBUG - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
2025-07-26 09:46:57,906 - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
2025-07-26 09:46:57,906 - DEBUG - stack ['$phi180.0', '$binop_mul238.13']
2025-07-26 09:46:57,906 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
2025-07-26 09:46:57,906 - DEBUG - stack ['$phi180.0']
2025-07-26 09:46:57,907 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
2025-07-26 09:46:57,908 - DEBUG - stack ['$phi180.0', '$frac244.14']
2025-07-26 09:46:57,908 - DEBUG - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
2025-07-26 09:46:57,909 - DEBUG - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
2025-07-26 09:46:57,909 - DEBUG - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
2025-07-26 09:46:57,909 - DEBUG - stack ['$phi180.0', '$binop_mul248.16']
2025-07-26 09:46:57,909 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
2025-07-26 09:46:57,909 - DEBUG - stack ['$phi180.0']
2025-07-26 09:46:57,909 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
2025-07-26 09:46:57,909 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
2025-07-26 09:46:57,910 - DEBUG - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
2025-07-26 09:46:57,910 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-26 09:46:57,910 - DEBUG - dispatch pc=272, inst=CALL(arg=1, lineno=34)
2025-07-26 09:46:57,910 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-26 09:46:57,910 - DEBUG - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
2025-07-26 09:46:57,911 - DEBUG - stack ['$phi180.0', '$272call.20']
2025-07-26 09:46:57,911 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
2025-07-26 09:46:57,911 - DEBUG - stack ['$phi180.0']
2025-07-26 09:46:57,911 - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
2025-07-26 09:46:57,911 - DEBUG - stack ['$phi180.0', '$index_frac284.21']
2025-07-26 09:46:57,912 - DEBUG - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
2025-07-26 09:46:57,912 - DEBUG - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
2025-07-26 09:46:57,912 - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
2025-07-26 09:46:57,912 - DEBUG - stack ['$phi180.0', '$binop_sub288.23']
2025-07-26 09:46:57,912 - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
2025-07-26 09:46:57,912 - DEBUG - stack ['$phi180.0']
2025-07-26 09:46:57,912 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
2025-07-26 09:46:57,912 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
2025-07-26 09:46:57,913 - DEBUG - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
2025-07-26 09:46:57,913 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
2025-07-26 09:46:57,913 - DEBUG - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
2025-07-26 09:46:57,913 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27.3']
2025-07-26 09:46:57,913 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
2025-07-26 09:46:57,913 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
2025-07-26 09:46:57,913 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
2025-07-26 09:46:57,914 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
2025-07-26 09:46:57,914 - DEBUG - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
2025-07-26 09:46:57,914 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
2025-07-26 09:46:57,914 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
2025-07-26 09:46:57,914 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
2025-07-26 09:46:57,914 - DEBUG - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
2025-07-26 09:46:57,915 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
2025-07-26 09:46:57,915 - DEBUG - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
2025-07-26 09:46:57,915 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-26 09:46:57,915 - DEBUG - dispatch pc=332, inst=CALL(arg=2, lineno=40)
2025-07-26 09:46:57,915 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-26 09:46:57,915 - DEBUG - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
2025-07-26 09:46:57,915 - DEBUG - stack ['$phi180.0', '$332call.34']
2025-07-26 09:46:57,916 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
2025-07-26 09:46:57,916 - DEBUG - stack ['$phi180.0']
2025-07-26 09:46:57,916 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
2025-07-26 09:46:57,916 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
2025-07-26 09:46:57,916 - DEBUG - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
2025-07-26 09:46:57,916 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-26 09:46:57,916 - DEBUG - dispatch pc=362, inst=CALL(arg=1, lineno=41)
2025-07-26 09:46:57,917 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-26 09:46:57,917 - DEBUG - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
2025-07-26 09:46:57,917 - DEBUG - stack ['$phi180.0', '$362call.38']
2025-07-26 09:46:57,917 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
2025-07-26 09:46:57,917 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2)])
2025-07-26 09:46:57,917 - DEBUG - stack: ['$phi374.0', '$phi374.1']
2025-07-26 09:46:57,917 - DEBUG - state.pc_initial: State(pc_initial=374 nstack_initial=2)
2025-07-26 09:46:57,918 - DEBUG - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
2025-07-26 09:46:57,918 - DEBUG - stack ['$phi374.0', '$phi374.1']
2025-07-26 09:46:57,918 - DEBUG - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
2025-07-26 09:46:57,918 - DEBUG - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
2025-07-26 09:46:57,918 - DEBUG - stack: ['$phi500.0']
2025-07-26 09:46:57,918 - DEBUG - state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-07-26 09:46:57,919 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
2025-07-26 09:46:57,919 - DEBUG - stack ['$phi500.0']
2025-07-26 09:46:57,919 - DEBUG - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
2025-07-26 09:46:57,919 - DEBUG - stack ['$phi500.0', '$scale500.1']
2025-07-26 09:46:57,919 - DEBUG - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
2025-07-26 09:46:57,919 - DEBUG - stack ['$phi500.0', '$scale500.1', '$frac502.2']
2025-07-26 09:46:57,919 - DEBUG - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
2025-07-26 09:46:57,920 - DEBUG - stack ['$phi500.0', '$binop_sub504.3']
2025-07-26 09:46:57,920 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
2025-07-26 09:46:57,920 - DEBUG - stack ['$phi500.0']
2025-07-26 09:46:57,920 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
2025-07-26 09:46:57,920 - DEBUG - stack ['$phi500.0', '$frac510.4']
2025-07-26 09:46:57,920 - DEBUG - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
2025-07-26 09:46:57,920 - DEBUG - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
2025-07-26 09:46:57,921 - DEBUG - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
2025-07-26 09:46:57,921 - DEBUG - stack ['$phi500.0', '$binop_mul514.6']
2025-07-26 09:46:57,921 - DEBUG - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
2025-07-26 09:46:57,921 - DEBUG - stack ['$phi500.0']
2025-07-26 09:46:57,921 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
2025-07-26 09:46:57,921 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
2025-07-26 09:46:57,921 - DEBUG - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
2025-07-26 09:46:57,921 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-26 09:46:57,922 - DEBUG - dispatch pc=538, inst=CALL(arg=1, lineno=54)
2025-07-26 09:46:57,922 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-26 09:46:57,922 - DEBUG - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
2025-07-26 09:46:57,922 - DEBUG - stack ['$phi500.0', '$538call.10']
2025-07-26 09:46:57,922 - DEBUG - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
2025-07-26 09:46:57,922 - DEBUG - stack ['$phi500.0']
2025-07-26 09:46:57,924 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
2025-07-26 09:46:57,924 - DEBUG - stack ['$phi500.0', '$index_frac550.11']
2025-07-26 09:46:57,924 - DEBUG - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
2025-07-26 09:46:57,924 - DEBUG - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
2025-07-26 09:46:57,924 - DEBUG - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
2025-07-26 09:46:57,925 - DEBUG - stack ['$phi500.0', '$binop_sub554.13']
2025-07-26 09:46:57,925 - DEBUG - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
2025-07-26 09:46:57,925 - DEBUG - stack ['$phi500.0']
2025-07-26 09:46:57,925 - DEBUG - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
2025-07-26 09:46:57,925 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
2025-07-26 09:46:57,925 - DEBUG - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
2025-07-26 09:46:57,925 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
2025-07-26 09:46:57,925 - DEBUG - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
2025-07-26 09:46:57,926 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
2025-07-26 09:46:57,926 - DEBUG - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
2025-07-26 09:46:57,926 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
2025-07-26 09:46:57,926 - DEBUG - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
2025-07-26 09:46:57,926 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19.3']
2025-07-26 09:46:57,926 - DEBUG - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
2025-07-26 09:46:57,927 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
2025-07-26 09:46:57,927 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
2025-07-26 09:46:57,927 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
2025-07-26 09:46:57,927 - DEBUG - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
2025-07-26 09:46:57,927 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
2025-07-26 09:46:57,927 - DEBUG - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
2025-07-26 09:46:57,927 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
2025-07-26 09:46:57,928 - DEBUG - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
2025-07-26 09:46:57,928 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
2025-07-26 09:46:57,928 - DEBUG - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
2025-07-26 09:46:57,928 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-26 09:46:57,928 - DEBUG - dispatch pc=604, inst=CALL(arg=2, lineno=60)
2025-07-26 09:46:57,928 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-26 09:46:57,928 - DEBUG - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
2025-07-26 09:46:57,929 - DEBUG - stack ['$phi500.0', '$604call.26']
2025-07-26 09:46:57,929 - DEBUG - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
2025-07-26 09:46:57,929 - DEBUG - stack ['$phi500.0']
2025-07-26 09:46:57,929 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
2025-07-26 09:46:57,929 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
2025-07-26 09:46:57,929 - DEBUG - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
2025-07-26 09:46:57,929 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-26 09:46:57,930 - DEBUG - dispatch pc=634, inst=CALL(arg=1, lineno=61)
2025-07-26 09:46:57,930 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-26 09:46:57,930 - DEBUG - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
2025-07-26 09:46:57,930 - DEBUG - stack ['$phi500.0', '$634call.30']
2025-07-26 09:46:57,930 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
2025-07-26 09:46:57,930 - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
2025-07-26 09:46:57,930 - DEBUG - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-26 09:46:57,931 - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=3)
2025-07-26 09:46:57,931 - DEBUG - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
2025-07-26 09:46:57,931 - DEBUG - stack ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-26 09:46:57,931 - DEBUG - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
2025-07-26 09:46:57,931 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-26 09:46:57,932 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
2025-07-26 09:46:57,932 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
2025-07-26 09:46:57,932 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
2025-07-26 09:46:57,932 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
2025-07-26 09:46:57,932 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
2025-07-26 09:46:57,932 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
2025-07-26 09:46:57,932 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
2025-07-26 09:46:57,933 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
2025-07-26 09:46:57,933 - DEBUG - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
2025-07-26 09:46:57,933 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
2025-07-26 09:46:57,933 - DEBUG - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-07-26 09:46:57,933 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
2025-07-26 09:46:57,933 - DEBUG - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
2025-07-26 09:46:57,933 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
2025-07-26 09:46:57,934 - DEBUG - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
2025-07-26 09:46:57,934 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
2025-07-26 09:46:57,934 - DEBUG - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
2025-07-26 09:46:57,934 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
2025-07-26 09:46:57,934 - DEBUG - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
2025-07-26 09:46:57,934 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
2025-07-26 09:46:57,934 - DEBUG - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
2025-07-26 09:46:57,935 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
2025-07-26 09:46:57,935 - DEBUG - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
2025-07-26 09:46:57,935 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
2025-07-26 09:46:57,935 - DEBUG - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
2025-07-26 09:46:57,935 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
2025-07-26 09:46:57,935 - DEBUG - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-07-26 09:46:57,936 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
2025-07-26 09:46:57,936 - DEBUG - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
2025-07-26 09:46:57,936 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
2025-07-26 09:46:57,936 - DEBUG - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
2025-07-26 09:46:57,936 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
2025-07-26 09:46:57,936 - DEBUG - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
2025-07-26 09:46:57,936 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
2025-07-26 09:46:57,937 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
2025-07-26 09:46:57,937 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-26 09:46:57,937 - DEBUG - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
2025-07-26 09:46:57,937 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20']
2025-07-26 09:46:57,937 - DEBUG - dispatch pc=446, inst=COPY(arg=2, lineno=47)
2025-07-26 09:46:57,937 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
2025-07-26 09:46:57,937 - DEBUG - dispatch pc=448, inst=COPY(arg=2, lineno=47)
2025-07-26 09:46:57,937 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
2025-07-26 09:46:57,938 - DEBUG - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-26 09:46:57,938 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
2025-07-26 09:46:57,938 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
2025-07-26 09:46:57,938 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
2025-07-26 09:46:57,938 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
2025-07-26 09:46:57,938 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
2025-07-26 09:46:57,938 - DEBUG - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
2025-07-26 09:46:57,939 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
2025-07-26 09:46:57,939 - DEBUG - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
2025-07-26 09:46:57,940 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
2025-07-26 09:46:57,940 - DEBUG - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
2025-07-26 09:46:57,940 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
2025-07-26 09:46:57,940 - DEBUG - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-26 09:46:57,940 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
2025-07-26 09:46:57,940 - DEBUG - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
2025-07-26 09:46:57,940 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
2025-07-26 09:46:57,941 - DEBUG - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
2025-07-26 09:46:57,941 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
2025-07-26 09:46:57,941 - DEBUG - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
2025-07-26 09:46:57,941 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
2025-07-26 09:46:57,941 - DEBUG - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
2025-07-26 09:46:57,941 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
2025-07-26 09:46:57,941 - DEBUG - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-07-26 09:46:57,942 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
2025-07-26 09:46:57,942 - DEBUG - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
2025-07-26 09:46:57,942 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-26 09:46:57,942 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
2025-07-26 09:46:57,942 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
2025-07-26 09:46:57,942 - DEBUG - stack: ['$phi646.0', '$phi646.1']
2025-07-26 09:46:57,942 - DEBUG - state.pc_initial: State(pc_initial=646 nstack_initial=2)
2025-07-26 09:46:57,943 - DEBUG - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
2025-07-26 09:46:57,943 - DEBUG - stack ['$phi646.0', '$phi646.1']
2025-07-26 09:46:57,943 - DEBUG - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
2025-07-26 09:46:57,943 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-26 09:46:57,943 - DEBUG - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-26 09:46:57,943 - DEBUG - stack: ['$phi778.0']
2025-07-26 09:46:57,944 - DEBUG - state.pc_initial: State(pc_initial=778 nstack_initial=1)
2025-07-26 09:46:57,944 - DEBUG - dispatch pc=778, inst=NOP(arg=1, lineno=61)
2025-07-26 09:46:57,944 - DEBUG - stack ['$phi778.0']
2025-07-26 09:46:57,944 - DEBUG - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
2025-07-26 09:46:57,944 - DEBUG - stack ['$phi778.0']
2025-07-26 09:46:57,944 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
2025-07-26 09:46:57,945 - DEBUG - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
2025-07-26 09:46:57,945 - DEBUG - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-26 09:46:57,945 - DEBUG - state.pc_initial: State(pc_initial=648 nstack_initial=3)
2025-07-26 09:46:57,945 - DEBUG - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
2025-07-26 09:46:57,945 - DEBUG - stack ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-26 09:46:57,945 - DEBUG - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
2025-07-26 09:46:57,945 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-26 09:46:57,945 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
2025-07-26 09:46:57,946 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
2025-07-26 09:46:57,946 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
2025-07-26 09:46:57,946 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
2025-07-26 09:46:57,946 - DEBUG - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
2025-07-26 09:46:57,946 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
2025-07-26 09:46:57,946 - DEBUG - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
2025-07-26 09:46:57,946 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
2025-07-26 09:46:57,947 - DEBUG - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
2025-07-26 09:46:57,947 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
2025-07-26 09:46:57,947 - DEBUG - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-07-26 09:46:57,947 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
2025-07-26 09:46:57,947 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
2025-07-26 09:46:57,947 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
2025-07-26 09:46:57,948 - DEBUG - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
2025-07-26 09:46:57,948 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
2025-07-26 09:46:57,948 - DEBUG - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
2025-07-26 09:46:57,948 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
2025-07-26 09:46:57,948 - DEBUG - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
2025-07-26 09:46:57,948 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
2025-07-26 09:46:57,949 - DEBUG - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
2025-07-26 09:46:57,949 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
2025-07-26 09:46:57,949 - DEBUG - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
2025-07-26 09:46:57,949 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
2025-07-26 09:46:57,949 - DEBUG - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
2025-07-26 09:46:57,949 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
2025-07-26 09:46:57,949 - DEBUG - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-07-26 09:46:57,950 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
2025-07-26 09:46:57,950 - DEBUG - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
2025-07-26 09:46:57,950 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
2025-07-26 09:46:57,950 - DEBUG - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
2025-07-26 09:46:57,950 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
2025-07-26 09:46:57,950 - DEBUG - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
2025-07-26 09:46:57,950 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
2025-07-26 09:46:57,951 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
2025-07-26 09:46:57,951 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-26 09:46:57,951 - DEBUG - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
2025-07-26 09:46:57,951 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20']
2025-07-26 09:46:57,951 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=66)
2025-07-26 09:46:57,951 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
2025-07-26 09:46:57,952 - DEBUG - dispatch pc=720, inst=COPY(arg=2, lineno=66)
2025-07-26 09:46:57,952 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
2025-07-26 09:46:57,952 - DEBUG - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-26 09:46:57,952 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
2025-07-26 09:46:57,952 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
2025-07-26 09:46:57,952 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
2025-07-26 09:46:57,953 - DEBUG - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
2025-07-26 09:46:57,953 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
2025-07-26 09:46:57,953 - DEBUG - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
2025-07-26 09:46:57,953 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
2025-07-26 09:46:57,953 - DEBUG - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
2025-07-26 09:46:57,953 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
2025-07-26 09:46:57,953 - DEBUG - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
2025-07-26 09:46:57,953 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
2025-07-26 09:46:57,954 - DEBUG - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
2025-07-26 09:46:57,954 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
2025-07-26 09:46:57,956 - DEBUG - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
2025-07-26 09:46:57,956 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28.3']
2025-07-26 09:46:57,956 - DEBUG - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-26 09:46:57,956 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
2025-07-26 09:46:57,957 - DEBUG - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
2025-07-26 09:46:57,957 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
2025-07-26 09:46:57,957 - DEBUG - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
2025-07-26 09:46:57,957 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
2025-07-26 09:46:57,957 - DEBUG - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
2025-07-26 09:46:57,957 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
2025-07-26 09:46:57,957 - DEBUG - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
2025-07-26 09:46:57,958 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
2025-07-26 09:46:57,958 - DEBUG - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-07-26 09:46:57,958 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
2025-07-26 09:46:57,958 - DEBUG - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
2025-07-26 09:46:57,958 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-26 09:46:57,958 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
2025-07-26 09:46:57,959 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
2025-07-26 09:46:57,959 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2)])
2025-07-26 09:46:57,959 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-26 09:46:57,959 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
2025-07-26 09:46:57,959 - DEBUG - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
2025-07-26 09:46:57,960 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
2025-07-26 09:46:57,960 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-26 09:46:57,961 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-26 09:46:57,962 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-26 09:46:57,962 - DEBUG - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
2025-07-26 09:46:57,962 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
2025-07-26 09:46:57,963 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-26 09:46:57,963 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6.1'}), (42, {'value': '$const40.6.1'}), (44, {'res': '$const44.7.2'}), (46, {'value': '$const44.7.2'}), (48, {'res': '$const48.8.1'}), (50, {'value': '$const48.8.1'}), (52, {'res': '$const52.9.1'}), (54, {'value': '$const52.9.1'}), (56, {'res': '$const56.10.2'}), (58, {'value': '$const56.10.2'}), (60, {'res': '$const60.11.1'}), (62, {'value': '$const60.11.1'}), (64, {'res': '$const64.12.1'}), (66, {'value': '$const64.12.1'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15.2'}), (82, {'index': '$const80.15.2', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19.2'}), (108, {'index': '$const106.19.2', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23.2'}), (134, {'index': '$const132.23.2', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
2025-07-26 09:46:57,963 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
2025-07-26 09:46:57,963 - DEBUG - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
2025-07-26 09:46:57,963 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27.3'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27.3', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
2025-07-26 09:46:57,964 - DEBUG - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
2025-07-26 09:46:57,964 - DEBUG - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
2025-07-26 09:46:57,964 - DEBUG - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19.3'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19.3', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
2025-07-26 09:46:57,965 - DEBUG - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
2025-07-26 09:46:57,965 - DEBUG - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28.3'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28.3', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
2025-07-26 09:46:57,965 - DEBUG - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
2025-07-26 09:46:57,965 - DEBUG - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0.0'}), (784, {'retval': '$const782.0.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-26 09:46:57,968 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15.2 = const(int, 0)            ['$const80.15.2']
    nwin = getitem(value=$70load_attr.14, index=$const80.15.2, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15.2', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19.2 = const(int, 0)           ['$const106.19.2']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19.2, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19.2', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23.2 = const(int, 0)           ['$const132.23.2']
    n_out = getitem(value=$122load_attr.22, index=$const132.23.2, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23.2', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27.3 = const(int, 1)           ['$const308.27.3']
    $binop_add310.28 = n + $const308.27.3    ['$binop_add310.28', '$const308.27.3', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19.3 = const(int, 1)           ['$const580.19.3']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19.3 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19.3']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28.3 = const(int, 1)           ['$const744.28.3']
    $binop_add746.29 = $binop_add740.27 + $const744.28.3 ['$binop_add740.27', '$binop_add746.29', '$const744.28.3']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0.0 = const(NoneType, None)    ['$const782.0.0']
    $784return_value.1 = cast(value=$const782.0.0) ['$784return_value.1', '$const782.0.0']
    return $784return_value.1                ['$784return_value.1']

2025-07-26 09:46:57,988 - DEBUG - ==== SSA block analysis pass on 0
2025-07-26 09:46:57,989 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E4497F5450>
2025-07-26 09:46:57,989 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:57,989 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:57,989 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:57,990 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:57,990 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:57,990 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:57,990 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:57,990 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:57,990 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:57,990 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:57,990 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:57,991 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:57,991 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:57,991 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:57,991 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:57,991 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:57,991 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:57,991 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:57,992 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:57,992 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:57,992 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:57,992 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:57,992 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:57,992 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:57,992 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:57,993 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:57,993 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:57,993 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:57,993 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:57,993 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:57,994 - DEBUG - on stmt: jump 176
2025-07-26 09:46:57,994 - DEBUG - ==== SSA block analysis pass on 176
2025-07-26 09:46:57,994 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E4497F5450>
2025-07-26 09:46:57,994 - DEBUG - on stmt: jump 178
2025-07-26 09:46:57,994 - DEBUG - ==== SSA block analysis pass on 178
2025-07-26 09:46:57,994 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E4497F5450>
2025-07-26 09:46:57,995 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:57,995 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:57,995 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:57,995 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:57,995 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:57,995 - DEBUG - ==== SSA block analysis pass on 180
2025-07-26 09:46:57,995 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E4497F5450>
2025-07-26 09:46:57,996 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:57,996 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:57,996 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:57,996 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:57,996 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-26 09:46:57,996 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-26 09:46:57,996 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:57,996 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:57,997 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:57,997 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:57,997 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:57,997 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:57,997 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-26 09:46:57,997 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 09:46:57,998 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:57,998 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:57,998 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:57,998 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:57,998 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:57,998 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:57,999 - DEBUG - on stmt: jump 374
2025-07-26 09:46:57,999 - DEBUG - ==== SSA block analysis pass on 374
2025-07-26 09:46:57,999 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E4497F5450>
2025-07-26 09:46:57,999 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:57,999 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:57,999 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:57,999 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,000 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,000 - DEBUG - ==== SSA block analysis pass on 376
2025-07-26 09:46:58,000 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E4497F5450>
2025-07-26 09:46:58,000 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,000 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,000 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 09:46:58,000 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,001 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,001 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 09:46:58,001 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,001 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,001 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,002 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,003 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-26 09:46:58,003 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,003 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,003 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,004 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,004 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,004 - DEBUG - ==== SSA block analysis pass on 500
2025-07-26 09:46:58,004 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E4497F5450>
2025-07-26 09:46:58,004 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 09:46:58,004 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-26 09:46:58,005 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,005 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,005 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,005 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,005 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,006 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-26 09:46:58,006 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,006 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,006 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 09:46:58,006 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,006 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,006 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,007 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,007 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,007 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,007 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,007 - DEBUG - ==== SSA block analysis pass on 646
2025-07-26 09:46:58,007 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E4497F5450>
2025-07-26 09:46:58,008 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,008 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,008 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,008 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,008 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,008 - DEBUG - ==== SSA block analysis pass on 648
2025-07-26 09:46:58,008 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E4497F5450>
2025-07-26 09:46:58,009 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,009 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,009 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 09:46:58,009 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,009 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,009 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 09:46:58,010 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,010 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,010 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,010 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,010 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-26 09:46:58,010 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,010 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,011 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,011 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,011 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,011 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,011 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,011 - DEBUG - ==== SSA block analysis pass on 778
2025-07-26 09:46:58,011 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E4497F5450>
2025-07-26 09:46:58,012 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,012 - DEBUG - ==== SSA block analysis pass on 782
2025-07-26 09:46:58,012 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001E4497F5450>
2025-07-26 09:46:58,012 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,012 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,012 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,012 - DEBUG - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x000001E4497F7CD0>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x000001E4497FC510>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x000001E4497FCA50>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x000001E4497FCCD0>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x000001E4497FCD90>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x000001E4497FCE90>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x000001E4497FD010>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x000001E4497FDA50>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x000001E4497FF190>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x000001E4497FFF10>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x000001E4498053D0>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x000001E449805890>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x000001E449805B50>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x000001E4497FD5D0>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x000001E4497FEA10>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x000001E4497FF010>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001E4498066D0>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x000001E449807450>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x000001E449807F50>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x000001E44980CA50>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x000001E4497EF490>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x000001E44980D710>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x000001E44980E390>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x000001E44980F9D0>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x000001E44980FDD0>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x000001E449810090>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x000001E44980D850>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x000001E44980DF10>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x000001E44980ED90>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001E449811050>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x000001E449811ED0>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x000001E4497F69D0>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x000001E449812A90>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x000001E449813950>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x000001E449812710>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x000001E4497F7350>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x000001E4498044D0>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x000001E449806490>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x000001E449807210>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x000001E449810E10>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x000001E449811C90>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x000001E449813390>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x000001E449813750>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x000001E449804D90>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x000001E44980F510>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x000001E44980CD90>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x000001E449813E90>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x000001E4497DDB90>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x000001E449806250>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x000001E449806FD0>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x000001E449807710>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x000001E44980CC50>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x000001E449810BD0>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x000001E449811A50>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x000001E449812190>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x000001E449813C10>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x000001E4497FE650>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x000001E4498049D0>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x000001E44980C850>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x000001E44980C2D0>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x000001E44980E890>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x000001E44980EC10>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x000001E44980F110>,
                                   500)],
             '$const106.19.2': [(<numba.core.ir.Assign object at 0x000001E4497F7610>,
                                 0)],
             '$const132.23.2': [(<numba.core.ir.Assign object at 0x000001E4497F7F10>,
                                 0)],
             '$const308.27.3': [(<numba.core.ir.Assign object at 0x000001E4498042D0>,
                                 180)],
             '$const580.19.3': [(<numba.core.ir.Assign object at 0x000001E44980EA10>,
                                 500)],
             '$const744.28.3': [(<numba.core.ir.Assign object at 0x000001E449813550>,
                                 648)],
             '$const782.0.0': [(<numba.core.ir.Assign object at 0x000001E449811290>,
                                782)],
             '$const80.15.2': [(<numba.core.ir.Assign object at 0x000001E4497F6C10>,
                                0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x000001E4497DDBD0>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x000001E448B40190>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x000001E448FFEE90>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x000001E4497FF6D0>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x000001E449805CD0>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x000001E44980DB90>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x000001E4497F6210>, 0),
                     (<numba.core.ir.Assign object at 0x000001E4497FFC10>, 180),
                     (<numba.core.ir.Assign object at 0x000001E44980E110>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x000001E4497F58D0>, 0),
                      (<numba.core.ir.Assign object at 0x000001E4497FE890>,
                       180),
                      (<numba.core.ir.Assign object at 0x000001E449807A90>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x000001E449805610>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x000001E449805010>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x000001E4497F5B90>,
                             0),
                            (<numba.core.ir.Assign object at 0x000001E4497FEF10>,
                             180),
                            (<numba.core.ir.Assign object at 0x000001E44980D450>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x000001E4497C3ED0>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000001E449507ED0>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000001E44947F010>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x000001E449810250>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x000001E44980F750>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x000001E4497C2210>, 0),
                   (<numba.core.ir.Assign object at 0x000001E4497FDE90>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x000001E4494EB210>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x000001E4494E9890>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000001E4495056D0>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x000001E448D6E750>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x000001E4497F5ED0>,
                         0),
                        (<numba.core.ir.Assign object at 0x000001E4497FF550>,
                         180),
                        (<numba.core.ir.Assign object at 0x000001E44980DA90>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x000001E4497B0AD0>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x000001E4497FD2D0>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x000001E4494EBBD0>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x000001E4497C18D0>,
                                0),
                               (<numba.core.ir.Assign object at 0x000001E4497FD7D0>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x000001E4497F6510>,
                         0),
                        (<numba.core.ir.Assign object at 0x000001E449807910>,
                         376),
                        (<numba.core.ir.Assign object at 0x000001E449812410>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x000001E4497E2950>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001E4497EDA10>, 0)]})
2025-07-26 09:46:58,016 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001E4494B4D10>
2025-07-26 09:46:58,016 - DEBUG - Fix SSA violator on var time_register
2025-07-26 09:46:58,016 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,016 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4494EB110>
2025-07-26 09:46:58,016 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,016 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,016 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,017 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,017 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,017 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,017 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,017 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,017 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,017 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,018 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,019 - DEBUG - first assign: time_register
2025-07-26 09:46:58,019 - DEBUG - replaced with: time_register = const(float, 0.0)
2025-07-26 09:46:58,019 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,019 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,020 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,020 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,020 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,020 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,020 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,020 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,020 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,020 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,021 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,021 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,021 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,021 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,021 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,021 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,021 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,022 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,022 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,022 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,022 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,022 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4494EB110>
2025-07-26 09:46:58,022 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,023 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,023 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4494EB110>
2025-07-26 09:46:58,023 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,023 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,023 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,023 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,024 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,024 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,024 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4494EB110>
2025-07-26 09:46:58,024 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,024 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,024 - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,024 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,025 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,025 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-26 09:46:58,025 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-26 09:46:58,025 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,025 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,025 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,025 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,026 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,026 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,026 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-26 09:46:58,026 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 09:46:58,026 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,027 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,027 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,027 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,027 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,027 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,027 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,027 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,028 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4494EB110>
2025-07-26 09:46:58,028 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,028 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,028 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,028 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,028 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,028 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,029 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4494EB110>
2025-07-26 09:46:58,029 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,029 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,029 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 09:46:58,029 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,029 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,029 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 09:46:58,030 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,030 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,030 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,030 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,030 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-26 09:46:58,030 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,031 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,031 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,031 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,031 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,031 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,031 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4494EB110>
2025-07-26 09:46:58,031 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 09:46:58,032 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-26 09:46:58,032 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,032 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,032 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,032 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,032 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,033 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-26 09:46:58,033 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,033 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,033 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 09:46:58,033 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,033 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,033 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,033 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,035 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,035 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,035 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,035 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,035 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4494EB110>
2025-07-26 09:46:58,036 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,036 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,036 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,036 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,036 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,036 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,036 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4494EB110>
2025-07-26 09:46:58,037 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,037 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,037 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 09:46:58,037 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,037 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,037 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 09:46:58,037 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,037 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,038 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,038 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,038 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-26 09:46:58,038 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,038 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,038 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,039 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,039 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,040 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,040 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,040 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,040 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4494EB110>
2025-07-26 09:46:58,040 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,040 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,040 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4494EB110>
2025-07-26 09:46:58,041 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,041 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,041 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,041 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E449361490>],
             180: [<numba.core.ir.Assign object at 0x000001E449811790>]})
2025-07-26 09:46:58,041 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,041 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449505490>
2025-07-26 09:46:58,041 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,042 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,042 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,042 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,042 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,042 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,042 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,042 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,043 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,043 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,043 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,043 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,043 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,043 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,044 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,044 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,044 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,044 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,044 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,044 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,044 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,045 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,045 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,045 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,045 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,045 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,045 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,045 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,046 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,046 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,046 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,046 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,046 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449505490>
2025-07-26 09:46:58,046 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,046 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,047 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449505490>
2025-07-26 09:46:58,047 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,047 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,047 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,047 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,047 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,048 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,048 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449505490>
2025-07-26 09:46:58,048 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,048 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,048 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,048 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,049 - DEBUG - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,049 - DEBUG - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,049 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-26 09:46:58,049 - DEBUG - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
2025-07-26 09:46:58,049 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n
2025-07-26 09:46:58,049 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-26 09:46:58,051 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,051 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,051 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,051 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,051 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,051 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,052 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-26 09:46:58,052 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 09:46:58,052 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,052 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,052 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,052 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,053 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,053 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,053 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,053 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,053 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449505490>
2025-07-26 09:46:58,053 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,053 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,053 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,054 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,054 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,054 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,054 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449505490>
2025-07-26 09:46:58,054 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,054 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,054 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 09:46:58,055 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,055 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,055 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 09:46:58,055 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,055 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,055 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,055 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,056 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-26 09:46:58,056 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,056 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,056 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,057 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,057 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,057 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,057 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449505490>
2025-07-26 09:46:58,057 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 09:46:58,057 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-26 09:46:58,057 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,058 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,058 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,058 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,058 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,058 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-26 09:46:58,058 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,058 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,059 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 09:46:58,059 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,059 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,059 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,059 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,059 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,060 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,060 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,060 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,060 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449505490>
2025-07-26 09:46:58,060 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,060 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,061 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,061 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,061 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,061 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,061 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449505490>
2025-07-26 09:46:58,061 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,061 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,062 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 09:46:58,062 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,062 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,062 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 09:46:58,062 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,062 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,062 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,063 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,063 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-26 09:46:58,063 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,063 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,063 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,063 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,063 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,064 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,064 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,064 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,064 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449505490>
2025-07-26 09:46:58,064 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,064 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,065 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449505490>
2025-07-26 09:46:58,065 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,065 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,065 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,065 - DEBUG - Fix SSA violator on var n
2025-07-26 09:46:58,065 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,065 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497F62D0>
2025-07-26 09:46:58,066 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,067 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,067 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,067 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,067 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,067 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,068 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,068 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,068 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,068 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,068 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,069 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,069 - DEBUG - first assign: n
2025-07-26 09:46:58,069 - DEBUG - replaced with: n = const(int, 0)
2025-07-26 09:46:58,069 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,069 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,069 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,069 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,070 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,070 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,070 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,070 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,070 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,070 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,070 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,071 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,071 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,071 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,071 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,071 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,071 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,071 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,071 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,072 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,072 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497F62D0>
2025-07-26 09:46:58,072 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,072 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,072 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497F62D0>
2025-07-26 09:46:58,072 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,073 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,073 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,073 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,073 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,073 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,073 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497F62D0>
2025-07-26 09:46:58,073 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,074 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,074 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,074 - DEBUG - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,074 - DEBUG - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,074 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-26 09:46:58,074 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-26 09:46:58,074 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,075 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,075 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,075 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,075 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,075 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,075 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-26 09:46:58,075 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 09:46:58,076 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,076 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,076 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,076 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,076 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,076 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,077 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,077 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,077 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497F62D0>
2025-07-26 09:46:58,077 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,077 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,077 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,077 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,078 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,078 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,078 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497F62D0>
2025-07-26 09:46:58,078 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,078 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,078 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 09:46:58,079 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,079 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,079 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 09:46:58,079 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,079 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,079 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,079 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,080 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-26 09:46:58,080 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,080 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,080 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,080 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,080 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,080 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,081 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497F62D0>
2025-07-26 09:46:58,081 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 09:46:58,081 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-26 09:46:58,081 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,081 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,081 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,083 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,083 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,083 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-26 09:46:58,083 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,083 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,084 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 09:46:58,084 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,084 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,084 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,084 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,084 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,084 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,085 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,085 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,085 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497F62D0>
2025-07-26 09:46:58,085 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,085 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,085 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,086 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,086 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,086 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,086 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497F62D0>
2025-07-26 09:46:58,086 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,086 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,086 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 09:46:58,087 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,087 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,087 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 09:46:58,087 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,087 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,087 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,087 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,088 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-26 09:46:58,088 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,088 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,088 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,088 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,088 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,088 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,088 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,089 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,089 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497F62D0>
2025-07-26 09:46:58,089 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,089 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,089 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497F62D0>
2025-07-26 09:46:58,090 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,090 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,090 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,090 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E449428410>],
             180: [<numba.core.ir.Assign object at 0x000001E4497F7C10>]})
2025-07-26 09:46:58,090 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,090 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497C0290>
2025-07-26 09:46:58,091 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,091 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,091 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,091 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,091 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,091 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,091 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,091 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,092 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,092 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,092 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,092 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,092 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,092 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,092 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,093 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,093 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,093 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,093 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,093 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,093 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,094 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,094 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,094 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,094 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,094 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,094 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,095 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,095 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,095 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,095 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,095 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,095 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497C0290>
2025-07-26 09:46:58,095 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,095 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,096 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497C0290>
2025-07-26 09:46:58,096 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,096 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,096 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,096 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,096 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,096 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,097 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497C0290>
2025-07-26 09:46:58,097 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,097 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,097 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,097 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,097 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-26 09:46:58,099 - DEBUG - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
2025-07-26 09:46:58,099 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 09:46:58,099 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-26 09:46:58,099 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,099 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,099 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,100 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,100 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,100 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,100 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-26 09:46:58,100 - DEBUG - find_def var='n' stmt=$binop_add310.28 = n + $const308.27.3
2025-07-26 09:46:58,100 - DEBUG - replaced with: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 09:46:58,100 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 09:46:58,101 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,101 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,101 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,101 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,101 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,101 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,101 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,102 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,102 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497C0290>
2025-07-26 09:46:58,102 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,102 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,102 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,102 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,102 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,103 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,103 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497C0290>
2025-07-26 09:46:58,103 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,103 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,103 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 09:46:58,103 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,104 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,104 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 09:46:58,104 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,104 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,104 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,104 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,104 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-26 09:46:58,104 - DEBUG - find_def var='n' stmt=$binop_sub468.27 = n - i
2025-07-26 09:46:58,105 - DEBUG - find_def_from_top label 376
2025-07-26 09:46:58,105 - DEBUG - idom 374 from label 376
2025-07-26 09:46:58,105 - DEBUG - find_def_from_bottom label 374
2025-07-26 09:46:58,105 - DEBUG - find_def_from_top label 374
2025-07-26 09:46:58,105 - DEBUG - idom 180 from label 374
2025-07-26 09:46:58,105 - DEBUG - find_def_from_bottom label 180
2025-07-26 09:46:58,105 - DEBUG - replaced with: $binop_sub468.27 = n.1 - i
2025-07-26 09:46:58,106 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,106 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,106 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,106 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,106 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,106 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,107 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497C0290>
2025-07-26 09:46:58,107 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 09:46:58,107 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-26 09:46:58,107 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,107 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,107 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,107 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,108 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,108 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-26 09:46:58,108 - DEBUG - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
2025-07-26 09:46:58,108 - DEBUG - find_def_from_top label 500
2025-07-26 09:46:58,108 - DEBUG - idom 374 from label 500
2025-07-26 09:46:58,108 - DEBUG - find_def_from_bottom label 374
2025-07-26 09:46:58,108 - DEBUG - find_def_from_top label 374
2025-07-26 09:46:58,109 - DEBUG - idom 180 from label 374
2025-07-26 09:46:58,109 - DEBUG - find_def_from_bottom label 180
2025-07-26 09:46:58,109 - DEBUG - replaced with: $binop_sub576.18 = n_orig - n.1
2025-07-26 09:46:58,109 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,109 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,109 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 09:46:58,109 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,110 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,110 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,110 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,110 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,110 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,110 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,111 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,111 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497C0290>
2025-07-26 09:46:58,111 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,111 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,111 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,111 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,111 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,112 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,112 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497C0290>
2025-07-26 09:46:58,112 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,112 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,112 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 09:46:58,112 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,112 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,113 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 09:46:58,113 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,113 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,113 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,113 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,113 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-26 09:46:58,113 - DEBUG - find_def var='n' stmt=$binop_add740.27 = n + k
2025-07-26 09:46:58,114 - DEBUG - find_def_from_top label 648
2025-07-26 09:46:58,115 - DEBUG - idom 646 from label 648
2025-07-26 09:46:58,115 - DEBUG - find_def_from_bottom label 646
2025-07-26 09:46:58,115 - DEBUG - find_def_from_top label 646
2025-07-26 09:46:58,115 - DEBUG - idom 500 from label 646
2025-07-26 09:46:58,116 - DEBUG - find_def_from_bottom label 500
2025-07-26 09:46:58,116 - DEBUG - find_def_from_top label 500
2025-07-26 09:46:58,116 - DEBUG - idom 374 from label 500
2025-07-26 09:46:58,116 - DEBUG - find_def_from_bottom label 374
2025-07-26 09:46:58,116 - DEBUG - find_def_from_top label 374
2025-07-26 09:46:58,116 - DEBUG - idom 180 from label 374
2025-07-26 09:46:58,116 - DEBUG - find_def_from_bottom label 180
2025-07-26 09:46:58,117 - DEBUG - replaced with: $binop_add740.27 = n.1 + k
2025-07-26 09:46:58,117 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,117 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,117 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,117 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,117 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,117 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,118 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,118 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,118 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497C0290>
2025-07-26 09:46:58,118 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,118 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,118 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497C0290>
2025-07-26 09:46:58,119 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,119 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,119 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,119 - DEBUG - Fix SSA violator on var frac
2025-07-26 09:46:58,119 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,120 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E449505490>
2025-07-26 09:46:58,120 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,120 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,120 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,120 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,120 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,120 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,121 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,121 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,121 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,121 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,121 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,121 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,121 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,122 - DEBUG - first assign: frac
2025-07-26 09:46:58,122 - DEBUG - replaced with: frac = const(float, 0.0)
2025-07-26 09:46:58,122 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,122 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,122 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,122 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,123 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,123 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,123 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,123 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,123 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,123 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,123 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,124 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,124 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,124 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,124 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,124 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,124 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,124 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,125 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,125 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E449505490>
2025-07-26 09:46:58,125 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,125 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,125 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E449505490>
2025-07-26 09:46:58,125 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,125 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,126 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,126 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,126 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,126 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,126 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E449505490>
2025-07-26 09:46:58,126 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,126 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,127 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,127 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,127 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 09:46:58,127 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-26 09:46:58,127 - DEBUG - replaced with: frac.1 = scale * $binop_sub234.12
2025-07-26 09:46:58,127 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,128 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,128 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,128 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,128 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,128 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,128 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 09:46:58,128 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 09:46:58,129 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,129 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,129 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,129 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,129 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,129 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,129 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,130 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,131 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E449505490>
2025-07-26 09:46:58,131 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,132 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,132 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,132 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,132 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,132 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,132 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E449505490>
2025-07-26 09:46:58,133 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,133 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,133 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 09:46:58,133 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,133 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,133 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 09:46:58,133 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,134 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,134 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,134 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,134 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 09:46:58,134 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,134 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,134 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,135 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,135 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,135 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,135 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E449505490>
2025-07-26 09:46:58,136 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 09:46:58,136 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-26 09:46:58,136 - DEBUG - replaced with: frac.2 = $binop_sub504.3
2025-07-26 09:46:58,136 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,136 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,136 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,136 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,136 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,137 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 09:46:58,137 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,137 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,137 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 09:46:58,137 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,137 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,137 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,138 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,138 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,138 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,138 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,138 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,138 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E449505490>
2025-07-26 09:46:58,138 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,139 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,139 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,139 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,139 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,139 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,139 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E449505490>
2025-07-26 09:46:58,140 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,140 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,140 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 09:46:58,140 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,140 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,140 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 09:46:58,141 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,141 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,141 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,141 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,141 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 09:46:58,141 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,141 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,142 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,142 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,142 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,142 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,142 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,142 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,142 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E449505490>
2025-07-26 09:46:58,142 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,143 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,143 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E449505490>
2025-07-26 09:46:58,143 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,143 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,143 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,143 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E4494EB510>],
             180: [<numba.core.ir.Assign object at 0x000001E4497DEE10>],
             500: [<numba.core.ir.Assign object at 0x000001E4497DF750>]})
2025-07-26 09:46:58,144 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,144 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497B19D0>
2025-07-26 09:46:58,144 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,144 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,144 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,144 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,145 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,145 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,145 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,145 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,145 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,145 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,145 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,146 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,147 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,147 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,147 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,147 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,148 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,148 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,148 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,148 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,148 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,148 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,149 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,149 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,149 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,149 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,149 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,149 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,150 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,150 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,150 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,150 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,150 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497B19D0>
2025-07-26 09:46:58,150 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,150 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,150 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497B19D0>
2025-07-26 09:46:58,151 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,151 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,151 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,151 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,151 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,151 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,151 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497B19D0>
2025-07-26 09:46:58,152 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,152 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,152 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,152 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,152 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 09:46:58,153 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 09:46:58,153 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,153 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-26 09:46:58,153 - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-07-26 09:46:58,153 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,153 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,153 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,154 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,154 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,154 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 09:46:58,154 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 09:46:58,154 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,154 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,154 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,155 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,155 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,155 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,155 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,155 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,155 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497B19D0>
2025-07-26 09:46:58,155 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,156 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,156 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,156 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,156 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,156 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,156 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497B19D0>
2025-07-26 09:46:58,157 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,157 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,157 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 09:46:58,157 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,157 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,157 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 09:46:58,158 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,158 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,158 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,158 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,158 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 09:46:58,158 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,158 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,159 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,159 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,159 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,159 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,159 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497B19D0>
2025-07-26 09:46:58,159 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 09:46:58,160 - DEBUG - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
2025-07-26 09:46:58,160 - DEBUG - find_def_from_top label 500
2025-07-26 09:46:58,160 - DEBUG - idom 374 from label 500
2025-07-26 09:46:58,160 - DEBUG - find_def_from_bottom label 374
2025-07-26 09:46:58,160 - DEBUG - find_def_from_top label 374
2025-07-26 09:46:58,160 - DEBUG - idom 180 from label 374
2025-07-26 09:46:58,161 - DEBUG - find_def_from_bottom label 180
2025-07-26 09:46:58,161 - DEBUG - replaced with: $binop_sub504.3 = scale - frac.1
2025-07-26 09:46:58,161 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 09:46:58,161 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 09:46:58,161 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-26 09:46:58,161 - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-07-26 09:46:58,161 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,162 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,163 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,163 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,163 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 09:46:58,163 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,164 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,164 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 09:46:58,164 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,164 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,164 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,164 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,165 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,165 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,165 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,165 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,165 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497B19D0>
2025-07-26 09:46:58,165 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,166 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,166 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,166 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,166 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,166 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,166 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497B19D0>
2025-07-26 09:46:58,166 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,167 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,167 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 09:46:58,167 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,167 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,167 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 09:46:58,167 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,167 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,168 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,168 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,168 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 09:46:58,168 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,168 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,168 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,169 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,169 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,169 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,169 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,169 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,169 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497B19D0>
2025-07-26 09:46:58,169 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,170 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,170 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497B19D0>
2025-07-26 09:46:58,170 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,170 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,170 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,170 - DEBUG - Fix SSA violator on var index_frac
2025-07-26 09:46:58,170 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,171 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE1D0>
2025-07-26 09:46:58,171 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,171 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,171 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,171 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,171 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,171 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,172 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,172 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,172 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,172 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,172 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,172 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,173 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,173 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,173 - DEBUG - first assign: index_frac
2025-07-26 09:46:58,173 - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-07-26 09:46:58,173 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,173 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,173 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,174 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,174 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,174 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,174 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,174 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,174 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,174 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,175 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,175 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,175 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,175 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,175 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,175 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,175 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,176 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,176 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE1D0>
2025-07-26 09:46:58,176 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,176 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,176 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE1D0>
2025-07-26 09:46:58,176 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,176 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,177 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,177 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,177 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,177 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,177 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE1D0>
2025-07-26 09:46:58,177 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,178 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,179 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,179 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,179 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 09:46:58,179 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 09:46:58,179 - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-07-26 09:46:58,180 - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-07-26 09:46:58,180 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,180 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,180 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,180 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,180 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,180 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 09:46:58,181 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 09:46:58,181 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,181 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,181 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,181 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,181 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,182 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,182 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,182 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,182 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE1D0>
2025-07-26 09:46:58,182 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,182 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,182 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,183 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,183 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,183 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,183 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE1D0>
2025-07-26 09:46:58,183 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,183 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,183 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 09:46:58,184 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,184 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,184 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 09:46:58,184 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,184 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,184 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,184 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,185 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 09:46:58,185 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,185 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,185 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,185 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,186 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,186 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,186 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE1D0>
2025-07-26 09:46:58,186 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 09:46:58,186 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 09:46:58,186 - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-07-26 09:46:58,187 - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-07-26 09:46:58,187 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,187 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,187 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,187 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,187 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 09:46:58,187 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,187 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,188 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 09:46:58,188 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,188 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,188 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,188 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,188 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,188 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,189 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,189 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,189 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE1D0>
2025-07-26 09:46:58,189 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,189 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,190 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,190 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,190 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,190 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,190 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE1D0>
2025-07-26 09:46:58,190 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,190 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,190 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 09:46:58,191 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,191 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,191 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 09:46:58,191 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,191 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,191 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,191 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,192 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 09:46:58,192 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,192 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,192 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,192 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,192 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,192 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,193 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,193 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,193 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE1D0>
2025-07-26 09:46:58,193 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,193 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,193 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE1D0>
2025-07-26 09:46:58,194 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,195 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,195 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,195 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E4497C0290>],
             180: [<numba.core.ir.Assign object at 0x000001E4497F5310>],
             500: [<numba.core.ir.Assign object at 0x000001E4497E18D0>]})
2025-07-26 09:46:58,195 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,196 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449096A90>
2025-07-26 09:46:58,196 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,196 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,196 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,196 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,196 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,196 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,196 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,197 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,197 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,197 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,197 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,197 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,197 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,198 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,198 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,198 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,198 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,198 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,198 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,198 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,199 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,199 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,199 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,199 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,199 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,199 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,200 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,200 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,200 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,200 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,200 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,200 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,200 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449096A90>
2025-07-26 09:46:58,201 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,201 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,201 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449096A90>
2025-07-26 09:46:58,201 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,201 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,201 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,201 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,202 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,202 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,202 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449096A90>
2025-07-26 09:46:58,202 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,202 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,202 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,202 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,203 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 09:46:58,203 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 09:46:58,203 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 09:46:58,203 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,203 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,203 - DEBUG - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,204 - DEBUG - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,204 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,204 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-26 09:46:58,204 - DEBUG - replaced with: eta = index_frac.1 - offset
2025-07-26 09:46:58,204 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,204 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,204 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 09:46:58,204 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 09:46:58,205 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,205 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,205 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,205 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,205 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,205 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,205 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,206 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,206 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449096A90>
2025-07-26 09:46:58,206 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,206 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,206 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,206 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,207 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,207 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,207 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449096A90>
2025-07-26 09:46:58,207 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,207 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,207 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 09:46:58,207 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,208 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,208 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 09:46:58,208 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,208 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,208 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,208 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,208 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 09:46:58,209 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,209 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,209 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,209 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,209 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,209 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,209 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449096A90>
2025-07-26 09:46:58,210 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 09:46:58,211 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 09:46:58,211 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 09:46:58,211 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,211 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,212 - DEBUG - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,212 - DEBUG - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,212 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 09:46:58,212 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-26 09:46:58,212 - DEBUG - replaced with: eta = index_frac.2 - offset
2025-07-26 09:46:58,212 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,212 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 09:46:58,212 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,213 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,213 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 09:46:58,213 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,213 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,213 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,213 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,213 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,214 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,214 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,214 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,214 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449096A90>
2025-07-26 09:46:58,214 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,215 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,215 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,215 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,215 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,215 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,215 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449096A90>
2025-07-26 09:46:58,215 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,216 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,216 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 09:46:58,216 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,216 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,216 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 09:46:58,216 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,216 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,217 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,217 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,217 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 09:46:58,217 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,217 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,217 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,217 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,217 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,218 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,218 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,218 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,218 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449096A90>
2025-07-26 09:46:58,218 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,219 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,219 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E449096A90>
2025-07-26 09:46:58,219 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,219 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,219 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,219 - DEBUG - Fix SSA violator on var offset
2025-07-26 09:46:58,219 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,220 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DF090>
2025-07-26 09:46:58,220 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,220 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,220 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,220 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,220 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,220 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,221 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,221 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,221 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,221 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,221 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,221 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,221 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,222 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,222 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,222 - DEBUG - first assign: offset
2025-07-26 09:46:58,222 - DEBUG - replaced with: offset = const(int, 0)
2025-07-26 09:46:58,222 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,222 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,222 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,223 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,223 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,223 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,223 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,223 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,223 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,224 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,224 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,224 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,224 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,224 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,224 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,224 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,225 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,225 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DF090>
2025-07-26 09:46:58,225 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,225 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,225 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DF090>
2025-07-26 09:46:58,225 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,225 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,225 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,227 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,227 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,227 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,227 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DF090>
2025-07-26 09:46:58,227 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,228 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,228 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,228 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,228 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 09:46:58,228 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 09:46:58,228 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 09:46:58,229 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,229 - DEBUG - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,229 - DEBUG - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,229 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-26 09:46:58,229 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,229 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,229 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 09:46:58,230 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 09:46:58,230 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,230 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,230 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,230 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,230 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,231 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,231 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,231 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,231 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DF090>
2025-07-26 09:46:58,231 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,231 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,232 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,232 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,232 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,232 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,232 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DF090>
2025-07-26 09:46:58,232 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,232 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,233 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 09:46:58,233 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,233 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,233 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 09:46:58,233 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,233 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,233 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,234 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,234 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 09:46:58,234 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,234 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,234 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,234 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,234 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,235 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,235 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DF090>
2025-07-26 09:46:58,235 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 09:46:58,235 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 09:46:58,235 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 09:46:58,235 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,236 - DEBUG - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,236 - DEBUG - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,236 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-26 09:46:58,236 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,236 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 09:46:58,236 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,236 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,237 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 09:46:58,237 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,237 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,237 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,237 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,237 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,237 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,238 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,238 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,238 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DF090>
2025-07-26 09:46:58,238 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,238 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,238 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,238 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,239 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,239 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,239 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DF090>
2025-07-26 09:46:58,239 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,239 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,239 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 09:46:58,240 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,240 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,240 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 09:46:58,240 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,240 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,240 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,240 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,241 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 09:46:58,241 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,241 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,241 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,241 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,241 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,241 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,242 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,243 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,243 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DF090>
2025-07-26 09:46:58,243 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,243 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,244 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DF090>
2025-07-26 09:46:58,244 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,244 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,244 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,244 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E449096A90>],
             180: [<numba.core.ir.Assign object at 0x000001E4497E2710>],
             500: [<numba.core.ir.Assign object at 0x000001E4497E3A90>]})
2025-07-26 09:46:58,244 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,245 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4494EB410>
2025-07-26 09:46:58,245 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,245 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,245 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,245 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,245 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,245 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,246 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,246 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,246 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,246 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,246 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,246 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,246 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,246 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,247 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,247 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,247 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,247 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,247 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,247 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,248 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,248 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,248 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,248 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,248 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,248 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,249 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,249 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,249 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,249 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,249 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,249 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,249 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4494EB410>
2025-07-26 09:46:58,250 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,250 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,250 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4494EB410>
2025-07-26 09:46:58,250 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,250 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,250 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,250 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,251 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,251 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,251 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4494EB410>
2025-07-26 09:46:58,251 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,251 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,251 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,251 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,252 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 09:46:58,252 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 09:46:58,252 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 09:46:58,252 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,252 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,253 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-26 09:46:58,253 - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-07-26 09:46:58,253 - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-07-26 09:46:58,253 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,253 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,253 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 09:46:58,253 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 09:46:58,254 - DEBUG - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
2025-07-26 09:46:58,254 - DEBUG - replaced with: $binop_sub318.31 = nwin - offset.1
2025-07-26 09:46:58,254 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,254 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,254 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,254 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,254 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,255 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,255 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,255 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,255 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4494EB410>
2025-07-26 09:46:58,255 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,255 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,255 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,256 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,256 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,256 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,256 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4494EB410>
2025-07-26 09:46:58,257 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,257 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,257 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 09:46:58,257 - DEBUG - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
2025-07-26 09:46:58,257 - DEBUG - find_def_from_top label 376
2025-07-26 09:46:58,257 - DEBUG - idom 374 from label 376
2025-07-26 09:46:58,259 - DEBUG - find_def_from_bottom label 374
2025-07-26 09:46:58,259 - DEBUG - find_def_from_top label 374
2025-07-26 09:46:58,259 - DEBUG - idom 180 from label 374
2025-07-26 09:46:58,259 - DEBUG - find_def_from_bottom label 180
2025-07-26 09:46:58,259 - DEBUG - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-26 09:46:58,260 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,260 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,260 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 09:46:58,260 - DEBUG - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
2025-07-26 09:46:58,260 - DEBUG - find_def_from_top label 376
2025-07-26 09:46:58,261 - DEBUG - idom 374 from label 376
2025-07-26 09:46:58,261 - DEBUG - find_def_from_bottom label 374
2025-07-26 09:46:58,261 - DEBUG - find_def_from_top label 374
2025-07-26 09:46:58,261 - DEBUG - idom 180 from label 374
2025-07-26 09:46:58,261 - DEBUG - find_def_from_bottom label 180
2025-07-26 09:46:58,261 - DEBUG - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-26 09:46:58,262 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,262 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,262 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,262 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,262 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 09:46:58,262 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,262 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,262 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,263 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,263 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,263 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,263 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4494EB410>
2025-07-26 09:46:58,263 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 09:46:58,263 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 09:46:58,263 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 09:46:58,264 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,264 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,264 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-26 09:46:58,264 - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-07-26 09:46:58,264 - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-07-26 09:46:58,264 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,265 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 09:46:58,265 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,265 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,265 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 09:46:58,265 - DEBUG - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
2025-07-26 09:46:58,265 - DEBUG - replaced with: $binop_sub590.23 = nwin - offset.2
2025-07-26 09:46:58,265 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,266 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,266 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,266 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,266 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,266 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,266 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,266 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,267 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4494EB410>
2025-07-26 09:46:58,267 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,267 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,267 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,267 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,267 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,267 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,268 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4494EB410>
2025-07-26 09:46:58,268 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,268 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,268 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 09:46:58,268 - DEBUG - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
2025-07-26 09:46:58,268 - DEBUG - find_def_from_top label 648
2025-07-26 09:46:58,268 - DEBUG - idom 646 from label 648
2025-07-26 09:46:58,269 - DEBUG - find_def_from_bottom label 646
2025-07-26 09:46:58,269 - DEBUG - find_def_from_top label 646
2025-07-26 09:46:58,269 - DEBUG - idom 500 from label 646
2025-07-26 09:46:58,269 - DEBUG - find_def_from_bottom label 500
2025-07-26 09:46:58,269 - DEBUG - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-26 09:46:58,269 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,269 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,270 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 09:46:58,270 - DEBUG - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
2025-07-26 09:46:58,270 - DEBUG - find_def_from_top label 648
2025-07-26 09:46:58,270 - DEBUG - idom 646 from label 648
2025-07-26 09:46:58,270 - DEBUG - find_def_from_bottom label 646
2025-07-26 09:46:58,270 - DEBUG - find_def_from_top label 646
2025-07-26 09:46:58,270 - DEBUG - idom 500 from label 646
2025-07-26 09:46:58,271 - DEBUG - find_def_from_bottom label 500
2025-07-26 09:46:58,271 - DEBUG - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-26 09:46:58,271 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,271 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,271 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,271 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,272 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 09:46:58,272 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,272 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,272 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,272 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,272 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,272 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,273 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,273 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,273 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4494EB410>
2025-07-26 09:46:58,273 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,273 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,273 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4494EB410>
2025-07-26 09:46:58,273 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,275 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,275 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,275 - DEBUG - Fix SSA violator on var eta
2025-07-26 09:46:58,275 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,276 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE350>
2025-07-26 09:46:58,276 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,276 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,276 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,276 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,276 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,277 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,277 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,277 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,277 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,277 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,277 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,277 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,278 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,278 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,278 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,278 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,278 - DEBUG - first assign: eta
2025-07-26 09:46:58,278 - DEBUG - replaced with: eta = const(float, 0.0)
2025-07-26 09:46:58,279 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,279 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,279 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,279 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,279 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,279 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,279 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,280 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,280 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,280 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,280 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,280 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,280 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,280 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,281 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,281 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,281 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE350>
2025-07-26 09:46:58,281 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,281 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,281 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE350>
2025-07-26 09:46:58,282 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,282 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,282 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,282 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,282 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,282 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,282 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE350>
2025-07-26 09:46:58,283 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,283 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,283 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,283 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,283 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 09:46:58,283 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 09:46:58,284 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 09:46:58,284 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,284 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,284 - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-07-26 09:46:58,284 - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-07-26 09:46:58,284 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,284 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,284 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 09:46:58,285 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-26 09:46:58,285 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,285 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,285 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,285 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,286 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,286 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,286 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,286 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,286 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE350>
2025-07-26 09:46:58,286 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,286 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,287 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,287 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,287 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,287 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,287 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE350>
2025-07-26 09:46:58,287 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,287 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,288 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-26 09:46:58,288 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,288 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,288 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-26 09:46:58,288 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,288 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,288 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,289 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,289 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 09:46:58,289 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,289 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,289 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,290 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,290 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,291 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,291 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE350>
2025-07-26 09:46:58,291 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 09:46:58,291 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 09:46:58,292 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 09:46:58,292 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,292 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,292 - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-07-26 09:46:58,292 - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-07-26 09:46:58,292 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,292 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 09:46:58,293 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,293 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,293 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-26 09:46:58,293 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,293 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,293 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,294 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,294 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,294 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,294 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,294 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,294 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE350>
2025-07-26 09:46:58,294 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,295 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,295 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,295 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,295 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,295 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,295 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE350>
2025-07-26 09:46:58,295 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,296 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,296 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-26 09:46:58,296 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,296 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,296 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-26 09:46:58,296 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,296 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,297 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,297 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,297 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 09:46:58,297 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,297 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,297 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,298 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,298 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,298 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,298 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,298 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,298 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE350>
2025-07-26 09:46:58,298 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,299 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,299 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DE350>
2025-07-26 09:46:58,299 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,299 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,299 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,299 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E4497DFED0>],
             180: [<numba.core.ir.Assign object at 0x000001E4497E28D0>],
             500: [<numba.core.ir.Assign object at 0x000001E4497E0CD0>]})
2025-07-26 09:46:58,300 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,300 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF9D0>
2025-07-26 09:46:58,300 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,300 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,300 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,300 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,300 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,301 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,301 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,301 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,301 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,301 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,301 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,301 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,302 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,302 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,302 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,302 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,302 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,302 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,303 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,303 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,303 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,303 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,303 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,303 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,303 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,304 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,304 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,304 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,304 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,304 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,304 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,305 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,305 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF9D0>
2025-07-26 09:46:58,305 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,305 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,305 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF9D0>
2025-07-26 09:46:58,305 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,305 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,305 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,306 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,307 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,307 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,307 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF9D0>
2025-07-26 09:46:58,308 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,308 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,308 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,308 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,308 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 09:46:58,308 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 09:46:58,308 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 09:46:58,309 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,309 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,309 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-26 09:46:58,309 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,309 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,309 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 09:46:58,309 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-26 09:46:58,310 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,310 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,310 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,310 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,310 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,310 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,311 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,311 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,311 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF9D0>
2025-07-26 09:46:58,311 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,311 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,311 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,311 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,312 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,312 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,312 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF9D0>
2025-07-26 09:46:58,312 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,312 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,312 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-26 09:46:58,313 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,313 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,313 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-26 09:46:58,313 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,313 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,313 - DEBUG - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 09:46:58,313 - DEBUG - find_def_from_top label 376
2025-07-26 09:46:58,314 - DEBUG - idom 374 from label 376
2025-07-26 09:46:58,314 - DEBUG - find_def_from_bottom label 374
2025-07-26 09:46:58,314 - DEBUG - find_def_from_top label 374
2025-07-26 09:46:58,314 - DEBUG - idom 180 from label 374
2025-07-26 09:46:58,314 - DEBUG - find_def_from_bottom label 180
2025-07-26 09:46:58,314 - DEBUG - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-26 09:46:58,314 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,315 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,315 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 09:46:58,315 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,315 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,315 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,315 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,316 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,316 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,316 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF9D0>
2025-07-26 09:46:58,316 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 09:46:58,316 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 09:46:58,316 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 09:46:58,316 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,317 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,317 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-26 09:46:58,317 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,317 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 09:46:58,317 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,317 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,317 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-26 09:46:58,318 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,318 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,318 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,318 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,318 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,318 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,319 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,319 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,319 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF9D0>
2025-07-26 09:46:58,319 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,319 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,319 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,320 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,320 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,320 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,320 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF9D0>
2025-07-26 09:46:58,320 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,320 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,320 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-26 09:46:58,321 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,321 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,321 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-26 09:46:58,321 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,321 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,321 - DEBUG - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 09:46:58,321 - DEBUG - find_def_from_top label 648
2025-07-26 09:46:58,321 - DEBUG - idom 646 from label 648
2025-07-26 09:46:58,322 - DEBUG - find_def_from_bottom label 646
2025-07-26 09:46:58,323 - DEBUG - find_def_from_top label 646
2025-07-26 09:46:58,323 - DEBUG - idom 500 from label 646
2025-07-26 09:46:58,323 - DEBUG - find_def_from_bottom label 500
2025-07-26 09:46:58,323 - DEBUG - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-26 09:46:58,323 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,324 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,324 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 09:46:58,324 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,324 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,324 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,324 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,324 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,325 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,325 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,325 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,325 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF9D0>
2025-07-26 09:46:58,325 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,325 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,325 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF9D0>
2025-07-26 09:46:58,326 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,326 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,326 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,326 - DEBUG - Fix SSA violator on var weight
2025-07-26 09:46:58,326 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,326 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DFA50>
2025-07-26 09:46:58,326 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,327 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,327 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,327 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,327 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,327 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,327 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,328 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,328 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,328 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,328 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,328 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,328 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,328 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,329 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,329 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,329 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,329 - DEBUG - first assign: weight
2025-07-26 09:46:58,329 - DEBUG - replaced with: weight = const(float, 0.0)
2025-07-26 09:46:58,329 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,329 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,330 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,330 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,330 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,330 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,330 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,330 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,330 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,331 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,331 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,331 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,331 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,331 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,331 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,332 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DFA50>
2025-07-26 09:46:58,332 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,332 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,332 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DFA50>
2025-07-26 09:46:58,332 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,332 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,333 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,333 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,333 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,333 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,333 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DFA50>
2025-07-26 09:46:58,333 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,333 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,334 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,334 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,334 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 09:46:58,334 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 09:46:58,334 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 09:46:58,334 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,334 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,335 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-26 09:46:58,335 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,335 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,335 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 09:46:58,335 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-26 09:46:58,335 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,336 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,336 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,336 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,336 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,336 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,336 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,336 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,337 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DFA50>
2025-07-26 09:46:58,337 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,337 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,337 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,337 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,337 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,337 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,338 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DFA50>
2025-07-26 09:46:58,339 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,339 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,339 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-26 09:46:58,340 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,340 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,340 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-26 09:46:58,340 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,340 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-26 09:46:58,340 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,341 - DEBUG - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,341 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,341 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 09:46:58,341 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,341 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,341 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,341 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,342 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,342 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,342 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DFA50>
2025-07-26 09:46:58,342 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 09:46:58,342 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 09:46:58,342 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 09:46:58,342 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,342 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,343 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-26 09:46:58,343 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,343 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 09:46:58,343 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,343 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,344 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-26 09:46:58,344 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,344 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,344 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,344 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,344 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,344 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,344 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,345 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,345 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DFA50>
2025-07-26 09:46:58,345 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,345 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,345 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,345 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,345 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,346 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,346 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DFA50>
2025-07-26 09:46:58,346 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,346 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,346 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-26 09:46:58,346 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,346 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,347 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-26 09:46:58,347 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,347 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-26 09:46:58,347 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,347 - DEBUG - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,347 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,348 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 09:46:58,348 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,348 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,348 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,348 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,348 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,349 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,349 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,349 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,349 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DFA50>
2025-07-26 09:46:58,349 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,349 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,349 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001E4497DFA50>
2025-07-26 09:46:58,350 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,350 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,350 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,350 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001E4497E1610>],
             376: [<numba.core.ir.Assign object at 0x000001E4497E1C90>],
             648: [<numba.core.ir.Assign object at 0x000001E4497E22D0>]})
2025-07-26 09:46:58,350 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 09:46:58,350 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF850>
2025-07-26 09:46:58,350 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 09:46:58,351 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 09:46:58,351 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 09:46:58,351 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 09:46:58,351 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 09:46:58,351 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 09:46:58,351 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 09:46:58,351 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 09:46:58,352 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 09:46:58,352 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,352 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 09:46:58,352 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 09:46:58,352 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 09:46:58,353 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 09:46:58,353 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 09:46:58,353 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 09:46:58,353 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 09:46:58,353 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 09:46:58,353 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 09:46:58,353 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,353 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 09:46:58,354 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 09:46:58,355 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,355 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 09:46:58,355 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 09:46:58,355 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 09:46:58,355 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 09:46:58,356 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,356 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 09:46:58,356 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 09:46:58,356 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,357 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 09:46:58,357 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF850>
2025-07-26 09:46:58,357 - DEBUG - on stmt: jump 178
2025-07-26 09:46:58,357 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 09:46:58,357 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF850>
2025-07-26 09:46:58,357 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 09:46:58,358 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 09:46:58,358 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 09:46:58,358 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 09:46:58,358 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 09:46:58,358 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 09:46:58,358 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF850>
2025-07-26 09:46:58,358 - DEBUG - on stmt: t = $phi180.1
2025-07-26 09:46:58,359 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,359 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 09:46:58,359 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,359 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 09:46:58,359 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 09:46:58,359 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 09:46:58,359 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 09:46:58,360 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,360 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-26 09:46:58,360 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 09:46:58,360 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 09:46:58,360 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 09:46:58,361 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-26 09:46:58,361 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 09:46:58,361 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,361 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 09:46:58,361 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,361 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 09:46:58,361 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 09:46:58,362 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,362 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 09:46:58,362 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF850>
2025-07-26 09:46:58,362 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 09:46:58,362 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 09:46:58,362 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 09:46:58,362 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 09:46:58,363 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 09:46:58,363 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 09:46:58,363 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF850>
2025-07-26 09:46:58,363 - DEBUG - on stmt: i = $phi376.2
2025-07-26 09:46:58,363 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 09:46:58,363 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-26 09:46:58,363 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,363 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 09:46:58,364 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-26 09:46:58,364 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,364 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-26 09:46:58,364 - DEBUG - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 09:46:58,364 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,365 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 09:46:58,365 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 09:46:58,365 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,365 - DEBUG - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 09:46:58,365 - DEBUG - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
2025-07-26 09:46:58,365 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,365 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 09:46:58,366 - DEBUG - on stmt: jump 374
2025-07-26 09:46:58,366 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 09:46:58,366 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF850>
2025-07-26 09:46:58,366 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 09:46:58,366 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 09:46:58,366 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 09:46:58,366 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 09:46:58,367 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,367 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-26 09:46:58,367 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 09:46:58,367 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 09:46:58,367 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 09:46:58,367 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 09:46:58,367 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-26 09:46:58,368 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 09:46:58,368 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,368 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 09:46:58,368 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 09:46:58,368 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 09:46:58,368 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 09:46:58,369 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,369 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 09:46:58,369 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF850>
2025-07-26 09:46:58,369 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 09:46:58,369 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 09:46:58,369 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 09:46:58,369 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 09:46:58,371 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 09:46:58,371 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 09:46:58,371 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF850>
2025-07-26 09:46:58,371 - DEBUG - on stmt: k = $phi648.2
2025-07-26 09:46:58,371 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 09:46:58,371 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-26 09:46:58,372 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 09:46:58,372 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 09:46:58,372 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-26 09:46:58,372 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 09:46:58,372 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-26 09:46:58,372 - DEBUG - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 09:46:58,373 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 09:46:58,373 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 09:46:58,373 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 09:46:58,373 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 09:46:58,373 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 09:46:58,373 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,373 - DEBUG - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 09:46:58,374 - DEBUG - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
2025-07-26 09:46:58,374 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 09:46:58,374 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 09:46:58,374 - DEBUG - on stmt: jump 646
2025-07-26 09:46:58,374 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 09:46:58,374 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF850>
2025-07-26 09:46:58,374 - DEBUG - on stmt: jump 176
2025-07-26 09:46:58,375 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 09:46:58,375 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001E4497DF850>
2025-07-26 09:46:58,375 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 09:46:58,375 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 09:46:58,375 - DEBUG - on stmt: return $784return_value.1
2025-07-26 09:46:58,758 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-07-26 09:46:58,758 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-26 09:46:58,760 - DEBUG - stack: []
2025-07-26 09:46:58,760 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-26 09:46:58,760 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-07-26 09:46:58,761 - DEBUG - stack []
2025-07-26 09:46:58,761 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-07-26 09:46:58,761 - DEBUG - stack []
2025-07-26 09:46:58,761 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-26 09:46:58,761 - DEBUG - stack []
2025-07-26 09:46:58,762 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-07-26 09:46:58,762 - DEBUG - stack ['$x4.0']
2025-07-26 09:46:58,762 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-26 09:46:58,762 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-07-26 09:46:58,762 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-26 09:46:58,762 - DEBUG - stack ['$8binary_subscr.2']
2025-07-26 09:46:58,762 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-07-26 09:46:58,763 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-07-26 09:46:58,763 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-26 09:46:58,763 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-07-26 09:46:58,763 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-07-26 09:46:58,763 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-07-26 09:46:58,763 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-07-26 09:46:58,763 - DEBUG - stack ['$binop_add32.6']
2025-07-26 09:46:58,764 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-26 09:46:58,764 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-07-26 09:46:58,764 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-07-26 09:46:58,764 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-07-26 09:46:58,764 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-26 09:46:58,765 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-07-26 09:46:58,765 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-07-26 09:46:58,765 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-07-26 09:46:58,765 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-07-26 09:46:58,765 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-07-26 09:46:58,765 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-07-26 09:46:58,766 - DEBUG - stack ['$binop_sub56.12']
2025-07-26 09:46:58,766 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-26 09:46:58,766 - DEBUG - stack []
2025-07-26 09:46:58,766 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-07-26 09:46:58,766 - DEBUG - stack ['$x62.13']
2025-07-26 09:46:58,766 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-26 09:46:58,766 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-07-26 09:46:58,767 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-26 09:46:58,767 - DEBUG - stack ['$66binary_subscr.15']
2025-07-26 09:46:58,767 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-07-26 09:46:58,767 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-07-26 09:46:58,767 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-26 09:46:58,767 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-07-26 09:46:58,767 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-07-26 09:46:58,768 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-07-26 09:46:58,768 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-07-26 09:46:58,768 - DEBUG - stack ['$binop_sub90.19']
2025-07-26 09:46:58,768 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-07-26 09:46:58,768 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-07-26 09:46:58,768 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-07-26 09:46:58,769 - DEBUG - stack ['$binop_truediv96.21']
2025-07-26 09:46:58,770 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-26 09:46:58,770 - DEBUG - stack []
2025-07-26 09:46:58,770 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-26 09:46:58,771 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-07-26 09:46:58,771 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-07-26 09:46:58,771 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-07-26 09:46:58,771 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-07-26 09:46:58,771 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-26 09:46:58,771 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-07-26 09:46:58,771 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-26 09:46:58,772 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-26 09:46:58,772 - DEBUG - stack ['$130call.26']
2025-07-26 09:46:58,772 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-26 09:46:58,772 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-07-26 09:46:58,772 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-07-26 09:46:58,772 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-07-26 09:46:58,773 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-07-26 09:46:58,773 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-26 09:46:58,773 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-07-26 09:46:58,773 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-26 09:46:58,773 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-07-26 09:46:58,773 - DEBUG - stack ['$130call.26', '$168call.31']
2025-07-26 09:46:58,774 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-07-26 09:46:58,774 - DEBUG - stack ['$178compare_op.32']
2025-07-26 09:46:58,774 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-26 09:46:58,774 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-26 09:46:58,774 - DEBUG - stack: []
2025-07-26 09:46:58,774 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-07-26 09:46:58,774 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-07-26 09:46:58,775 - DEBUG - stack []
2025-07-26 09:46:58,775 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-07-26 09:46:58,775 - DEBUG - stack ['$const186.0.4']
2025-07-26 09:46:58,775 - DEBUG - end state. edges=[]
2025-07-26 09:46:58,775 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-07-26 09:46:58,775 - DEBUG - stack: []
2025-07-26 09:46:58,775 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-26 09:46:58,776 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-07-26 09:46:58,776 - DEBUG - stack []
2025-07-26 09:46:58,776 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-07-26 09:46:58,776 - DEBUG - stack ['$b190.0']
2025-07-26 09:46:58,776 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-07-26 09:46:58,776 - DEBUG - stack ['$192unary_negative.1']
2025-07-26 09:46:58,776 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-07-26 09:46:58,777 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-07-26 09:46:58,777 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-07-26 09:46:58,777 - DEBUG - stack ['$binop_truediv196.3']
2025-07-26 09:46:58,777 - DEBUG - end state. edges=[]
2025-07-26 09:46:58,777 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-26 09:46:58,777 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-26 09:46:58,778 - DEBUG - defmap: {}
2025-07-26 09:46:58,778 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-26 09:46:58,778 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-26 09:46:58,778 - DEBUG - keep phismap: {}
2025-07-26 09:46:58,778 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-26 09:46:58,779 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-26 09:46:58,779 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-07-26 09:46:58,779 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-26 09:46:58,779 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-26 09:46:58,780 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-07-26 09:46:59,861 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 09:47:03,912 - ERROR - Fehler bei der Verarbeitung von data\01. 4AM in Bangkok 130819.mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 09:47:03,912 - INFO - Verarbeite Datei: data\01. Ackan (Feat. Dillon Cooper).mp3
2025-07-26 09:47:03,913 - INFO - Beginne Verarbeitung der Datei: data\01. Ackan (Feat. Dillon Cooper).mp3
2025-07-26 09:47:05,141 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 09:47:09,211 - ERROR - Fehler bei der Verarbeitung von data\01. Ackan (Feat. Dillon Cooper).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 09:47:09,212 - INFO - Verarbeite Datei: data\01. Aggro Berlin Label Nr.1 - Arschgefickter Hurensohn (Skit).mp3
2025-07-26 09:47:09,212 - INFO - Beginne Verarbeitung der Datei: data\01. Aggro Berlin Label Nr.1 - Arschgefickter Hurensohn (Skit).mp3
2025-07-26 09:47:10,439 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 09:47:14,511 - ERROR - Fehler bei der Verarbeitung von data\01. Aggro Berlin Label Nr.1 - Arschgefickter Hurensohn (Skit).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 09:47:14,512 - INFO - Verarbeite Datei: data\01. Alles Verloren (Album Version).mp3
2025-07-26 09:47:14,512 - INFO - Beginne Verarbeitung der Datei: data\01. Alles Verloren (Album Version).mp3
2025-07-26 09:47:15,739 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 09:47:19,802 - ERROR - Fehler bei der Verarbeitung von data\01. Alles Verloren (Album Version).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 09:47:19,803 - INFO - Verarbeite Datei: data\01. Alles Wird Gut (Album Version).mp3
2025-07-26 09:47:19,803 - INFO - Beginne Verarbeitung der Datei: data\01. Alles Wird Gut (Album Version).mp3
2025-07-26 09:47:21,027 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 09:47:25,103 - ERROR - Fehler bei der Verarbeitung von data\01. Alles Wird Gut (Album Version).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 09:47:25,104 - INFO - Verarbeite Datei: data\01. Apres Ski.mp3
2025-07-26 09:47:25,104 - INFO - Beginne Verarbeitung der Datei: data\01. Apres Ski.mp3
2025-07-26 09:47:26,330 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 09:47:30,407 - ERROR - Fehler bei der Verarbeitung von data\01. Apres Ski.mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 09:47:30,408 - INFO - Verarbeite Datei: data\01. Arschficksong (Original).mp3
2025-07-26 09:47:30,408 - INFO - Beginne Verarbeitung der Datei: data\01. Arschficksong (Original).mp3
2025-07-26 09:47:31,645 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 09:47:35,695 - ERROR - Fehler bei der Verarbeitung von data\01. Arschficksong (Original).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 09:47:35,697 - INFO - Verarbeite Datei: data\01. Astronaut (Feat. Andreas Bourani).mp3
2025-07-26 09:47:35,697 - INFO - Beginne Verarbeitung der Datei: data\01. Astronaut (Feat. Andreas Bourani).mp3
2025-07-26 09:47:36,926 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 09:47:41,014 - ERROR - Fehler bei der Verarbeitung von data\01. Astronaut (Feat. Andreas Bourani).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 09:47:41,015 - INFO - Verarbeite Datei: data\01. Augen Auf (Original).mp3
2025-07-26 09:47:41,015 - INFO - Beginne Verarbeitung der Datei: data\01. Augen Auf (Original).mp3
2025-07-26 09:47:42,235 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 09:47:46,291 - ERROR - Fehler bei der Verarbeitung von data\01. Augen Auf (Original).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 09:47:46,293 - INFO - Verarbeite Datei: data\01. Augenblick (Album Version).mp3
2025-07-26 09:47:46,293 - INFO - Beginne Verarbeitung der Datei: data\01. Augenblick (Album Version).mp3
2025-07-26 09:47:47,522 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 09:48:17,879 - ERROR - Fehler bei der Verarbeitung von data\01. Augenblick (Album Version).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 09:48:17,880 - INFO - Verarbeite Datei: data\01. Aura.mp3
2025-07-26 09:48:17,880 - INFO - Beginne Verarbeitung der Datei: data\01. Aura.mp3
2025-07-26 09:48:19,106 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 09:48:23,171 - ERROR - Fehler bei der Verarbeitung von data\01. Aura.mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...rbindung verweigerte'))", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 09:48:23,171 - INFO - Verarbeite Datei: data\01. Bad Vibe.mp3
2025-07-26 09:48:23,171 - INFO - Beginne Verarbeitung der Datei: data\01. Bad Vibe.mp3
2025-07-26 09:48:24,452 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 09:50:29,845 - DEBUG - Starte die Anwendung...
2025-07-26 09:50:29,845 - INFO - Verarbeite MP3-Datei...
2025-07-26 09:50:29,845 - ERROR - Fehler bei der Verarbeitung!
2025-07-26 09:50:29,853 - DEBUG - Using proactor: IocpProactor
2025-07-26 09:50:29,861 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-26 09:50:30,010 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-26 09:50:30,079 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-26 09:50:30,172 - DEBUG - Using proactor: IocpProactor
2025-07-26 09:50:30,262 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001FA61ED19D0>
2025-07-26 09:50:30,262 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001FA61A808C0> server_hostname='api.gradio.app' timeout=3
2025-07-26 09:50:30,345 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=None socket_options=None
2025-07-26 09:50:30,346 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001FA61DAAB90>
2025-07-26 09:50:30,347 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-26 09:50:30,349 - DEBUG - send_request_headers.complete
2025-07-26 09:50:30,349 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-26 09:50:30,349 - DEBUG - send_request_body.complete
2025-07-26 09:50:30,349 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-26 09:50:30,350 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Sat, 26 Jul 2025 07:50:30 GMT'), (b'server', b'uvicorn'), (b'content-length', b'4'), (b'content-type', b'application/json')])
2025-07-26 09:50:30,350 - INFO - HTTP Request: GET http://127.0.0.1:7860/gradio_api/startup-events "HTTP/1.1 200 OK"
2025-07-26 09:50:30,351 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-26 09:50:30,351 - DEBUG - receive_response_body.complete
2025-07-26 09:50:30,351 - DEBUG - response_closed.started
2025-07-26 09:50:30,352 - DEBUG - response_closed.complete
2025-07-26 09:50:30,352 - DEBUG - close.started
2025-07-26 09:50:30,352 - DEBUG - close.complete
2025-07-26 09:50:30,354 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=3 socket_options=None
2025-07-26 09:50:30,374 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001FA61CEC0D0>
2025-07-26 09:50:30,374 - DEBUG - send_request_headers.started request=<Request [b'HEAD']>
2025-07-26 09:50:30,375 - DEBUG - send_request_headers.complete
2025-07-26 09:50:30,376 - DEBUG - send_request_body.started request=<Request [b'HEAD']>
2025-07-26 09:50:30,376 - DEBUG - send_request_body.complete
2025-07-26 09:50:30,376 - DEBUG - receive_response_headers.started request=<Request [b'HEAD']>
2025-07-26 09:50:30,398 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Sat, 26 Jul 2025 07:50:30 GMT'), (b'server', b'uvicorn'), (b'content-length', b'31665'), (b'content-type', b'text/html; charset=utf-8')])
2025-07-26 09:50:30,399 - INFO - HTTP Request: HEAD http://127.0.0.1:7860/ "HTTP/1.1 200 OK"
2025-07-26 09:50:30,399 - DEBUG - receive_response_body.started request=<Request [b'HEAD']>
2025-07-26 09:50:30,399 - DEBUG - receive_response_body.complete
2025-07-26 09:50:30,399 - DEBUG - response_closed.started
2025-07-26 09:50:30,400 - DEBUG - response_closed.complete
2025-07-26 09:50:30,400 - DEBUG - close.started
2025-07-26 09:50:30,400 - DEBUG - close.complete
2025-07-26 09:50:30,405 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-26 09:50:30,554 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/launched HTTP/1.1" 200 0
2025-07-26 09:50:30,598 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001FA61DA95D0>
2025-07-26 09:50:30,599 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-26 09:50:30,599 - DEBUG - send_request_headers.complete
2025-07-26 09:50:30,600 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-26 09:50:30,600 - DEBUG - send_request_body.complete
2025-07-26 09:50:30,600 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-26 09:50:30,770 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 26 Jul 2025 07:50:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-26 09:50:30,771 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-26 09:50:30,771 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-26 09:50:30,771 - DEBUG - receive_response_body.complete
2025-07-26 09:50:30,772 - DEBUG - response_closed.started
2025-07-26 09:50:30,772 - DEBUG - response_closed.complete
2025-07-26 09:50:30,772 - DEBUG - close.started
2025-07-26 09:50:30,772 - DEBUG - close.complete
2025-07-26 09:59:03,848 - DEBUG - Starte die Anwendung...
2025-07-26 09:59:03,849 - ERROR - Fehler bei der Verarbeitung!
2025-07-26 09:59:03,852 - DEBUG - Using proactor: IocpProactor
2025-07-26 09:59:03,855 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-26 09:59:03,989 - DEBUG - connect_tcp.started host='api.gradio.app' port=443 local_address=None timeout=3 socket_options=None
2025-07-26 09:59:04,012 - DEBUG - Using proactor: IocpProactor
2025-07-26 09:59:04,106 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/initiated HTTP/1.1" 200 0
2025-07-26 09:59:04,152 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=None socket_options=None
2025-07-26 09:59:04,153 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022F9A318650>
2025-07-26 09:59:04,153 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-26 09:59:04,153 - DEBUG - send_request_headers.complete
2025-07-26 09:59:04,153 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-26 09:59:04,154 - DEBUG - send_request_body.complete
2025-07-26 09:59:04,154 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-26 09:59:04,154 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Sat, 26 Jul 2025 07:59:04 GMT'), (b'server', b'uvicorn'), (b'content-length', b'4'), (b'content-type', b'application/json')])
2025-07-26 09:59:04,154 - INFO - HTTP Request: GET http://127.0.0.1:7860/gradio_api/startup-events "HTTP/1.1 200 OK"
2025-07-26 09:59:04,154 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-26 09:59:04,155 - DEBUG - receive_response_body.complete
2025-07-26 09:59:04,155 - DEBUG - response_closed.started
2025-07-26 09:59:04,155 - DEBUG - response_closed.complete
2025-07-26 09:59:04,156 - DEBUG - close.started
2025-07-26 09:59:04,156 - DEBUG - close.complete
2025-07-26 09:59:04,157 - DEBUG - connect_tcp.started host='127.0.0.1' port=7860 local_address=None timeout=3 socket_options=None
2025-07-26 09:59:04,170 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022F9A31BF10>
2025-07-26 09:59:04,171 - DEBUG - send_request_headers.started request=<Request [b'HEAD']>
2025-07-26 09:59:04,171 - DEBUG - send_request_headers.complete
2025-07-26 09:59:04,172 - DEBUG - send_request_body.started request=<Request [b'HEAD']>
2025-07-26 09:59:04,172 - DEBUG - send_request_body.complete
2025-07-26 09:59:04,173 - DEBUG - receive_response_headers.started request=<Request [b'HEAD']>
2025-07-26 09:59:04,181 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'date', b'Sat, 26 Jul 2025 07:59:04 GMT'), (b'server', b'uvicorn'), (b'content-length', b'31664'), (b'content-type', b'text/html; charset=utf-8')])
2025-07-26 09:59:04,182 - INFO - HTTP Request: HEAD http://127.0.0.1:7860/ "HTTP/1.1 200 OK"
2025-07-26 09:59:04,182 - DEBUG - receive_response_body.started request=<Request [b'HEAD']>
2025-07-26 09:59:04,182 - DEBUG - receive_response_body.complete
2025-07-26 09:59:04,183 - DEBUG - response_closed.started
2025-07-26 09:59:04,184 - DEBUG - response_closed.complete
2025-07-26 09:59:04,184 - DEBUG - close.started
2025-07-26 09:59:04,184 - DEBUG - close.complete
2025-07-26 09:59:04,186 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-07-26 09:59:04,202 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022F9A50F050>
2025-07-26 09:59:04,202 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000022F9A0EBBF0> server_hostname='api.gradio.app' timeout=3
2025-07-26 09:59:04,341 - DEBUG - https://huggingface.co:443 "HEAD /api/telemetry/gradio/launched HTTP/1.1" 200 0
2025-07-26 09:59:04,555 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022F9A528B90>
2025-07-26 09:59:04,555 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-07-26 09:59:04,557 - DEBUG - send_request_headers.complete
2025-07-26 09:59:04,557 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-07-26 09:59:04,557 - DEBUG - send_request_body.complete
2025-07-26 09:59:04,557 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-07-26 09:59:04,731 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 26 Jul 2025 07:59:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'21'), (b'Connection', b'keep-alive'), (b'Server', b'nginx/1.18.0'), (b'Access-Control-Allow-Origin', b'*')])
2025-07-26 09:59:04,732 - INFO - HTTP Request: GET https://api.gradio.app/pkg-version "HTTP/1.1 200 OK"
2025-07-26 09:59:04,733 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-07-26 09:59:04,733 - DEBUG - receive_response_body.complete
2025-07-26 09:59:04,734 - DEBUG - response_closed.started
2025-07-26 09:59:04,734 - DEBUG - response_closed.complete
2025-07-26 09:59:04,734 - DEBUG - close.started
2025-07-26 09:59:04,734 - DEBUG - close.complete
2025-07-26 10:00:01,597 - DEBUG - matplotlib data path: Z:\AI\software\miniconda3\envs\ace-data_env\Lib\site-packages\matplotlib\mpl-data
2025-07-26 10:00:01,600 - DEBUG - CONFIGDIR=C:\Users\methm\.matplotlib
2025-07-26 10:00:01,601 - DEBUG - interactive is False
2025-07-26 10:00:01,601 - DEBUG - platform is win32
2025-07-26 10:00:01,636 - DEBUG - CACHEDIR=C:\Users\methm\.matplotlib
2025-07-26 10:00:01,643 - DEBUG - Using fontManager instance from C:\Users\methm\.matplotlib\fontlist-v390.json
2025-07-26 10:00:01,775 - DEBUG - Loaded backend tkagg version 8.6.
2025-07-26 10:00:01,776 - DEBUG - Loaded backend agg version v2.2.
2025-07-26 10:00:01,776 - INFO - Starte Verarbeitung aller Dateien im UI-Modus...
2025-07-26 10:00:01,776 - INFO - Verarbeite Datei: data\01. 4AM in Bangkok 130819.mp3
2025-07-26 10:00:01,777 - INFO - Beginne Verarbeitung der Datei: data\01. 4AM in Bangkok 130819.mp3
2025-07-26 10:00:01,847 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
2025-07-26 10:00:01,848 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-26 10:00:01,850 - DEBUG - stack: []
2025-07-26 10:00:01,850 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-26 10:00:01,852 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-07-26 10:00:01,852 - DEBUG - stack []
2025-07-26 10:00:01,853 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=81)
2025-07-26 10:00:01,853 - DEBUG - stack []
2025-07-26 10:00:01,854 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
2025-07-26 10:00:01,854 - DEBUG - stack []
2025-07-26 10:00:01,854 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
2025-07-26 10:00:01,854 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-26 10:00:01,855 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
2025-07-26 10:00:01,855 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2']
2025-07-26 10:00:01,855 - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
2025-07-26 10:00:01,855 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
2025-07-26 10:00:01,855 - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
2025-07-26 10:00:01,856 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
2025-07-26 10:00:01,856 - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
2025-07-26 10:00:01,856 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
2025-07-26 10:00:01,856 - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
2025-07-26 10:00:01,856 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
2025-07-26 10:00:01,857 - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
2025-07-26 10:00:01,857 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
2025-07-26 10:00:01,858 - DEBUG - dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
2025-07-26 10:00:01,859 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-26 10:00:01,860 - DEBUG - dispatch pc=34, inst=CALL(arg=7, lineno=86)
2025-07-26 10:00:01,860 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-07-26 10:00:01,861 - DEBUG - dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
2025-07-26 10:00:01,861 - DEBUG - stack ['$34call.9']
2025-07-26 10:00:01,869 - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
2025-07-26 10:00:01,869 - DEBUG - stack []
2025-07-26 10:00:01,869 - DEBUG - dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
2025-07-26 10:00:01,870 - DEBUG - stack ['$const46.10.0']
2025-07-26 10:00:01,870 - DEBUG - end state. edges=[]
2025-07-26 10:00:01,873 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-26 10:00:01,873 - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-07-26 10:00:01,873 - DEBUG - defmap: {}
2025-07-26 10:00:01,874 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-26 10:00:01,876 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-26 10:00:01,876 - DEBUG - keep phismap: {}
2025-07-26 10:00:01,877 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-26 10:00:01,878 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-26 10:00:01,883 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10.0'}), (48, {'retval': '$const46.10.0', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-26 10:00:01,884 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000022F9C30A660>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10.0 = const(NoneType, None)    ['$const46.10.0']
    $48return_value.11 = cast(value=$const46.10.0) ['$48return_value.11', '$const46.10.0']
    return $48return_value.11                ['$48return_value.11']

2025-07-26 10:00:01,885 - DEBUG - ==== SSA block analysis pass on 0
2025-07-26 10:00:01,886 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000022F9C344FD0>
2025-07-26 10:00:01,886 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:01,886 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:01,887 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:01,889 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:01,890 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:01,892 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:01,892 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:01,894 - DEBUG - on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000022F9C30A660>))
2025-07-26 10:00:01,895 - DEBUG - on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:01,895 - DEBUG - on stmt: $const46.10.0 = const(NoneType, None)
2025-07-26 10:00:01,899 - DEBUG - on stmt: $48return_value.11 = cast(value=$const46.10.0)
2025-07-26 10:00:01,899 - DEBUG - on stmt: return $48return_value.11
2025-07-26 10:00:01,902 - DEBUG - defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x0000022F9C35FA10>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x0000022F9C35FED0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000022F9C35EBD0>,
                                  0)],
             '$const46.10.0': [(<numba.core.ir.Assign object at 0x0000022F9C2DEDD0>,
                                0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000022F9C35D750>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000022F9C35D2D0>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000022F9C35E6D0>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x0000022F9C35E810>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x0000022F9BBBBF50>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x0000022F9BF820D0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000022F9C35E910>, 0)]})
2025-07-26 10:00:01,902 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x0000022F9C2A0610>
2025-07-26 10:00:01,905 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
2025-07-26 10:00:01,907 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-26 10:00:01,910 - DEBUG - stack: []
2025-07-26 10:00:01,910 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-26 10:00:01,917 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-07-26 10:00:01,917 - DEBUG - stack []
2025-07-26 10:00:01,917 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=7)
2025-07-26 10:00:01,918 - DEBUG - stack []
2025-07-26 10:00:01,918 - DEBUG - dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
2025-07-26 10:00:01,918 - DEBUG - stack []
2025-07-26 10:00:01,918 - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
2025-07-26 10:00:01,919 - DEBUG - stack ['$null$4.1', '$4load_global.0']
2025-07-26 10:00:01,919 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
2025-07-26 10:00:01,919 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2']
2025-07-26 10:00:01,920 - DEBUG - dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
2025-07-26 10:00:01,920 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
2025-07-26 10:00:01,923 - DEBUG - dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
2025-07-26 10:00:01,924 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-26 10:00:01,924 - DEBUG - dispatch pc=28, inst=CALL(arg=1, lineno=9)
2025-07-26 10:00:01,927 - DEBUG - stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-07-26 10:00:01,927 - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
2025-07-26 10:00:01,928 - DEBUG - stack ['$28call.5']
2025-07-26 10:00:01,928 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
2025-07-26 10:00:01,928 - DEBUG - stack []
2025-07-26 10:00:01,928 - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
2025-07-26 10:00:01,931 - DEBUG - stack ['$const40.6.1']
2025-07-26 10:00:01,931 - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
2025-07-26 10:00:01,931 - DEBUG - stack []
2025-07-26 10:00:01,932 - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
2025-07-26 10:00:01,932 - DEBUG - stack ['$const44.7.2']
2025-07-26 10:00:01,932 - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
2025-07-26 10:00:01,935 - DEBUG - stack []
2025-07-26 10:00:01,935 - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
2025-07-26 10:00:01,935 - DEBUG - stack ['$const48.8.1']
2025-07-26 10:00:01,936 - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
2025-07-26 10:00:01,936 - DEBUG - stack []
2025-07-26 10:00:01,936 - DEBUG - dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
2025-07-26 10:00:01,937 - DEBUG - stack ['$const52.9.1']
2025-07-26 10:00:01,939 - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
2025-07-26 10:00:01,941 - DEBUG - stack []
2025-07-26 10:00:01,944 - DEBUG - dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
2025-07-26 10:00:01,944 - DEBUG - stack ['$const56.10.2']
2025-07-26 10:00:01,944 - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
2025-07-26 10:00:01,945 - DEBUG - stack []
2025-07-26 10:00:01,945 - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
2025-07-26 10:00:01,948 - DEBUG - stack ['$const60.11.1']
2025-07-26 10:00:01,948 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
2025-07-26 10:00:01,948 - DEBUG - stack []
2025-07-26 10:00:01,949 - DEBUG - dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
2025-07-26 10:00:01,949 - DEBUG - stack ['$const64.12.1']
2025-07-26 10:00:01,949 - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
2025-07-26 10:00:01,952 - DEBUG - stack []
2025-07-26 10:00:01,952 - DEBUG - dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
2025-07-26 10:00:01,952 - DEBUG - stack ['$interp_win68.13']
2025-07-26 10:00:01,953 - DEBUG - dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
2025-07-26 10:00:01,953 - DEBUG - stack ['$70load_attr.14']
2025-07-26 10:00:01,953 - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-07-26 10:00:01,955 - DEBUG - stack ['$70load_attr.14', '$const80.15.2']
2025-07-26 10:00:01,960 - DEBUG - dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
2025-07-26 10:00:01,960 - DEBUG - stack ['$82binary_subscr.16']
2025-07-26 10:00:01,961 - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
2025-07-26 10:00:01,961 - DEBUG - stack []
2025-07-26 10:00:01,964 - DEBUG - dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
2025-07-26 10:00:01,964 - DEBUG - stack ['$x94.17']
2025-07-26 10:00:01,964 - DEBUG - dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
2025-07-26 10:00:01,964 - DEBUG - stack ['$96load_attr.18']
2025-07-26 10:00:01,965 - DEBUG - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-07-26 10:00:01,965 - DEBUG - stack ['$96load_attr.18', '$const106.19.2']
2025-07-26 10:00:01,965 - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
2025-07-26 10:00:01,968 - DEBUG - stack ['$108binary_subscr.20']
2025-07-26 10:00:01,968 - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
2025-07-26 10:00:01,968 - DEBUG - stack []
2025-07-26 10:00:01,968 - DEBUG - dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
2025-07-26 10:00:01,969 - DEBUG - stack ['$t_out120.21']
2025-07-26 10:00:01,970 - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
2025-07-26 10:00:01,970 - DEBUG - stack ['$122load_attr.22']
2025-07-26 10:00:01,973 - DEBUG - dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-07-26 10:00:01,973 - DEBUG - stack ['$122load_attr.22', '$const132.23.2']
2025-07-26 10:00:01,974 - DEBUG - dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
2025-07-26 10:00:01,974 - DEBUG - stack ['$134binary_subscr.24']
2025-07-26 10:00:01,977 - DEBUG - dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
2025-07-26 10:00:01,977 - DEBUG - stack []
2025-07-26 10:00:01,977 - DEBUG - dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
2025-07-26 10:00:01,978 - DEBUG - stack ['$null$146.26', '$146load_global.25']
2025-07-26 10:00:01,978 - DEBUG - dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
2025-07-26 10:00:01,978 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-26 10:00:01,980 - DEBUG - dispatch pc=164, inst=CALL(arg=1, lineno=23)
2025-07-26 10:00:01,980 - DEBUG - stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-07-26 10:00:01,981 - DEBUG - dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
2025-07-26 10:00:01,981 - DEBUG - stack ['$164call.28']
2025-07-26 10:00:01,981 - DEBUG - end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
2025-07-26 10:00:01,982 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1)])
2025-07-26 10:00:01,982 - DEBUG - stack: ['$phi176.0']
2025-07-26 10:00:01,985 - DEBUG - state.pc_initial: State(pc_initial=176 nstack_initial=1)
2025-07-26 10:00:01,986 - DEBUG - dispatch pc=176, inst=NOP(arg=1, lineno=23)
2025-07-26 10:00:01,986 - DEBUG - stack ['$phi176.0']
2025-07-26 10:00:01,989 - DEBUG - end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
2025-07-26 10:00:01,989 - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=1)])
2025-07-26 10:00:01,990 - DEBUG - stack: ['$phi178.0']
2025-07-26 10:00:01,990 - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=1)
2025-07-26 10:00:01,990 - DEBUG - dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
2025-07-26 10:00:01,993 - DEBUG - stack ['$phi178.0']
2025-07-26 10:00:01,994 - DEBUG - end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
2025-07-26 10:00:01,994 - DEBUG - pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
2025-07-26 10:00:01,994 - DEBUG - stack: []
2025-07-26 10:00:01,995 - DEBUG - state.pc_initial: State(pc_initial=782 nstack_initial=0)
2025-07-26 10:00:01,998 - DEBUG - dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
2025-07-26 10:00:01,998 - DEBUG - stack []
2025-07-26 10:00:01,998 - DEBUG - dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
2025-07-26 10:00:01,998 - DEBUG - stack ['$const782.0.0']
2025-07-26 10:00:01,999 - DEBUG - end state. edges=[]
2025-07-26 10:00:02,002 - DEBUG - pending: deque([State(pc_initial=180 nstack_initial=2)])
2025-07-26 10:00:02,004 - DEBUG - stack: ['$phi180.0', '$phi180.1']
2025-07-26 10:00:02,004 - DEBUG - state.pc_initial: State(pc_initial=180 nstack_initial=2)
2025-07-26 10:00:02,006 - DEBUG - dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
2025-07-26 10:00:02,006 - DEBUG - stack ['$phi180.0', '$phi180.1']
2025-07-26 10:00:02,007 - DEBUG - dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
2025-07-26 10:00:02,007 - DEBUG - stack ['$phi180.0']
2025-07-26 10:00:02,010 - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
2025-07-26 10:00:02,010 - DEBUG - stack ['$phi180.0', '$t_out182.2']
2025-07-26 10:00:02,010 - DEBUG - dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-07-26 10:00:02,010 - DEBUG - stack ['$phi180.0', '$t_out182.2', '$t184.3']
2025-07-26 10:00:02,011 - DEBUG - dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
2025-07-26 10:00:02,011 - DEBUG - stack ['$phi180.0', '$186binary_subscr.4']
2025-07-26 10:00:02,013 - DEBUG - dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
2025-07-26 10:00:02,014 - DEBUG - stack ['$phi180.0']
2025-07-26 10:00:02,014 - DEBUG - dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
2025-07-26 10:00:02,014 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5']
2025-07-26 10:00:02,014 - DEBUG - dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
2025-07-26 10:00:02,015 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-26 10:00:02,015 - DEBUG - dispatch pc=216, inst=CALL(arg=1, lineno=27)
2025-07-26 10:00:02,018 - DEBUG - stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-07-26 10:00:02,020 - DEBUG - dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
2025-07-26 10:00:02,020 - DEBUG - stack ['$phi180.0', '$216call.8']
2025-07-26 10:00:02,023 - DEBUG - dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
2025-07-26 10:00:02,023 - DEBUG - stack ['$phi180.0']
2025-07-26 10:00:02,023 - DEBUG - dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
2025-07-26 10:00:02,023 - DEBUG - stack ['$phi180.0', '$scale228.9']
2025-07-26 10:00:02,024 - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
2025-07-26 10:00:02,027 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10']
2025-07-26 10:00:02,027 - DEBUG - dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
2025-07-26 10:00:02,027 - DEBUG - stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
2025-07-26 10:00:02,027 - DEBUG - dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
2025-07-26 10:00:02,028 - DEBUG - stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
2025-07-26 10:00:02,028 - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
2025-07-26 10:00:02,031 - DEBUG - stack ['$phi180.0', '$binop_mul238.13']
2025-07-26 10:00:02,031 - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
2025-07-26 10:00:02,032 - DEBUG - stack ['$phi180.0']
2025-07-26 10:00:02,033 - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
2025-07-26 10:00:02,033 - DEBUG - stack ['$phi180.0', '$frac244.14']
2025-07-26 10:00:02,036 - DEBUG - dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
2025-07-26 10:00:02,036 - DEBUG - stack ['$phi180.0', '$frac244.14', '$num_table246.15']
2025-07-26 10:00:02,036 - DEBUG - dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
2025-07-26 10:00:02,037 - DEBUG - stack ['$phi180.0', '$binop_mul248.16']
2025-07-26 10:00:02,039 - DEBUG - dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
2025-07-26 10:00:02,039 - DEBUG - stack ['$phi180.0']
2025-07-26 10:00:02,040 - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
2025-07-26 10:00:02,040 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17']
2025-07-26 10:00:02,041 - DEBUG - dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
2025-07-26 10:00:02,041 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-26 10:00:02,043 - DEBUG - dispatch pc=272, inst=CALL(arg=1, lineno=34)
2025-07-26 10:00:02,043 - DEBUG - stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-07-26 10:00:02,044 - DEBUG - dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
2025-07-26 10:00:02,044 - DEBUG - stack ['$phi180.0', '$272call.20']
2025-07-26 10:00:02,044 - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
2025-07-26 10:00:02,044 - DEBUG - stack ['$phi180.0']
2025-07-26 10:00:02,045 - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
2025-07-26 10:00:02,045 - DEBUG - stack ['$phi180.0', '$index_frac284.21']
2025-07-26 10:00:02,047 - DEBUG - dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
2025-07-26 10:00:02,048 - DEBUG - stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
2025-07-26 10:00:02,050 - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
2025-07-26 10:00:02,050 - DEBUG - stack ['$phi180.0', '$binop_sub288.23']
2025-07-26 10:00:02,052 - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
2025-07-26 10:00:02,052 - DEBUG - stack ['$phi180.0']
2025-07-26 10:00:02,053 - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
2025-07-26 10:00:02,054 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24']
2025-07-26 10:00:02,055 - DEBUG - dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
2025-07-26 10:00:02,056 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
2025-07-26 10:00:02,056 - DEBUG - dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
2025-07-26 10:00:02,056 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27.3']
2025-07-26 10:00:02,057 - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
2025-07-26 10:00:02,057 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
2025-07-26 10:00:02,060 - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
2025-07-26 10:00:02,060 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
2025-07-26 10:00:02,060 - DEBUG - dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
2025-07-26 10:00:02,060 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
2025-07-26 10:00:02,061 - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
2025-07-26 10:00:02,061 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
2025-07-26 10:00:02,064 - DEBUG - dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
2025-07-26 10:00:02,066 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
2025-07-26 10:00:02,069 - DEBUG - dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
2025-07-26 10:00:02,069 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-26 10:00:02,069 - DEBUG - dispatch pc=332, inst=CALL(arg=2, lineno=40)
2025-07-26 10:00:02,069 - DEBUG - stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-07-26 10:00:02,072 - DEBUG - dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
2025-07-26 10:00:02,072 - DEBUG - stack ['$phi180.0', '$332call.34']
2025-07-26 10:00:02,073 - DEBUG - dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
2025-07-26 10:00:02,073 - DEBUG - stack ['$phi180.0']
2025-07-26 10:00:02,073 - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
2025-07-26 10:00:02,074 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35']
2025-07-26 10:00:02,076 - DEBUG - dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
2025-07-26 10:00:02,076 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-26 10:00:02,077 - DEBUG - dispatch pc=362, inst=CALL(arg=1, lineno=41)
2025-07-26 10:00:02,077 - DEBUG - stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-07-26 10:00:02,078 - DEBUG - dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
2025-07-26 10:00:02,079 - DEBUG - stack ['$phi180.0', '$362call.38']
2025-07-26 10:00:02,080 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
2025-07-26 10:00:02,081 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2)])
2025-07-26 10:00:02,081 - DEBUG - stack: ['$phi374.0', '$phi374.1']
2025-07-26 10:00:02,081 - DEBUG - state.pc_initial: State(pc_initial=374 nstack_initial=2)
2025-07-26 10:00:02,081 - DEBUG - dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
2025-07-26 10:00:02,081 - DEBUG - stack ['$phi374.0', '$phi374.1']
2025-07-26 10:00:02,082 - DEBUG - end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
2025-07-26 10:00:02,082 - DEBUG - pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
2025-07-26 10:00:02,083 - DEBUG - stack: ['$phi500.0']
2025-07-26 10:00:02,083 - DEBUG - state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-07-26 10:00:02,083 - DEBUG - dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
2025-07-26 10:00:02,083 - DEBUG - stack ['$phi500.0']
2025-07-26 10:00:02,084 - DEBUG - dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
2025-07-26 10:00:02,084 - DEBUG - stack ['$phi500.0', '$scale500.1']
2025-07-26 10:00:02,084 - DEBUG - dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
2025-07-26 10:00:02,084 - DEBUG - stack ['$phi500.0', '$scale500.1', '$frac502.2']
2025-07-26 10:00:02,084 - DEBUG - dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
2025-07-26 10:00:02,085 - DEBUG - stack ['$phi500.0', '$binop_sub504.3']
2025-07-26 10:00:02,085 - DEBUG - dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
2025-07-26 10:00:02,085 - DEBUG - stack ['$phi500.0']
2025-07-26 10:00:02,085 - DEBUG - dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
2025-07-26 10:00:02,085 - DEBUG - stack ['$phi500.0', '$frac510.4']
2025-07-26 10:00:02,086 - DEBUG - dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
2025-07-26 10:00:02,086 - DEBUG - stack ['$phi500.0', '$frac510.4', '$num_table512.5']
2025-07-26 10:00:02,087 - DEBUG - dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
2025-07-26 10:00:02,087 - DEBUG - stack ['$phi500.0', '$binop_mul514.6']
2025-07-26 10:00:02,088 - DEBUG - dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
2025-07-26 10:00:02,088 - DEBUG - stack ['$phi500.0']
2025-07-26 10:00:02,088 - DEBUG - dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
2025-07-26 10:00:02,088 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7']
2025-07-26 10:00:02,088 - DEBUG - dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
2025-07-26 10:00:02,088 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-26 10:00:02,089 - DEBUG - dispatch pc=538, inst=CALL(arg=1, lineno=54)
2025-07-26 10:00:02,089 - DEBUG - stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-07-26 10:00:02,089 - DEBUG - dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
2025-07-26 10:00:02,089 - DEBUG - stack ['$phi500.0', '$538call.10']
2025-07-26 10:00:02,089 - DEBUG - dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
2025-07-26 10:00:02,090 - DEBUG - stack ['$phi500.0']
2025-07-26 10:00:02,090 - DEBUG - dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
2025-07-26 10:00:02,090 - DEBUG - stack ['$phi500.0', '$index_frac550.11']
2025-07-26 10:00:02,092 - DEBUG - dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
2025-07-26 10:00:02,092 - DEBUG - stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
2025-07-26 10:00:02,092 - DEBUG - dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
2025-07-26 10:00:02,092 - DEBUG - stack ['$phi500.0', '$binop_sub554.13']
2025-07-26 10:00:02,093 - DEBUG - dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
2025-07-26 10:00:02,093 - DEBUG - stack ['$phi500.0']
2025-07-26 10:00:02,093 - DEBUG - dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
2025-07-26 10:00:02,093 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14']
2025-07-26 10:00:02,093 - DEBUG - dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
2025-07-26 10:00:02,093 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
2025-07-26 10:00:02,094 - DEBUG - dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
2025-07-26 10:00:02,094 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
2025-07-26 10:00:02,094 - DEBUG - dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
2025-07-26 10:00:02,094 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
2025-07-26 10:00:02,095 - DEBUG - dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
2025-07-26 10:00:02,097 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19.3']
2025-07-26 10:00:02,097 - DEBUG - dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
2025-07-26 10:00:02,098 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
2025-07-26 10:00:02,098 - DEBUG - dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
2025-07-26 10:00:02,098 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
2025-07-26 10:00:02,098 - DEBUG - dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
2025-07-26 10:00:02,098 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
2025-07-26 10:00:02,099 - DEBUG - dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
2025-07-26 10:00:02,099 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
2025-07-26 10:00:02,100 - DEBUG - dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
2025-07-26 10:00:02,100 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
2025-07-26 10:00:02,100 - DEBUG - dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
2025-07-26 10:00:02,101 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-26 10:00:02,101 - DEBUG - dispatch pc=604, inst=CALL(arg=2, lineno=60)
2025-07-26 10:00:02,101 - DEBUG - stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-07-26 10:00:02,101 - DEBUG - dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
2025-07-26 10:00:02,101 - DEBUG - stack ['$phi500.0', '$604call.26']
2025-07-26 10:00:02,102 - DEBUG - dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
2025-07-26 10:00:02,102 - DEBUG - stack ['$phi500.0']
2025-07-26 10:00:02,102 - DEBUG - dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
2025-07-26 10:00:02,102 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27']
2025-07-26 10:00:02,102 - DEBUG - dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
2025-07-26 10:00:02,103 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-26 10:00:02,103 - DEBUG - dispatch pc=634, inst=CALL(arg=1, lineno=61)
2025-07-26 10:00:02,103 - DEBUG - stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-07-26 10:00:02,103 - DEBUG - dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
2025-07-26 10:00:02,104 - DEBUG - stack ['$phi500.0', '$634call.30']
2025-07-26 10:00:02,104 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
2025-07-26 10:00:02,105 - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
2025-07-26 10:00:02,105 - DEBUG - stack: ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-26 10:00:02,105 - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=3)
2025-07-26 10:00:02,105 - DEBUG - dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
2025-07-26 10:00:02,105 - DEBUG - stack ['$phi376.0', '$phi376.1', '$phi376.2']
2025-07-26 10:00:02,106 - DEBUG - dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
2025-07-26 10:00:02,106 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-26 10:00:02,106 - DEBUG - dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
2025-07-26 10:00:02,106 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
2025-07-26 10:00:02,106 - DEBUG - dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
2025-07-26 10:00:02,107 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
2025-07-26 10:00:02,107 - DEBUG - dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
2025-07-26 10:00:02,107 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
2025-07-26 10:00:02,107 - DEBUG - dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
2025-07-26 10:00:02,108 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
2025-07-26 10:00:02,109 - DEBUG - dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
2025-07-26 10:00:02,109 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
2025-07-26 10:00:02,109 - DEBUG - dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-07-26 10:00:02,109 - DEBUG - stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
2025-07-26 10:00:02,109 - DEBUG - dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
2025-07-26 10:00:02,110 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
2025-07-26 10:00:02,110 - DEBUG - dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
2025-07-26 10:00:02,110 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
2025-07-26 10:00:02,110 - DEBUG - dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
2025-07-26 10:00:02,110 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
2025-07-26 10:00:02,111 - DEBUG - dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
2025-07-26 10:00:02,113 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
2025-07-26 10:00:02,114 - DEBUG - dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
2025-07-26 10:00:02,114 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
2025-07-26 10:00:02,114 - DEBUG - dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
2025-07-26 10:00:02,115 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
2025-07-26 10:00:02,115 - DEBUG - dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
2025-07-26 10:00:02,115 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
2025-07-26 10:00:02,115 - DEBUG - dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-07-26 10:00:02,115 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
2025-07-26 10:00:02,116 - DEBUG - dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
2025-07-26 10:00:02,117 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
2025-07-26 10:00:02,117 - DEBUG - dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
2025-07-26 10:00:02,117 - DEBUG - stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
2025-07-26 10:00:02,117 - DEBUG - dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
2025-07-26 10:00:02,117 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
2025-07-26 10:00:02,118 - DEBUG - dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
2025-07-26 10:00:02,118 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-26 10:00:02,118 - DEBUG - dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
2025-07-26 10:00:02,118 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20']
2025-07-26 10:00:02,118 - DEBUG - dispatch pc=446, inst=COPY(arg=2, lineno=47)
2025-07-26 10:00:02,119 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
2025-07-26 10:00:02,119 - DEBUG - dispatch pc=448, inst=COPY(arg=2, lineno=47)
2025-07-26 10:00:02,119 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
2025-07-26 10:00:02,119 - DEBUG - dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-26 10:00:02,119 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
2025-07-26 10:00:02,120 - DEBUG - dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
2025-07-26 10:00:02,120 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
2025-07-26 10:00:02,121 - DEBUG - dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
2025-07-26 10:00:02,121 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
2025-07-26 10:00:02,121 - DEBUG - dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
2025-07-26 10:00:02,122 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
2025-07-26 10:00:02,122 - DEBUG - dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
2025-07-26 10:00:02,122 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
2025-07-26 10:00:02,122 - DEBUG - dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
2025-07-26 10:00:02,122 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
2025-07-26 10:00:02,123 - DEBUG - dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-07-26 10:00:02,123 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
2025-07-26 10:00:02,123 - DEBUG - dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
2025-07-26 10:00:02,123 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
2025-07-26 10:00:02,123 - DEBUG - dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
2025-07-26 10:00:02,124 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
2025-07-26 10:00:02,124 - DEBUG - dispatch pc=490, inst=SWAP(arg=3, lineno=47)
2025-07-26 10:00:02,124 - DEBUG - stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
2025-07-26 10:00:02,125 - DEBUG - dispatch pc=492, inst=SWAP(arg=2, lineno=47)
2025-07-26 10:00:02,125 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
2025-07-26 10:00:02,125 - DEBUG - dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-07-26 10:00:02,126 - DEBUG - stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
2025-07-26 10:00:02,126 - DEBUG - dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
2025-07-26 10:00:02,126 - DEBUG - stack ['$phi376.0', '$phi376.1']
2025-07-26 10:00:02,126 - DEBUG - end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
2025-07-26 10:00:02,127 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
2025-07-26 10:00:02,130 - DEBUG - stack: ['$phi646.0', '$phi646.1']
2025-07-26 10:00:02,130 - DEBUG - state.pc_initial: State(pc_initial=646 nstack_initial=2)
2025-07-26 10:00:02,130 - DEBUG - dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
2025-07-26 10:00:02,131 - DEBUG - stack ['$phi646.0', '$phi646.1']
2025-07-26 10:00:02,131 - DEBUG - end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
2025-07-26 10:00:02,131 - DEBUG - pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-26 10:00:02,131 - DEBUG - pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-07-26 10:00:02,131 - DEBUG - stack: ['$phi778.0']
2025-07-26 10:00:02,132 - DEBUG - state.pc_initial: State(pc_initial=778 nstack_initial=1)
2025-07-26 10:00:02,132 - DEBUG - dispatch pc=778, inst=NOP(arg=1, lineno=61)
2025-07-26 10:00:02,132 - DEBUG - stack ['$phi778.0']
2025-07-26 10:00:02,133 - DEBUG - dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
2025-07-26 10:00:02,134 - DEBUG - stack ['$phi778.0']
2025-07-26 10:00:02,134 - DEBUG - end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
2025-07-26 10:00:02,134 - DEBUG - pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
2025-07-26 10:00:02,134 - DEBUG - stack: ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-26 10:00:02,134 - DEBUG - state.pc_initial: State(pc_initial=648 nstack_initial=3)
2025-07-26 10:00:02,135 - DEBUG - dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
2025-07-26 10:00:02,135 - DEBUG - stack ['$phi648.0', '$phi648.1', '$phi648.2']
2025-07-26 10:00:02,135 - DEBUG - dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
2025-07-26 10:00:02,135 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-26 10:00:02,135 - DEBUG - dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
2025-07-26 10:00:02,135 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
2025-07-26 10:00:02,136 - DEBUG - dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
2025-07-26 10:00:02,136 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
2025-07-26 10:00:02,136 - DEBUG - dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
2025-07-26 10:00:02,136 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
2025-07-26 10:00:02,138 - DEBUG - dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
2025-07-26 10:00:02,138 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
2025-07-26 10:00:02,138 - DEBUG - dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
2025-07-26 10:00:02,138 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
2025-07-26 10:00:02,138 - DEBUG - dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-07-26 10:00:02,138 - DEBUG - stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
2025-07-26 10:00:02,139 - DEBUG - dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
2025-07-26 10:00:02,139 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
2025-07-26 10:00:02,139 - DEBUG - dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
2025-07-26 10:00:02,139 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
2025-07-26 10:00:02,139 - DEBUG - dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
2025-07-26 10:00:02,140 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
2025-07-26 10:00:02,140 - DEBUG - dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
2025-07-26 10:00:02,140 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
2025-07-26 10:00:02,140 - DEBUG - dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
2025-07-26 10:00:02,141 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
2025-07-26 10:00:02,142 - DEBUG - dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
2025-07-26 10:00:02,142 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
2025-07-26 10:00:02,142 - DEBUG - dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
2025-07-26 10:00:02,142 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
2025-07-26 10:00:02,143 - DEBUG - dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-07-26 10:00:02,145 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
2025-07-26 10:00:02,146 - DEBUG - dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
2025-07-26 10:00:02,146 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
2025-07-26 10:00:02,147 - DEBUG - dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
2025-07-26 10:00:02,147 - DEBUG - stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
2025-07-26 10:00:02,147 - DEBUG - dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
2025-07-26 10:00:02,147 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
2025-07-26 10:00:02,147 - DEBUG - dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
2025-07-26 10:00:02,148 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-26 10:00:02,148 - DEBUG - dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
2025-07-26 10:00:02,148 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20']
2025-07-26 10:00:02,148 - DEBUG - dispatch pc=718, inst=COPY(arg=2, lineno=66)
2025-07-26 10:00:02,148 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
2025-07-26 10:00:02,149 - DEBUG - dispatch pc=720, inst=COPY(arg=2, lineno=66)
2025-07-26 10:00:02,149 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
2025-07-26 10:00:02,149 - DEBUG - dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-26 10:00:02,150 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
2025-07-26 10:00:02,150 - DEBUG - dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
2025-07-26 10:00:02,151 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
2025-07-26 10:00:02,151 - DEBUG - dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
2025-07-26 10:00:02,151 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
2025-07-26 10:00:02,151 - DEBUG - dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
2025-07-26 10:00:02,151 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
2025-07-26 10:00:02,152 - DEBUG - dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
2025-07-26 10:00:02,152 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
2025-07-26 10:00:02,152 - DEBUG - dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
2025-07-26 10:00:02,152 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
2025-07-26 10:00:02,152 - DEBUG - dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
2025-07-26 10:00:02,152 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
2025-07-26 10:00:02,153 - DEBUG - dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
2025-07-26 10:00:02,153 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28.3']
2025-07-26 10:00:02,153 - DEBUG - dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-07-26 10:00:02,154 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
2025-07-26 10:00:02,154 - DEBUG - dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
2025-07-26 10:00:02,155 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
2025-07-26 10:00:02,155 - DEBUG - dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
2025-07-26 10:00:02,155 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
2025-07-26 10:00:02,155 - DEBUG - dispatch pc=768, inst=SWAP(arg=3, lineno=66)
2025-07-26 10:00:02,155 - DEBUG - stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
2025-07-26 10:00:02,156 - DEBUG - dispatch pc=770, inst=SWAP(arg=2, lineno=66)
2025-07-26 10:00:02,156 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
2025-07-26 10:00:02,156 - DEBUG - dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-07-26 10:00:02,156 - DEBUG - stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
2025-07-26 10:00:02,156 - DEBUG - dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
2025-07-26 10:00:02,157 - DEBUG - stack ['$phi648.0', '$phi648.1']
2025-07-26 10:00:02,157 - DEBUG - end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
2025-07-26 10:00:02,157 - DEBUG - pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
2025-07-26 10:00:02,157 - DEBUG - pending: deque([State(pc_initial=646 nstack_initial=2)])
2025-07-26 10:00:02,158 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-26 10:00:02,159 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
2025-07-26 10:00:02,161 - DEBUG - defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
2025-07-26 10:00:02,162 - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
2025-07-26 10:00:02,163 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-26 10:00:02,164 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-26 10:00:02,165 - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-07-26 10:00:02,165 - DEBUG - keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
2025-07-26 10:00:02,165 - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
2025-07-26 10:00:02,166 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-26 10:00:02,167 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6.1'}), (42, {'value': '$const40.6.1'}), (44, {'res': '$const44.7.2'}), (46, {'value': '$const44.7.2'}), (48, {'res': '$const48.8.1'}), (50, {'value': '$const48.8.1'}), (52, {'res': '$const52.9.1'}), (54, {'value': '$const52.9.1'}), (56, {'res': '$const56.10.2'}), (58, {'value': '$const56.10.2'}), (60, {'res': '$const60.11.1'}), (62, {'value': '$const60.11.1'}), (64, {'res': '$const64.12.1'}), (66, {'value': '$const64.12.1'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15.2'}), (82, {'index': '$const80.15.2', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19.2'}), (108, {'index': '$const106.19.2', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23.2'}), (134, {'index': '$const132.23.2', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
2025-07-26 10:00:02,167 - DEBUG - block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
2025-07-26 10:00:02,167 - DEBUG - block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
2025-07-26 10:00:02,168 - DEBUG - block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27.3'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27.3', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
2025-07-26 10:00:02,168 - DEBUG - block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
2025-07-26 10:00:02,168 - DEBUG - block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
2025-07-26 10:00:02,169 - DEBUG - block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19.3'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19.3', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
2025-07-26 10:00:02,169 - DEBUG - block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
2025-07-26 10:00:02,169 - DEBUG - block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28.3'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28.3', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
2025-07-26 10:00:02,169 - DEBUG - block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
2025-07-26 10:00:02,170 - DEBUG - block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0.0'}), (784, {'retval': '$const782.0.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-26 10:00:02,172 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15.2 = const(int, 0)            ['$const80.15.2']
    nwin = getitem(value=$70load_attr.14, index=$const80.15.2, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15.2', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19.2 = const(int, 0)           ['$const106.19.2']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19.2, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19.2', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23.2 = const(int, 0)           ['$const132.23.2']
    n_out = getitem(value=$122load_attr.22, index=$const132.23.2, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23.2', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27.3 = const(int, 1)           ['$const308.27.3']
    $binop_add310.28 = n + $const308.27.3    ['$binop_add310.28', '$const308.27.3', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19.3 = const(int, 1)           ['$const580.19.3']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19.3 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19.3']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28.3 = const(int, 1)           ['$const744.28.3']
    $binop_add746.29 = $binop_add740.27 + $const744.28.3 ['$binop_add740.27', '$binop_add746.29', '$const744.28.3']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0.0 = const(NoneType, None)    ['$const782.0.0']
    $784return_value.1 = cast(value=$const782.0.0) ['$784return_value.1', '$const782.0.0']
    return $784return_value.1                ['$784return_value.1']

2025-07-26 10:00:02,189 - DEBUG - ==== SSA block analysis pass on 0
2025-07-26 10:00:02,189 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000022F9C638950>
2025-07-26 10:00:02,189 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,190 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,190 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,190 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,190 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,190 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,191 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,192 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,192 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,192 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,192 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,193 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,193 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,193 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,193 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,193 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,194 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,194 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,194 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,194 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,195 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,195 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,195 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,196 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,196 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,196 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,197 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,197 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,197 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,197 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,197 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,198 - DEBUG - ==== SSA block analysis pass on 176
2025-07-26 10:00:02,198 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000022F9C638950>
2025-07-26 10:00:02,198 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,198 - DEBUG - ==== SSA block analysis pass on 178
2025-07-26 10:00:02,198 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000022F9C638950>
2025-07-26 10:00:02,199 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,199 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,200 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,200 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,200 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,201 - DEBUG - ==== SSA block analysis pass on 180
2025-07-26 10:00:02,201 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000022F9C638950>
2025-07-26 10:00:02,201 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,201 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,201 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,202 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,202 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-26 10:00:02,202 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-26 10:00:02,202 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,202 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,203 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,203 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,203 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,204 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,204 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-26 10:00:02,205 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 10:00:02,205 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,205 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,205 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,205 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,206 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,208 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,209 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,209 - DEBUG - ==== SSA block analysis pass on 374
2025-07-26 10:00:02,209 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000022F9C638950>
2025-07-26 10:00:02,210 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,210 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,210 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,210 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,210 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,211 - DEBUG - ==== SSA block analysis pass on 376
2025-07-26 10:00:02,211 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000022F9C638950>
2025-07-26 10:00:02,211 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,211 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,211 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 10:00:02,212 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,213 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,213 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 10:00:02,213 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,213 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,213 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,214 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,214 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-26 10:00:02,214 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,214 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,214 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,215 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,215 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,215 - DEBUG - ==== SSA block analysis pass on 500
2025-07-26 10:00:02,215 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000022F9C638950>
2025-07-26 10:00:02,216 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 10:00:02,217 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-26 10:00:02,217 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,217 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,217 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,217 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,218 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,218 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-26 10:00:02,218 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,218 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,218 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 10:00:02,219 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,219 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,219 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,219 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,219 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,220 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,221 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,221 - DEBUG - ==== SSA block analysis pass on 646
2025-07-26 10:00:02,221 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000022F9C638950>
2025-07-26 10:00:02,221 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,224 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,224 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,225 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,225 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,226 - DEBUG - ==== SSA block analysis pass on 648
2025-07-26 10:00:02,226 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000022F9C638950>
2025-07-26 10:00:02,226 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,226 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,226 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 10:00:02,227 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,227 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,227 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 10:00:02,227 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,227 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,228 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,228 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,228 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-26 10:00:02,229 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,229 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,230 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,230 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,230 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,230 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,230 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,231 - DEBUG - ==== SSA block analysis pass on 778
2025-07-26 10:00:02,231 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000022F9C638950>
2025-07-26 10:00:02,231 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,231 - DEBUG - ==== SSA block analysis pass on 782
2025-07-26 10:00:02,231 - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x0000022F9C638950>
2025-07-26 10:00:02,232 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,232 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,232 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,232 - DEBUG - defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x0000022F9C63E3D0>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x0000022F9C63EBD0>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x0000022F9C63F090>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x0000022F9C63F350>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x0000022F9C63F410>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x0000022F9C63F550>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x0000022F9C63F690>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x0000022F9C648210>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x0000022F9C649BD0>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x0000022F9C64A990>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x0000022F9C64BDD0>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x0000022F9C64C2D0>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x0000022F9C64C510>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x0000022F9C649490>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x0000022F9C6487D0>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x0000022F9C649310>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000022F9C64D090>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000022F9C64DDD0>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000022F9C64E790>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000022F9C64F210>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000022F9C37E6D0>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x0000022F9C6580D0>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x0000022F9C658D50>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x0000022F9C65A450>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x0000022F9C65A850>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x0000022F9C65AB10>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x0000022F9C658850>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x0000022F9C658B10>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x0000022F9C6599D0>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000022F9C65BAD0>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000022F9C65C850>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x0000022F9C63D1D0>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000022F9C65D350>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000022F9C65E150>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x0000022F9C65CE10>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x0000022F9C63DB10>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x0000022F9C64AE90>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x0000022F9C64CE90>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x0000022F9C64DB90>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x0000022F9C65B8D0>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x0000022F9C65C650>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x0000022F9C65DC50>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x0000022F9C65DFD0>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x0000022F9C64B790>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x0000022F9C659F90>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x0000022F9C64F710>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x0000022F9C65E650>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x0000022F9C639BD0>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x0000022F9C64CC50>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x0000022F9C64D990>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x0000022F9C64DFD0>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x0000022F9C64F550>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x0000022F9C65B690>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x0000022F9C65C410>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x0000022F9C65CB10>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x0000022F9C65E450>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x0000022F9C648F90>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x0000022F9C64B3D0>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x0000022F9C64F050>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x0000022F9C64E2D0>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x0000022F9C659290>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x0000022F9C6596D0>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x0000022F9C659BD0>,
                                   500)],
             '$const106.19.2': [(<numba.core.ir.Assign object at 0x0000022F9C63DD10>,
                                 0)],
             '$const132.23.2': [(<numba.core.ir.Assign object at 0x0000022F9C63E650>,
                                 0)],
             '$const308.27.3': [(<numba.core.ir.Assign object at 0x0000022F9C64AC90>,
                                 180)],
             '$const580.19.3': [(<numba.core.ir.Assign object at 0x0000022F9C659490>,
                                 500)],
             '$const744.28.3': [(<numba.core.ir.Assign object at 0x0000022F9C65DDD0>,
                                 648)],
             '$const782.0.0': [(<numba.core.ir.Assign object at 0x0000022F9C65D850>,
                                782)],
             '$const80.15.2': [(<numba.core.ir.Assign object at 0x0000022F9C63D410>,
                                0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x0000022F9C639D10>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x0000022F9C63E1D0>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x0000022F9C1FD310>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x0000022F9C649A50>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x0000022F9C345E10>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x0000022F9C65A5D0>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x0000022F9C63CA50>, 0),
                     (<numba.core.ir.Assign object at 0x0000022F9C64A6D0>, 180),
                     (<numba.core.ir.Assign object at 0x0000022F9C658A90>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x0000022F9C63C050>, 0),
                      (<numba.core.ir.Assign object at 0x0000022F9C649210>,
                       180),
                      (<numba.core.ir.Assign object at 0x0000022F9C36A510>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x0000022F9C64AAD0>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x0000022F9C64BA90>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x0000022F9C63C450>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000022F9C6498D0>,
                             180),
                            (<numba.core.ir.Assign object at 0x0000022F9C64FDD0>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x0000022F9C62B990>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000022F9C35F4D0>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000022F9C35FA50>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x0000022F9C65AD90>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x0000022F9C65A190>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x0000022F9C6334D0>, 0),
                   (<numba.core.ir.Assign object at 0x0000022F9C648750>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x0000022F9C1C7D50>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x0000022F9C188BD0>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000022F9C37C9D0>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x0000022F9BB04690>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x0000022F9C63C710>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000022F9C64A090>,
                         180),
                        (<numba.core.ir.Assign object at 0x0000022F9C658410>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x0000022F9C37C690>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x0000022F9C63F950>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x0000022F9C35F710>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x0000022F9C6289D0>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000022F9C63FE90>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x0000022F9C63CD90>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000022F9C64E1D0>,
                         376),
                        (<numba.core.ir.Assign object at 0x0000022F9C65CD10>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x0000022F9C36BC10>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000022F9C37C8D0>, 0)]})
2025-07-26 10:00:02,236 - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x0000022F9C64D290>
2025-07-26 10:00:02,236 - DEBUG - Fix SSA violator on var time_register
2025-07-26 10:00:02,236 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,236 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,237 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,237 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,240 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,241 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,241 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,242 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,242 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,242 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,242 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,243 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,243 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,243 - DEBUG - first assign: time_register
2025-07-26 10:00:02,243 - DEBUG - replaced with: time_register = const(float, 0.0)
2025-07-26 10:00:02,243 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,244 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,244 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,244 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,244 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,244 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,245 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,246 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,246 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,246 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,247 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,247 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,247 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,247 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,247 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,248 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,248 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,248 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,248 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,248 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,249 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,249 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,249 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,250 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,250 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,251 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,251 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,251 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,251 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,251 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,251 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,252 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,252 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,252 - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,252 - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,252 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,255 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,255 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-26 10:00:02,256 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-26 10:00:02,256 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,256 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,256 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,256 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,257 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,257 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,257 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-26 10:00:02,257 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 10:00:02,258 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,259 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,259 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,259 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,259 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,259 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,260 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,260 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,260 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,260 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,260 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,261 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,261 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,261 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,261 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,261 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,263 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,263 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,263 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 10:00:02,263 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,263 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,263 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 10:00:02,264 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,264 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,264 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,264 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,264 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-26 10:00:02,265 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,265 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,265 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,265 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,266 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,267 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,267 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,267 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 10:00:02,267 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-26 10:00:02,268 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,268 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,268 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,268 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,268 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,268 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-26 10:00:02,271 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,271 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,272 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 10:00:02,272 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,272 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,273 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,273 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,273 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,273 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,273 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,274 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,274 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,274 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,275 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,276 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,276 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,276 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,276 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,276 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,277 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,277 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,277 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 10:00:02,277 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,277 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,278 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 10:00:02,278 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,278 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,278 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,279 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,279 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-26 10:00:02,280 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,280 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,280 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,280 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,280 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,281 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,281 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,281 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,281 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,281 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,282 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,282 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,282 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,282 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,283 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,286 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000022F9C346ED0>],
             180: [<numba.core.ir.Assign object at 0x0000022F9C630590>]})
2025-07-26 10:00:02,286 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,286 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,287 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,288 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,288 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,288 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,288 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,288 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,289 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,289 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,289 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,289 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,289 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,290 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,290 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,290 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,290 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,290 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,291 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,292 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,292 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,292 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,292 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,293 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,293 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,293 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,293 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,293 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,294 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,294 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,294 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,294 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,294 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,295 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,295 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,296 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,296 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,297 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,297 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,297 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,297 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,297 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,298 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,298 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,298 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,298 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,298 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,299 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,299 - DEBUG - on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,299 - DEBUG - find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,300 - DEBUG - replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,303 - DEBUG - on stmt: $binop_sub234.12 = time_register - n
2025-07-26 10:00:02,303 - DEBUG - find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
2025-07-26 10:00:02,304 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n
2025-07-26 10:00:02,304 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-26 10:00:02,305 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,305 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,305 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,305 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,305 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,306 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,306 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-26 10:00:02,306 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 10:00:02,306 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,306 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,307 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,307 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,307 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,307 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,307 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,308 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,308 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,308 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,308 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,309 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,309 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,309 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,309 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,309 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,310 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,310 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,310 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 10:00:02,310 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,310 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,311 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 10:00:02,311 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,311 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,312 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,312 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,313 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-26 10:00:02,313 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,313 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,313 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,313 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,313 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,314 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,314 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,314 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 10:00:02,314 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-26 10:00:02,314 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,317 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,317 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,318 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,318 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,318 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-26 10:00:02,318 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,318 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,319 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 10:00:02,319 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,319 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,321 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,321 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,321 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,321 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,321 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,322 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,322 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,322 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,322 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,322 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,323 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,323 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,323 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,323 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,323 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,324 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,325 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 10:00:02,325 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,325 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,325 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 10:00:02,325 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,326 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,326 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,326 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,326 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-26 10:00:02,326 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,327 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,327 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,327 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,327 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,328 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,329 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,329 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,329 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,329 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,329 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,330 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C3468D0>
2025-07-26 10:00:02,330 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,330 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,330 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,330 - DEBUG - Fix SSA violator on var n
2025-07-26 10:00:02,333 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,333 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C36A710>
2025-07-26 10:00:02,334 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,334 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,334 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,334 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,335 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,335 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,335 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,335 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,335 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,336 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,337 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,337 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,337 - DEBUG - first assign: n
2025-07-26 10:00:02,338 - DEBUG - replaced with: n = const(int, 0)
2025-07-26 10:00:02,338 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,338 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,338 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,338 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,338 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,339 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,339 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,339 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,339 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,339 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,340 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,340 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,341 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,341 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,341 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,342 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,342 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,342 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,342 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,342 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,343 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C36A710>
2025-07-26 10:00:02,343 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,343 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,343 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C36A710>
2025-07-26 10:00:02,343 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,344 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,344 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,344 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,345 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,346 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,346 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C36A710>
2025-07-26 10:00:02,346 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,346 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,346 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,347 - DEBUG - on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,349 - DEBUG - replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,349 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-26 10:00:02,350 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-26 10:00:02,350 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,350 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,350 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,351 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,351 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,351 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,351 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-26 10:00:02,351 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 10:00:02,352 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,352 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,352 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,352 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,353 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,354 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,354 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,354 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,354 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C36A710>
2025-07-26 10:00:02,354 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,355 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,355 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,355 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,355 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,355 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,356 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C36A710>
2025-07-26 10:00:02,356 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,356 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,356 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 10:00:02,356 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,357 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,358 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 10:00:02,358 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,358 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,358 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,359 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,359 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-26 10:00:02,359 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,359 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,359 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,360 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,360 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,360 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,360 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C36A710>
2025-07-26 10:00:02,360 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 10:00:02,361 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-26 10:00:02,361 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,362 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,362 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,362 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,363 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,365 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-26 10:00:02,366 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,366 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,367 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 10:00:02,367 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,367 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,367 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,367 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,368 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,368 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,368 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,368 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,368 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C36A710>
2025-07-26 10:00:02,369 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,369 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,369 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,370 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,371 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,371 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,371 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C36A710>
2025-07-26 10:00:02,371 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,371 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,372 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 10:00:02,372 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,372 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,372 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 10:00:02,372 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,373 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,373 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,373 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,373 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-26 10:00:02,374 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,374 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,375 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,375 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,375 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,376 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,376 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,376 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,376 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C36A710>
2025-07-26 10:00:02,376 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,377 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,377 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C36A710>
2025-07-26 10:00:02,377 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,377 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,378 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,379 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000022F9C638650>],
             180: [<numba.core.ir.Assign object at 0x0000022F9C347E90>]})
2025-07-26 10:00:02,382 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,382 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C346510>
2025-07-26 10:00:02,383 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,383 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,383 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,384 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,384 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,384 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,384 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,384 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,385 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,385 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,385 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,385 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,385 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,386 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,386 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,387 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,387 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,387 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,388 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,388 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,388 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,388 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,388 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,389 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,389 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,389 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,389 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,389 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,389 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,390 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,390 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,391 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,391 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C346510>
2025-07-26 10:00:02,391 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,392 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,392 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C346510>
2025-07-26 10:00:02,392 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,392 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,392 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,393 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,393 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,393 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,393 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C346510>
2025-07-26 10:00:02,393 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,394 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,394 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,394 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,394 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n
2025-07-26 10:00:02,395 - DEBUG - find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
2025-07-26 10:00:02,398 - DEBUG - replaced with: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 10:00:02,398 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-26 10:00:02,399 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,400 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,400 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,400 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,400 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,400 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,401 - DEBUG - on stmt: $binop_add310.28 = n + $const308.27.3
2025-07-26 10:00:02,401 - DEBUG - find_def var='n' stmt=$binop_add310.28 = n + $const308.27.3
2025-07-26 10:00:02,401 - DEBUG - replaced with: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 10:00:02,401 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 10:00:02,401 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,402 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,402 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,402 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,402 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,403 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,404 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,404 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,404 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C346510>
2025-07-26 10:00:02,404 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,404 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,405 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,405 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,405 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,405 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,405 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C346510>
2025-07-26 10:00:02,406 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,406 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,406 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 10:00:02,406 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,406 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,407 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 10:00:02,408 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,408 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,408 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,408 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,409 - DEBUG - on stmt: $binop_sub468.27 = n - i
2025-07-26 10:00:02,409 - DEBUG - find_def var='n' stmt=$binop_sub468.27 = n - i
2025-07-26 10:00:02,409 - DEBUG - find_def_from_top label 376
2025-07-26 10:00:02,409 - DEBUG - idom 374 from label 376
2025-07-26 10:00:02,409 - DEBUG - find_def_from_bottom label 374
2025-07-26 10:00:02,410 - DEBUG - find_def_from_top label 374
2025-07-26 10:00:02,410 - DEBUG - idom 180 from label 374
2025-07-26 10:00:02,410 - DEBUG - find_def_from_bottom label 180
2025-07-26 10:00:02,410 - DEBUG - replaced with: $binop_sub468.27 = n.1 - i
2025-07-26 10:00:02,410 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,411 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,413 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,414 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,414 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,414 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,414 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C346510>
2025-07-26 10:00:02,415 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 10:00:02,415 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-26 10:00:02,415 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,416 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,416 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,416 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,417 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,417 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n
2025-07-26 10:00:02,417 - DEBUG - find_def var='n' stmt=$binop_sub576.18 = n_orig - n
2025-07-26 10:00:02,417 - DEBUG - find_def_from_top label 500
2025-07-26 10:00:02,417 - DEBUG - idom 374 from label 500
2025-07-26 10:00:02,418 - DEBUG - find_def_from_bottom label 374
2025-07-26 10:00:02,418 - DEBUG - find_def_from_top label 374
2025-07-26 10:00:02,418 - DEBUG - idom 180 from label 374
2025-07-26 10:00:02,418 - DEBUG - find_def_from_bottom label 180
2025-07-26 10:00:02,418 - DEBUG - replaced with: $binop_sub576.18 = n_orig - n.1
2025-07-26 10:00:02,419 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,419 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,419 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 10:00:02,420 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,420 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,421 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,421 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,421 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,421 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,421 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,422 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,422 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C346510>
2025-07-26 10:00:02,422 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,422 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,422 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,423 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,423 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,423 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,423 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C346510>
2025-07-26 10:00:02,423 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,424 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,425 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 10:00:02,425 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,425 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,425 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 10:00:02,425 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,426 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,426 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,426 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,426 - DEBUG - on stmt: $binop_add740.27 = n + k
2025-07-26 10:00:02,426 - DEBUG - find_def var='n' stmt=$binop_add740.27 = n + k
2025-07-26 10:00:02,427 - DEBUG - find_def_from_top label 648
2025-07-26 10:00:02,429 - DEBUG - idom 646 from label 648
2025-07-26 10:00:02,430 - DEBUG - find_def_from_bottom label 646
2025-07-26 10:00:02,430 - DEBUG - find_def_from_top label 646
2025-07-26 10:00:02,430 - DEBUG - idom 500 from label 646
2025-07-26 10:00:02,430 - DEBUG - find_def_from_bottom label 500
2025-07-26 10:00:02,431 - DEBUG - find_def_from_top label 500
2025-07-26 10:00:02,431 - DEBUG - idom 374 from label 500
2025-07-26 10:00:02,431 - DEBUG - find_def_from_bottom label 374
2025-07-26 10:00:02,431 - DEBUG - find_def_from_top label 374
2025-07-26 10:00:02,431 - DEBUG - idom 180 from label 374
2025-07-26 10:00:02,432 - DEBUG - find_def_from_bottom label 180
2025-07-26 10:00:02,433 - DEBUG - replaced with: $binop_add740.27 = n.1 + k
2025-07-26 10:00:02,433 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,433 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,433 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,434 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,434 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,434 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,434 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,434 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,435 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C346510>
2025-07-26 10:00:02,435 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,435 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,435 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C346510>
2025-07-26 10:00:02,435 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,436 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,436 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,437 - DEBUG - Fix SSA violator on var frac
2025-07-26 10:00:02,437 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,437 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C630150>
2025-07-26 10:00:02,438 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,438 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,438 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,438 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,438 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,438 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,439 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,439 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,439 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,439 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,439 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,440 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,440 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,441 - DEBUG - first assign: frac
2025-07-26 10:00:02,441 - DEBUG - replaced with: frac = const(float, 0.0)
2025-07-26 10:00:02,441 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,442 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,442 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,442 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,442 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,442 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,445 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,445 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,446 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,446 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,446 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,446 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,446 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,447 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,447 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,447 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,447 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,447 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,448 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,448 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C630150>
2025-07-26 10:00:02,448 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,448 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,450 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C630150>
2025-07-26 10:00:02,450 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,450 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,450 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,450 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,451 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,451 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,451 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C630150>
2025-07-26 10:00:02,451 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,451 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,452 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,452 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,452 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 10:00:02,452 - DEBUG - on stmt: frac = scale * $binop_sub234.12
2025-07-26 10:00:02,452 - DEBUG - replaced with: frac.1 = scale * $binop_sub234.12
2025-07-26 10:00:02,454 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,454 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,454 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,454 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,454 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,455 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,455 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 10:00:02,455 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 10:00:02,455 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,455 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,456 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,456 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,456 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,456 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,456 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,457 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,458 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C630150>
2025-07-26 10:00:02,458 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,458 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,458 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,459 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,461 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,462 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,462 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C630150>
2025-07-26 10:00:02,463 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,463 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,463 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 10:00:02,463 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,463 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,464 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 10:00:02,464 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,464 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,464 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,464 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,465 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 10:00:02,465 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,466 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,466 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,467 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,467 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,467 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,467 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C630150>
2025-07-26 10:00:02,467 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 10:00:02,468 - DEBUG - on stmt: frac = $binop_sub504.3
2025-07-26 10:00:02,468 - DEBUG - replaced with: frac.2 = $binop_sub504.3
2025-07-26 10:00:02,468 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,468 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,468 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,469 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,469 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,469 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 10:00:02,470 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,471 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,471 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 10:00:02,471 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,471 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,471 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,472 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,472 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,472 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,472 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,472 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,473 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C630150>
2025-07-26 10:00:02,473 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,473 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,473 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,473 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,474 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,475 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,477 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C630150>
2025-07-26 10:00:02,477 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,478 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,479 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 10:00:02,479 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,479 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,479 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 10:00:02,479 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,480 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,480 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,480 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,480 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 10:00:02,480 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,481 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,481 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,481 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,481 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,481 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,482 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,483 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,483 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C630150>
2025-07-26 10:00:02,483 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,483 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,484 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C630150>
2025-07-26 10:00:02,484 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,484 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,484 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,484 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000022F9C630090>],
             180: [<numba.core.ir.Assign object at 0x0000022F9C62A590>],
             500: [<numba.core.ir.Assign object at 0x0000022F9C62BA50>]})
2025-07-26 10:00:02,485 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,485 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C639450>
2025-07-26 10:00:02,485 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,485 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,485 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,486 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,486 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,487 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,487 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,487 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,488 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,488 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,488 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,488 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,488 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,488 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,489 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,489 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,489 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,489 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,489 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,490 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,490 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,491 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,494 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,494 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,495 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,495 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,496 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,496 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,496 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,496 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,496 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,497 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,497 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C639450>
2025-07-26 10:00:02,497 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,497 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,497 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C639450>
2025-07-26 10:00:02,498 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,498 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,498 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,499 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,500 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,500 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,500 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C639450>
2025-07-26 10:00:02,500 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,501 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,501 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,501 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,501 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 10:00:02,501 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 10:00:02,502 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,502 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-26 10:00:02,502 - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-07-26 10:00:02,502 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,502 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,503 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,504 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,504 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,504 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 10:00:02,504 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 10:00:02,505 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,505 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,505 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,505 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,505 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,506 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,506 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,506 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,506 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C639450>
2025-07-26 10:00:02,506 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,507 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,510 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,510 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,510 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,510 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,511 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C639450>
2025-07-26 10:00:02,511 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,511 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,511 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 10:00:02,512 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,513 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,513 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 10:00:02,513 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,513 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,513 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,514 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,514 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 10:00:02,514 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,514 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,514 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,515 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,515 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,515 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,515 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C639450>
2025-07-26 10:00:02,516 - DEBUG - on stmt: $binop_sub504.3 = scale - frac
2025-07-26 10:00:02,517 - DEBUG - find_def var='frac' stmt=$binop_sub504.3 = scale - frac
2025-07-26 10:00:02,517 - DEBUG - find_def_from_top label 500
2025-07-26 10:00:02,517 - DEBUG - idom 374 from label 500
2025-07-26 10:00:02,517 - DEBUG - find_def_from_bottom label 374
2025-07-26 10:00:02,517 - DEBUG - find_def_from_top label 374
2025-07-26 10:00:02,518 - DEBUG - idom 180 from label 374
2025-07-26 10:00:02,518 - DEBUG - find_def_from_bottom label 180
2025-07-26 10:00:02,518 - DEBUG - replaced with: $binop_sub504.3 = scale - frac.1
2025-07-26 10:00:02,518 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 10:00:02,518 - DEBUG - on stmt: index_frac = frac * num_table
2025-07-26 10:00:02,519 - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-07-26 10:00:02,519 - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-07-26 10:00:02,519 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,519 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,519 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,520 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,521 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 10:00:02,521 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,521 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,521 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 10:00:02,522 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,522 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,522 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,522 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,522 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,523 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,525 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,525 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,526 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C639450>
2025-07-26 10:00:02,526 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,526 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,526 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,527 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,527 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,527 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,527 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C639450>
2025-07-26 10:00:02,527 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,528 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,528 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 10:00:02,528 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,529 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,529 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 10:00:02,529 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,530 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,530 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,530 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,530 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 10:00:02,530 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,531 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,531 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,531 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,531 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,531 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,532 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,532 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,532 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C639450>
2025-07-26 10:00:02,533 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,533 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,534 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C639450>
2025-07-26 10:00:02,534 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,534 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,534 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,534 - DEBUG - Fix SSA violator on var index_frac
2025-07-26 10:00:02,535 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,535 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C62BE50>
2025-07-26 10:00:02,535 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,535 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,535 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,536 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,536 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,536 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,536 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,537 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,538 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,538 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,538 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,538 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,538 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,539 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,541 - DEBUG - first assign: index_frac
2025-07-26 10:00:02,541 - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-07-26 10:00:02,542 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,542 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,542 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,543 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,543 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,543 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,543 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,543 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,544 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,544 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,544 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,544 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,544 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,545 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,546 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,546 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,546 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,546 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,547 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C62BE50>
2025-07-26 10:00:02,547 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,547 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,547 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C62BE50>
2025-07-26 10:00:02,547 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,547 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,548 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,548 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,548 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,548 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,549 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C62BE50>
2025-07-26 10:00:02,549 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,550 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,550 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,550 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,551 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 10:00:02,551 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 10:00:02,551 - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-07-26 10:00:02,551 - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-07-26 10:00:02,551 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,552 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,552 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,552 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,552 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,552 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 10:00:02,553 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 10:00:02,553 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,554 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,554 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,554 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,555 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,557 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,558 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,559 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,559 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C62BE50>
2025-07-26 10:00:02,559 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,559 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,559 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,560 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,560 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,560 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,560 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C62BE50>
2025-07-26 10:00:02,560 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,561 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,561 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 10:00:02,561 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,561 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,562 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 10:00:02,563 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,563 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,563 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,563 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,563 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 10:00:02,564 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,564 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,564 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,564 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,564 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,565 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,565 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C62BE50>
2025-07-26 10:00:02,565 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 10:00:02,565 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 10:00:02,565 - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-07-26 10:00:02,567 - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-07-26 10:00:02,567 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,567 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,567 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,567 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,568 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 10:00:02,568 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,568 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,568 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 10:00:02,568 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,569 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,569 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,569 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,569 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,569 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,570 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,571 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,573 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C62BE50>
2025-07-26 10:00:02,573 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,574 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,574 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,575 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,575 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,575 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,576 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C62BE50>
2025-07-26 10:00:02,576 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,576 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,576 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 10:00:02,576 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,577 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,577 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 10:00:02,577 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,577 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,577 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,578 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,578 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 10:00:02,579 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,579 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,579 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,580 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,580 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,580 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,580 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,581 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,581 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C62BE50>
2025-07-26 10:00:02,581 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,581 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,581 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C62BE50>
2025-07-26 10:00:02,582 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,582 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,582 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,582 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000022F9C633CD0>],
             180: [<numba.core.ir.Assign object at 0x0000022F9C62A7D0>],
             500: [<numba.core.ir.Assign object at 0x0000022F9C37DA50>]})
2025-07-26 10:00:02,583 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,583 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C630F10>
2025-07-26 10:00:02,584 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,584 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,584 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,584 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,584 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,585 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,585 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,585 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,585 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,585 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,586 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,586 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,586 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,586 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,589 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,589 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,590 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,590 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,590 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,591 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,592 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,592 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,592 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,592 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,593 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,593 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,593 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,593 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,593 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,594 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,594 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,594 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,594 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C630F10>
2025-07-26 10:00:02,594 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,595 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,596 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C630F10>
2025-07-26 10:00:02,596 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,596 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,596 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,596 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,597 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,597 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,597 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C630F10>
2025-07-26 10:00:02,597 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,597 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,598 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,598 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,598 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 10:00:02,598 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 10:00:02,599 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 10:00:02,599 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,600 - DEBUG - on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,600 - DEBUG - find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,600 - DEBUG - replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,601 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,601 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-26 10:00:02,601 - DEBUG - replaced with: eta = index_frac.1 - offset
2025-07-26 10:00:02,601 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,601 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,602 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 10:00:02,602 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 10:00:02,602 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,602 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,602 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,605 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,606 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,606 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,606 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,606 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,607 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C630F10>
2025-07-26 10:00:02,607 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,607 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,608 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,609 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,609 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,609 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,609 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C630F10>
2025-07-26 10:00:02,609 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,610 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,610 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 10:00:02,610 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,610 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,610 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 10:00:02,611 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,611 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,611 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,611 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,612 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 10:00:02,613 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,613 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,613 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,613 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,613 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,614 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,614 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C630F10>
2025-07-26 10:00:02,614 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 10:00:02,614 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 10:00:02,614 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 10:00:02,615 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,615 - DEBUG - on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,615 - DEBUG - find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,615 - DEBUG - replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,616 - DEBUG - on stmt: eta = index_frac - offset
2025-07-26 10:00:02,617 - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-07-26 10:00:02,617 - DEBUG - replaced with: eta = index_frac.2 - offset
2025-07-26 10:00:02,617 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,617 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 10:00:02,617 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,618 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,618 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 10:00:02,618 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,618 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,618 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,619 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,621 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,621 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,622 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,622 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,622 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C630F10>
2025-07-26 10:00:02,623 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,623 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,623 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,623 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,623 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,624 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,624 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C630F10>
2025-07-26 10:00:02,625 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,625 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,625 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 10:00:02,626 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,626 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,626 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 10:00:02,626 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,627 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,627 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,627 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,627 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 10:00:02,628 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,628 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,628 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,629 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,629 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,629 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,630 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,630 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,630 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C630F10>
2025-07-26 10:00:02,630 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,630 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,631 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C630F10>
2025-07-26 10:00:02,631 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,631 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,631 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,631 - DEBUG - Fix SSA violator on var offset
2025-07-26 10:00:02,632 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,632 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C0B1010>
2025-07-26 10:00:02,632 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,633 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,633 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,634 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,634 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,634 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,634 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,634 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,635 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,637 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,637 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,638 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,638 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,638 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,638 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,639 - DEBUG - first assign: offset
2025-07-26 10:00:02,639 - DEBUG - replaced with: offset = const(int, 0)
2025-07-26 10:00:02,639 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,639 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,639 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,640 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,640 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,640 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,640 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,640 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,642 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,642 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,642 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,642 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,642 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,643 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,643 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,643 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,643 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,643 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C0B1010>
2025-07-26 10:00:02,644 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,644 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,644 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C0B1010>
2025-07-26 10:00:02,644 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,644 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,646 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,646 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,646 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,646 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,647 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C0B1010>
2025-07-26 10:00:02,647 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,647 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,647 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,647 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,648 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 10:00:02,648 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 10:00:02,648 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 10:00:02,648 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,648 - DEBUG - on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,649 - DEBUG - replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,649 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-26 10:00:02,650 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,650 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,650 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 10:00:02,651 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 10:00:02,653 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,653 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,654 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,655 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,655 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,655 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,655 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,655 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,656 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C0B1010>
2025-07-26 10:00:02,656 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,656 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,656 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,656 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,656 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,657 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,657 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C0B1010>
2025-07-26 10:00:02,657 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,658 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,658 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 10:00:02,659 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,659 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,659 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 10:00:02,659 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,659 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,660 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,660 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,660 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 10:00:02,660 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,660 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,661 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,661 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,661 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,661 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,662 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C0B1010>
2025-07-26 10:00:02,663 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 10:00:02,663 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 10:00:02,663 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 10:00:02,663 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,663 - DEBUG - on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,664 - DEBUG - replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,664 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-26 10:00:02,664 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,664 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 10:00:02,664 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,665 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,665 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 10:00:02,665 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,665 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,666 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,667 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,669 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,670 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,671 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,671 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,671 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C0B1010>
2025-07-26 10:00:02,672 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,672 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,672 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,672 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,672 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,673 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,673 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C0B1010>
2025-07-26 10:00:02,673 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,673 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,673 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 10:00:02,674 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,675 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,675 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 10:00:02,675 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,675 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,676 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,676 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,676 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 10:00:02,676 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,676 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,677 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,677 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,677 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,677 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,677 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,678 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,678 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C0B1010>
2025-07-26 10:00:02,679 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,679 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,680 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C0B1010>
2025-07-26 10:00:02,680 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,680 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,680 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,680 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000022F9C630F10>],
             180: [<numba.core.ir.Assign object at 0x0000022F9C62BD90>],
             500: [<numba.core.ir.Assign object at 0x0000022F9C37CF10>]})
2025-07-26 10:00:02,681 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,681 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C345550>
2025-07-26 10:00:02,681 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,681 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,681 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,682 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,682 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,682 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,683 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,686 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,686 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,687 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,688 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,688 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,688 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,688 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,688 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,689 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,689 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,689 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,689 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,689 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,690 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,690 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,690 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,690 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,691 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,692 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,692 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,692 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,692 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,692 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,693 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,693 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,693 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C345550>
2025-07-26 10:00:02,693 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,693 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,694 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C345550>
2025-07-26 10:00:02,694 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,694 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,694 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,695 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,695 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,696 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,696 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C345550>
2025-07-26 10:00:02,696 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,696 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,696 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,697 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,697 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 10:00:02,697 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 10:00:02,697 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 10:00:02,697 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,698 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,698 - DEBUG - on stmt: eta = index_frac.1 - offset
2025-07-26 10:00:02,698 - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-07-26 10:00:02,698 - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-07-26 10:00:02,698 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,701 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,701 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 10:00:02,702 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset
2025-07-26 10:00:02,702 - DEBUG - find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
2025-07-26 10:00:02,702 - DEBUG - replaced with: $binop_sub318.31 = nwin - offset.1
2025-07-26 10:00:02,702 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,702 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,703 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,703 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,703 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,704 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,704 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,704 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,705 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C345550>
2025-07-26 10:00:02,705 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,705 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,705 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,705 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,706 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,706 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,706 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C345550>
2025-07-26 10:00:02,706 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,706 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,707 - DEBUG - on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-07-26 10:00:02,707 - DEBUG - find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
2025-07-26 10:00:02,707 - DEBUG - find_def_from_top label 376
2025-07-26 10:00:02,707 - DEBUG - idom 374 from label 376
2025-07-26 10:00:02,708 - DEBUG - find_def_from_bottom label 374
2025-07-26 10:00:02,709 - DEBUG - find_def_from_top label 374
2025-07-26 10:00:02,709 - DEBUG - idom 180 from label 374
2025-07-26 10:00:02,709 - DEBUG - find_def_from_bottom label 180
2025-07-26 10:00:02,709 - DEBUG - replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-26 10:00:02,709 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,709 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,710 - DEBUG - on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-07-26 10:00:02,710 - DEBUG - find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
2025-07-26 10:00:02,710 - DEBUG - find_def_from_top label 376
2025-07-26 10:00:02,710 - DEBUG - idom 374 from label 376
2025-07-26 10:00:02,710 - DEBUG - find_def_from_bottom label 374
2025-07-26 10:00:02,711 - DEBUG - find_def_from_top label 374
2025-07-26 10:00:02,711 - DEBUG - idom 180 from label 374
2025-07-26 10:00:02,711 - DEBUG - find_def_from_bottom label 180
2025-07-26 10:00:02,711 - DEBUG - replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-26 10:00:02,712 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,713 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,713 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,713 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,713 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 10:00:02,713 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,714 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,714 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,714 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,714 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,714 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,715 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C345550>
2025-07-26 10:00:02,717 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 10:00:02,718 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 10:00:02,718 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 10:00:02,718 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,718 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,719 - DEBUG - on stmt: eta = index_frac.2 - offset
2025-07-26 10:00:02,719 - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-07-26 10:00:02,719 - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-07-26 10:00:02,719 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,720 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 10:00:02,721 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,721 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,721 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset
2025-07-26 10:00:02,721 - DEBUG - find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
2025-07-26 10:00:02,722 - DEBUG - replaced with: $binop_sub590.23 = nwin - offset.2
2025-07-26 10:00:02,722 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,722 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,722 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,722 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,723 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,723 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,723 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,723 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,723 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C345550>
2025-07-26 10:00:02,724 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,724 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,725 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,725 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,725 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,725 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,726 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C345550>
2025-07-26 10:00:02,726 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,726 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,726 - DEBUG - on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-07-26 10:00:02,726 - DEBUG - find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
2025-07-26 10:00:02,727 - DEBUG - find_def_from_top label 648
2025-07-26 10:00:02,727 - DEBUG - idom 646 from label 648
2025-07-26 10:00:02,727 - DEBUG - find_def_from_bottom label 646
2025-07-26 10:00:02,727 - DEBUG - find_def_from_top label 646
2025-07-26 10:00:02,727 - DEBUG - idom 500 from label 646
2025-07-26 10:00:02,728 - DEBUG - find_def_from_bottom label 500
2025-07-26 10:00:02,728 - DEBUG - replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-26 10:00:02,729 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,729 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,730 - DEBUG - on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-07-26 10:00:02,730 - DEBUG - find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
2025-07-26 10:00:02,730 - DEBUG - find_def_from_top label 648
2025-07-26 10:00:02,730 - DEBUG - idom 646 from label 648
2025-07-26 10:00:02,730 - DEBUG - find_def_from_bottom label 646
2025-07-26 10:00:02,731 - DEBUG - find_def_from_top label 646
2025-07-26 10:00:02,733 - DEBUG - idom 500 from label 646
2025-07-26 10:00:02,733 - DEBUG - find_def_from_bottom label 500
2025-07-26 10:00:02,734 - DEBUG - replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-26 10:00:02,734 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,734 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,734 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,735 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,735 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 10:00:02,735 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,735 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,735 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,736 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,736 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,736 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,736 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,737 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,737 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C345550>
2025-07-26 10:00:02,738 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,738 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,738 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C345550>
2025-07-26 10:00:02,738 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,738 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,739 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,739 - DEBUG - Fix SSA violator on var eta
2025-07-26 10:00:02,739 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,739 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C2B6810>
2025-07-26 10:00:02,739 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,740 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,740 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,740 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,740 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,740 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,742 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,742 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,742 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,742 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,742 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,743 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,743 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,743 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,743 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,743 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,744 - DEBUG - first assign: eta
2025-07-26 10:00:02,744 - DEBUG - replaced with: eta = const(float, 0.0)
2025-07-26 10:00:02,744 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,744 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,744 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,745 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,746 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,746 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,746 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,746 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,747 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,749 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,750 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,750 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,750 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,751 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,751 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,751 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,751 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C2B6810>
2025-07-26 10:00:02,751 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,752 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,752 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C2B6810>
2025-07-26 10:00:02,752 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,752 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,752 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,753 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,753 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,754 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,754 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C2B6810>
2025-07-26 10:00:02,755 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,755 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,755 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,755 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,755 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 10:00:02,756 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 10:00:02,756 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 10:00:02,756 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,756 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,756 - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-07-26 10:00:02,757 - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-07-26 10:00:02,757 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,757 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,759 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 10:00:02,759 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-26 10:00:02,759 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,759 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,759 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,760 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,760 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,760 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,760 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,760 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,761 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C2B6810>
2025-07-26 10:00:02,761 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,761 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,761 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,762 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,763 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,765 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,766 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C2B6810>
2025-07-26 10:00:02,766 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,767 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,767 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-26 10:00:02,767 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,767 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,767 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-26 10:00:02,768 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,768 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,768 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,768 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,768 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 10:00:02,769 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,769 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,769 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,769 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,770 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,770 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,771 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C2B6810>
2025-07-26 10:00:02,771 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 10:00:02,771 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 10:00:02,771 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 10:00:02,772 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,772 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,772 - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-07-26 10:00:02,772 - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-07-26 10:00:02,772 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,773 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 10:00:02,773 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,773 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,773 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-26 10:00:02,773 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,774 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,774 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,775 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,775 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,775 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,776 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,776 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,776 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C2B6810>
2025-07-26 10:00:02,776 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,776 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,777 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,777 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,777 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,777 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,777 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C2B6810>
2025-07-26 10:00:02,778 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,778 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,779 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-26 10:00:02,782 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,782 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,782 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-26 10:00:02,782 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,783 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,784 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,784 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,784 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 10:00:02,784 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,784 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,785 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,785 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,785 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,785 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,785 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,786 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,786 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C2B6810>
2025-07-26 10:00:02,786 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,786 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,787 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C2B6810>
2025-07-26 10:00:02,788 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,788 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,788 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,788 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000022F9C37D4D0>],
             180: [<numba.core.ir.Assign object at 0x0000022F9C37DAD0>],
             500: [<numba.core.ir.Assign object at 0x0000022F9C6587D0>]})
2025-07-26 10:00:02,788 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,789 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C37D410>
2025-07-26 10:00:02,789 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,789 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,789 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,789 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,790 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,790 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,790 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,790 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,791 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,792 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,792 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,792 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,792 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,792 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,793 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,793 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,793 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,793 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,793 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,794 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,794 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,794 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,794 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,795 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,797 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,798 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,798 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,798 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,798 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,799 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,799 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,800 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,800 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C37D410>
2025-07-26 10:00:02,800 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,801 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,801 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C37D410>
2025-07-26 10:00:02,801 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,801 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,801 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,801 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,802 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,802 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,802 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C37D410>
2025-07-26 10:00:02,802 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,802 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,803 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,803 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,804 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 10:00:02,804 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 10:00:02,804 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 10:00:02,805 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,805 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,805 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-26 10:00:02,805 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,805 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,806 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 10:00:02,806 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-26 10:00:02,806 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,806 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,806 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,807 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,807 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,807 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,807 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,808 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,808 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C37D410>
2025-07-26 10:00:02,809 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,809 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,809 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,809 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,809 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,810 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,810 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C37D410>
2025-07-26 10:00:02,810 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,810 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,810 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-26 10:00:02,811 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,814 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,814 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-26 10:00:02,814 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,814 - DEBUG - on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,815 - DEBUG - find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
2025-07-26 10:00:02,815 - DEBUG - find_def_from_top label 376
2025-07-26 10:00:02,815 - DEBUG - idom 374 from label 376
2025-07-26 10:00:02,815 - DEBUG - find_def_from_bottom label 374
2025-07-26 10:00:02,815 - DEBUG - find_def_from_top label 374
2025-07-26 10:00:02,817 - DEBUG - idom 180 from label 374
2025-07-26 10:00:02,817 - DEBUG - find_def_from_bottom label 180
2025-07-26 10:00:02,817 - DEBUG - replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-26 10:00:02,817 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,817 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,818 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 10:00:02,818 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,818 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,818 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,818 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,819 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,819 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,819 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C37D410>
2025-07-26 10:00:02,819 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 10:00:02,819 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 10:00:02,820 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 10:00:02,821 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,821 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,821 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-26 10:00:02,821 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,822 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 10:00:02,822 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,822 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,822 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-26 10:00:02,822 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,823 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,823 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,823 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,823 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,823 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,824 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,824 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,825 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C37D410>
2025-07-26 10:00:02,825 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,825 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,825 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,826 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,826 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,826 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,826 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C37D410>
2025-07-26 10:00:02,826 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,827 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,829 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-26 10:00:02,830 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,830 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,830 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-26 10:00:02,830 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,831 - DEBUG - on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,831 - DEBUG - find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
2025-07-26 10:00:02,831 - DEBUG - find_def_from_top label 648
2025-07-26 10:00:02,831 - DEBUG - idom 646 from label 648
2025-07-26 10:00:02,831 - DEBUG - find_def_from_bottom label 646
2025-07-26 10:00:02,832 - DEBUG - find_def_from_top label 646
2025-07-26 10:00:02,832 - DEBUG - idom 500 from label 646
2025-07-26 10:00:02,832 - DEBUG - find_def_from_bottom label 500
2025-07-26 10:00:02,834 - DEBUG - replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-26 10:00:02,834 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,834 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,834 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 10:00:02,834 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,835 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,835 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,835 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,835 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,835 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,836 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,836 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,836 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C37D410>
2025-07-26 10:00:02,836 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,836 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,837 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C37D410>
2025-07-26 10:00:02,838 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,838 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,838 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,838 - DEBUG - Fix SSA violator on var weight
2025-07-26 10:00:02,838 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,839 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C658E10>
2025-07-26 10:00:02,839 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,839 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,839 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,839 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,840 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,840 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,840 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,840 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,841 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,842 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,842 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,842 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,842 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,843 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,845 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,846 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,846 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,846 - DEBUG - first assign: weight
2025-07-26 10:00:02,847 - DEBUG - replaced with: weight = const(float, 0.0)
2025-07-26 10:00:02,847 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,847 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,847 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,847 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,848 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,848 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,848 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,848 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,849 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,849 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,849 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,850 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,850 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,851 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,851 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,851 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C658E10>
2025-07-26 10:00:02,851 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,851 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,852 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C658E10>
2025-07-26 10:00:02,852 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,852 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,852 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,852 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,852 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,852 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,852 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C658E10>
2025-07-26 10:00:02,852 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,853 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,853 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,853 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,853 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 10:00:02,853 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 10:00:02,853 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 10:00:02,853 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,853 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,853 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-26 10:00:02,853 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,853 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,853 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 10:00:02,853 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-26 10:00:02,854 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,854 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,854 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,854 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,854 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,854 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,854 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,854 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,854 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C658E10>
2025-07-26 10:00:02,854 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,854 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,854 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,854 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,854 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,854 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,854 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C658E10>
2025-07-26 10:00:02,854 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,854 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,855 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-26 10:00:02,855 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,855 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,855 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-26 10:00:02,855 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,855 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-26 10:00:02,855 - DEBUG - on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,855 - DEBUG - replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,855 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,855 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 10:00:02,855 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,855 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,855 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,855 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,855 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,855 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,855 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C658E10>
2025-07-26 10:00:02,855 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 10:00:02,855 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 10:00:02,856 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 10:00:02,856 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,856 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,856 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-26 10:00:02,856 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,856 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 10:00:02,856 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,856 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,856 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-26 10:00:02,856 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,856 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,856 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,856 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,856 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,856 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,856 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,856 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,856 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C658E10>
2025-07-26 10:00:02,856 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,856 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,857 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,857 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,857 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,857 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,857 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C658E10>
2025-07-26 10:00:02,857 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,857 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,857 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-26 10:00:02,857 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,857 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,857 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-26 10:00:02,857 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,857 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-26 10:00:02,857 - DEBUG - on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,858 - DEBUG - replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,858 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,858 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 10:00:02,858 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,858 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,858 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,858 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,858 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,858 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,858 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,858 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,858 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C658E10>
2025-07-26 10:00:02,858 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,858 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,858 - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x0000022F9C658E10>
2025-07-26 10:00:02,859 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,862 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,862 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:02,862 - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000022F9C345350>],
             376: [<numba.core.ir.Assign object at 0x0000022F9C37CC50>],
             648: [<numba.core.ir.Assign object at 0x0000022F9C64AB90>]})
2025-07-26 10:00:02,862 - DEBUG - ==== SSA block rewrite pass on 0
2025-07-26 10:00:02,862 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C62B250>
2025-07-26 10:00:02,862 - DEBUG - on stmt: x = arg(0, name=x)
2025-07-26 10:00:02,862 - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-07-26 10:00:02,862 - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-07-26 10:00:02,862 - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-07-26 10:00:02,862 - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-07-26 10:00:02,862 - DEBUG - on stmt: scale = arg(5, name=scale)
2025-07-26 10:00:02,862 - DEBUG - on stmt: y = arg(6, name=y)
2025-07-26 10:00:02,862 - DEBUG - on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-07-26 10:00:02,862 - DEBUG - on stmt: $binop_mul20.4 = scale * num_table
2025-07-26 10:00:02,863 - DEBUG - on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,863 - DEBUG - on stmt: time_register = const(float, 0.0)
2025-07-26 10:00:02,863 - DEBUG - on stmt: n = const(int, 0)
2025-07-26 10:00:02,863 - DEBUG - on stmt: frac = const(float, 0.0)
2025-07-26 10:00:02,863 - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-07-26 10:00:02,863 - DEBUG - on stmt: offset = const(int, 0)
2025-07-26 10:00:02,863 - DEBUG - on stmt: eta = const(float, 0.0)
2025-07-26 10:00:02,863 - DEBUG - on stmt: weight = const(float, 0.0)
2025-07-26 10:00:02,863 - DEBUG - on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-07-26 10:00:02,863 - DEBUG - on stmt: $const80.15.2 = const(int, 0)
2025-07-26 10:00:02,863 - DEBUG - on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,863 - DEBUG - on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-07-26 10:00:02,863 - DEBUG - on stmt: $const106.19.2 = const(int, 0)
2025-07-26 10:00:02,863 - DEBUG - on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,863 - DEBUG - on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-07-26 10:00:02,863 - DEBUG - on stmt: $const132.23.2 = const(int, 0)
2025-07-26 10:00:02,863 - DEBUG - on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
2025-07-26 10:00:02,863 - DEBUG - on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-07-26 10:00:02,863 - DEBUG - on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,863 - DEBUG - on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-07-26 10:00:02,864 - DEBUG - on stmt: $phi178.0 = $174get_iter.29
2025-07-26 10:00:02,864 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,864 - DEBUG - ==== SSA block rewrite pass on 176
2025-07-26 10:00:02,864 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C62B250>
2025-07-26 10:00:02,864 - DEBUG - on stmt: jump 178
2025-07-26 10:00:02,864 - DEBUG - ==== SSA block rewrite pass on 178
2025-07-26 10:00:02,864 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C62B250>
2025-07-26 10:00:02,864 - DEBUG - on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-07-26 10:00:02,864 - DEBUG - on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-07-26 10:00:02,864 - DEBUG - on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-07-26 10:00:02,864 - DEBUG - on stmt: $phi180.1 = $178for_iter.2
2025-07-26 10:00:02,864 - DEBUG - on stmt: branch $178for_iter.3, 180, 782
2025-07-26 10:00:02,864 - DEBUG - ==== SSA block rewrite pass on 180
2025-07-26 10:00:02,864 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C62B250>
2025-07-26 10:00:02,864 - DEBUG - on stmt: t = $phi180.1
2025-07-26 10:00:02,864 - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,864 - DEBUG - on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-07-26 10:00:02,864 - DEBUG - on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,864 - DEBUG - on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-07-26 10:00:02,864 - DEBUG - on stmt: frac.1 = scale * $binop_sub234.12
2025-07-26 10:00:02,864 - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-07-26 10:00:02,865 - DEBUG - on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-07-26 10:00:02,865 - DEBUG - on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,865 - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-07-26 10:00:02,865 - DEBUG - on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-07-26 10:00:02,865 - DEBUG - on stmt: $const308.27.3 = const(int, 1)
2025-07-26 10:00:02,865 - DEBUG - on stmt: $binop_add310.28 = n.1 + $const308.27.3
2025-07-26 10:00:02,865 - DEBUG - on stmt: $binop_sub318.31 = nwin - offset.1
2025-07-26 10:00:02,865 - DEBUG - on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-07-26 10:00:02,865 - DEBUG - on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,865 - DEBUG - on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-07-26 10:00:02,865 - DEBUG - on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,865 - DEBUG - on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-07-26 10:00:02,866 - DEBUG - on stmt: $phi374.1 = $372get_iter.39
2025-07-26 10:00:02,866 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,866 - DEBUG - ==== SSA block rewrite pass on 374
2025-07-26 10:00:02,866 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C62B250>
2025-07-26 10:00:02,866 - DEBUG - on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-07-26 10:00:02,866 - DEBUG - on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-07-26 10:00:02,866 - DEBUG - on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-07-26 10:00:02,866 - DEBUG - on stmt: $phi376.2 = $374for_iter.3
2025-07-26 10:00:02,866 - DEBUG - on stmt: branch $374for_iter.4, 376, 500
2025-07-26 10:00:02,866 - DEBUG - ==== SSA block rewrite pass on 376
2025-07-26 10:00:02,866 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C62B250>
2025-07-26 10:00:02,866 - DEBUG - on stmt: i = $phi376.2
2025-07-26 10:00:02,866 - DEBUG - on stmt: $binop_mul386.7 = i * index_step
2025-07-26 10:00:02,866 - DEBUG - on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-07-26 10:00:02,866 - DEBUG - on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,866 - DEBUG - on stmt: $binop_mul414.15 = i * index_step
2025-07-26 10:00:02,866 - DEBUG - on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-07-26 10:00:02,867 - DEBUG - on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,867 - DEBUG - on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-07-26 10:00:02,867 - DEBUG - on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-07-26 10:00:02,867 - DEBUG - on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,867 - DEBUG - on stmt: $binop_sub468.27 = n.1 - i
2025-07-26 10:00:02,867 - DEBUG - on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-07-26 10:00:02,867 - DEBUG - on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,867 - DEBUG - find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
2025-07-26 10:00:02,867 - DEBUG - replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
2025-07-26 10:00:02,867 - DEBUG - on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,867 - DEBUG - on stmt: y[t] = $binop_iadd486.30
2025-07-26 10:00:02,867 - DEBUG - on stmt: jump 374
2025-07-26 10:00:02,867 - DEBUG - ==== SSA block rewrite pass on 500
2025-07-26 10:00:02,867 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C62B250>
2025-07-26 10:00:02,867 - DEBUG - on stmt: $binop_sub504.3 = scale - frac.1
2025-07-26 10:00:02,867 - DEBUG - on stmt: frac.2 = $binop_sub504.3
2025-07-26 10:00:02,867 - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-07-26 10:00:02,867 - DEBUG - on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-07-26 10:00:02,867 - DEBUG - on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,868 - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-07-26 10:00:02,868 - DEBUG - on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-07-26 10:00:02,868 - DEBUG - on stmt: $binop_sub576.18 = n_orig - n.1
2025-07-26 10:00:02,868 - DEBUG - on stmt: $const580.19.3 = const(int, 1)
2025-07-26 10:00:02,868 - DEBUG - on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
2025-07-26 10:00:02,868 - DEBUG - on stmt: $binop_sub590.23 = nwin - offset.2
2025-07-26 10:00:02,868 - DEBUG - on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-07-26 10:00:02,868 - DEBUG - on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,868 - DEBUG - on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-07-26 10:00:02,868 - DEBUG - on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-07-26 10:00:02,868 - DEBUG - on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-07-26 10:00:02,868 - DEBUG - on stmt: $phi646.1 = $644get_iter.31
2025-07-26 10:00:02,868 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,868 - DEBUG - ==== SSA block rewrite pass on 646
2025-07-26 10:00:02,868 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C62B250>
2025-07-26 10:00:02,868 - DEBUG - on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-07-26 10:00:02,868 - DEBUG - on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-07-26 10:00:02,868 - DEBUG - on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-07-26 10:00:02,868 - DEBUG - on stmt: $phi648.2 = $646for_iter.3
2025-07-26 10:00:02,869 - DEBUG - on stmt: branch $646for_iter.4, 648, 778
2025-07-26 10:00:02,869 - DEBUG - ==== SSA block rewrite pass on 648
2025-07-26 10:00:02,869 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C62B250>
2025-07-26 10:00:02,869 - DEBUG - on stmt: k = $phi648.2
2025-07-26 10:00:02,869 - DEBUG - on stmt: $binop_mul658.7 = k * index_step
2025-07-26 10:00:02,869 - DEBUG - on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-07-26 10:00:02,869 - DEBUG - on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-07-26 10:00:02,869 - DEBUG - on stmt: $binop_mul686.15 = k * index_step
2025-07-26 10:00:02,869 - DEBUG - on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-07-26 10:00:02,869 - DEBUG - on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-07-26 10:00:02,869 - DEBUG - on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-07-26 10:00:02,869 - DEBUG - on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-07-26 10:00:02,869 - DEBUG - on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-07-26 10:00:02,869 - DEBUG - on stmt: $binop_add740.27 = n.1 + k
2025-07-26 10:00:02,869 - DEBUG - on stmt: $const744.28.3 = const(int, 1)
2025-07-26 10:00:02,870 - DEBUG - on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
2025-07-26 10:00:02,870 - DEBUG - on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-07-26 10:00:02,870 - DEBUG - on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,870 - DEBUG - find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
2025-07-26 10:00:02,870 - DEBUG - replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
2025-07-26 10:00:02,870 - DEBUG - on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-07-26 10:00:02,870 - DEBUG - on stmt: y[t] = $binop_iadd764.32
2025-07-26 10:00:02,870 - DEBUG - on stmt: jump 646
2025-07-26 10:00:02,870 - DEBUG - ==== SSA block rewrite pass on 778
2025-07-26 10:00:02,870 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C62B250>
2025-07-26 10:00:02,870 - DEBUG - on stmt: jump 176
2025-07-26 10:00:02,870 - DEBUG - ==== SSA block rewrite pass on 782
2025-07-26 10:00:02,870 - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x0000022F9C62B250>
2025-07-26 10:00:02,870 - DEBUG - on stmt: $const782.0.0 = const(NoneType, None)
2025-07-26 10:00:02,870 - DEBUG - on stmt: $784return_value.1 = cast(value=$const782.0.0)
2025-07-26 10:00:02,870 - DEBUG - on stmt: return $784return_value.1
2025-07-26 10:00:03,254 - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	RESUME(arg=0, lineno=416)
           4	LOAD_FAST(arg=0, lineno=419)
           6	LOAD_CONST(arg=1, lineno=419)
           8	BINARY_SUBSCR(arg=None, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=2, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          32	BINARY_OP(arg=0, lineno=419)
          36	LOAD_CONST(arg=3, lineno=419)
          38	LOAD_FAST(arg=0, lineno=419)
          40	LOAD_CONST(arg=4, lineno=419)
          42	BINARY_SUBSCR(arg=None, lineno=419)
          52	BINARY_OP(arg=5, lineno=419)
          56	BINARY_OP(arg=10, lineno=419)
          60	STORE_FAST(arg=1, lineno=419)
          62	LOAD_FAST(arg=0, lineno=420)
          64	LOAD_CONST(arg=1, lineno=420)
          66	BINARY_SUBSCR(arg=None, lineno=420)
          76	LOAD_FAST(arg=0, lineno=420)
          78	LOAD_CONST(arg=2, lineno=420)
          80	BINARY_SUBSCR(arg=None, lineno=420)
          90	BINARY_OP(arg=10, lineno=420)
          94	LOAD_CONST(arg=3, lineno=420)
          96	BINARY_OP(arg=11, lineno=420)
         100	STORE_FAST(arg=2, lineno=420)
         102	LOAD_GLOBAL(arg=1, lineno=422)
         114	LOAD_ATTR(arg=1, lineno=422)
         124	LOAD_FAST(arg=2, lineno=422)
         126	PRECALL(arg=1, lineno=422)
         130	CALL(arg=1, lineno=422)
         140	LOAD_GLOBAL(arg=1, lineno=422)
         152	LOAD_ATTR(arg=1, lineno=422)
         162	LOAD_FAST(arg=1, lineno=422)
         164	PRECALL(arg=1, lineno=422)
         168	CALL(arg=1, lineno=422)
         178	COMPARE_OP(arg=5, lineno=422)
         184	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
         186	LOAD_CONST(arg=4, lineno=425)
         188	RETURN_VALUE(arg=None, lineno=425)
>        190	LOAD_FAST(arg=2, lineno=427)
         192	UNARY_NEGATIVE(arg=None, lineno=427)
         194	LOAD_FAST(arg=1, lineno=427)
         196	BINARY_OP(arg=11, lineno=427)
         200	RETURN_VALUE(arg=None, lineno=427)
2025-07-26 10:00:03,254 - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-07-26 10:00:03,256 - DEBUG - stack: []
2025-07-26 10:00:03,256 - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-07-26 10:00:03,256 - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-07-26 10:00:03,256 - DEBUG - stack []
2025-07-26 10:00:03,257 - DEBUG - dispatch pc=2, inst=RESUME(arg=0, lineno=416)
2025-07-26 10:00:03,257 - DEBUG - stack []
2025-07-26 10:00:03,257 - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-26 10:00:03,257 - DEBUG - stack []
2025-07-26 10:00:03,257 - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=419)
2025-07-26 10:00:03,258 - DEBUG - stack ['$x4.0']
2025-07-26 10:00:03,258 - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-26 10:00:03,258 - DEBUG - stack ['$x4.0', '$const6.1.1']
2025-07-26 10:00:03,258 - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-26 10:00:03,258 - DEBUG - stack ['$8binary_subscr.2']
2025-07-26 10:00:03,258 - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=419)
2025-07-26 10:00:03,258 - DEBUG - stack ['$8binary_subscr.2', '$x18.3']
2025-07-26 10:00:03,258 - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-26 10:00:03,258 - DEBUG - stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
2025-07-26 10:00:03,258 - DEBUG - dispatch pc=32, inst=BINARY_OP(arg=0, lineno=419)
2025-07-26 10:00:03,258 - DEBUG - stack ['$8binary_subscr.2', '$22binary_subscr.5']
2025-07-26 10:00:03,258 - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=419)
2025-07-26 10:00:03,259 - DEBUG - stack ['$binop_add32.6']
2025-07-26 10:00:03,259 - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=419)
2025-07-26 10:00:03,259 - DEBUG - stack ['$binop_add32.6', '$const36.7.3']
2025-07-26 10:00:03,259 - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=419)
2025-07-26 10:00:03,259 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8']
2025-07-26 10:00:03,259 - DEBUG - dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-07-26 10:00:03,259 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$x38.8', '$const40.9.4']
2025-07-26 10:00:03,259 - DEBUG - dispatch pc=52, inst=BINARY_OP(arg=5, lineno=419)
2025-07-26 10:00:03,259 - DEBUG - stack ['$binop_add32.6', '$const36.7.3', '$42binary_subscr.10']
2025-07-26 10:00:03,259 - DEBUG - dispatch pc=56, inst=BINARY_OP(arg=10, lineno=419)
2025-07-26 10:00:03,259 - DEBUG - stack ['$binop_add32.6', '$binop_mul52.11']
2025-07-26 10:00:03,259 - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=1, lineno=419)
2025-07-26 10:00:03,259 - DEBUG - stack ['$binop_sub56.12']
2025-07-26 10:00:03,259 - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-26 10:00:03,259 - DEBUG - stack []
2025-07-26 10:00:03,259 - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=420)
2025-07-26 10:00:03,259 - DEBUG - stack ['$x62.13']
2025-07-26 10:00:03,259 - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-26 10:00:03,259 - DEBUG - stack ['$x62.13', '$const64.14.1']
2025-07-26 10:00:03,260 - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=420)
2025-07-26 10:00:03,260 - DEBUG - stack ['$66binary_subscr.15']
2025-07-26 10:00:03,260 - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=420)
2025-07-26 10:00:03,260 - DEBUG - stack ['$66binary_subscr.15', '$x76.16']
2025-07-26 10:00:03,260 - DEBUG - dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-07-26 10:00:03,260 - DEBUG - stack ['$66binary_subscr.15', '$x76.16', '$const78.17.2']
2025-07-26 10:00:03,260 - DEBUG - dispatch pc=90, inst=BINARY_OP(arg=10, lineno=420)
2025-07-26 10:00:03,260 - DEBUG - stack ['$66binary_subscr.15', '$80binary_subscr.18']
2025-07-26 10:00:03,260 - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=3, lineno=420)
2025-07-26 10:00:03,260 - DEBUG - stack ['$binop_sub90.19']
2025-07-26 10:00:03,260 - DEBUG - dispatch pc=96, inst=BINARY_OP(arg=11, lineno=420)
2025-07-26 10:00:03,260 - DEBUG - stack ['$binop_sub90.19', '$const94.20.3']
2025-07-26 10:00:03,260 - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=420)
2025-07-26 10:00:03,260 - DEBUG - stack ['$binop_truediv96.21']
2025-07-26 10:00:03,260 - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-26 10:00:03,260 - DEBUG - stack []
2025-07-26 10:00:03,260 - DEBUG - dispatch pc=114, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-26 10:00:03,260 - DEBUG - stack ['$null$102.23', '$102load_global.22']
2025-07-26 10:00:03,260 - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=2, lineno=422)
2025-07-26 10:00:03,260 - DEBUG - stack ['$null$102.23', '$114load_attr.24']
2025-07-26 10:00:03,260 - DEBUG - dispatch pc=126, inst=PRECALL(arg=1, lineno=422)
2025-07-26 10:00:03,261 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-26 10:00:03,261 - DEBUG - dispatch pc=130, inst=CALL(arg=1, lineno=422)
2025-07-26 10:00:03,261 - DEBUG - stack ['$null$102.23', '$114load_attr.24', '$b124.25']
2025-07-26 10:00:03,261 - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=422)
2025-07-26 10:00:03,261 - DEBUG - stack ['$130call.26']
2025-07-26 10:00:03,261 - DEBUG - dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=422)
2025-07-26 10:00:03,261 - DEBUG - stack ['$130call.26', '$null$140.28', '$140load_global.27']
2025-07-26 10:00:03,261 - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=422)
2025-07-26 10:00:03,261 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29']
2025-07-26 10:00:03,262 - DEBUG - dispatch pc=164, inst=PRECALL(arg=1, lineno=422)
2025-07-26 10:00:03,262 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-26 10:00:03,262 - DEBUG - dispatch pc=168, inst=CALL(arg=1, lineno=422)
2025-07-26 10:00:03,262 - DEBUG - stack ['$130call.26', '$null$140.28', '$152load_attr.29', '$a162.30']
2025-07-26 10:00:03,262 - DEBUG - dispatch pc=178, inst=COMPARE_OP(arg=5, lineno=422)
2025-07-26 10:00:03,262 - DEBUG - stack ['$130call.26', '$168call.31']
2025-07-26 10:00:03,262 - DEBUG - dispatch pc=184, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=422)
2025-07-26 10:00:03,262 - DEBUG - stack ['$178compare_op.32']
2025-07-26 10:00:03,262 - DEBUG - end state. edges=[Edge(pc=186, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-07-26 10:00:03,262 - DEBUG - pending: deque([State(pc_initial=186 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-07-26 10:00:03,262 - DEBUG - stack: []
2025-07-26 10:00:03,262 - DEBUG - state.pc_initial: State(pc_initial=186 nstack_initial=0)
2025-07-26 10:00:03,262 - DEBUG - dispatch pc=186, inst=LOAD_CONST(arg=4, lineno=425)
2025-07-26 10:00:03,262 - DEBUG - stack []
2025-07-26 10:00:03,262 - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=425)
2025-07-26 10:00:03,262 - DEBUG - stack ['$const186.0.4']
2025-07-26 10:00:03,263 - DEBUG - end state. edges=[]
2025-07-26 10:00:03,263 - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0)])
2025-07-26 10:00:03,263 - DEBUG - stack: []
2025-07-26 10:00:03,263 - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-07-26 10:00:03,263 - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=427)
2025-07-26 10:00:03,263 - DEBUG - stack []
2025-07-26 10:00:03,263 - DEBUG - dispatch pc=192, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-07-26 10:00:03,263 - DEBUG - stack ['$b190.0']
2025-07-26 10:00:03,263 - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=427)
2025-07-26 10:00:03,263 - DEBUG - stack ['$192unary_negative.1']
2025-07-26 10:00:03,263 - DEBUG - dispatch pc=196, inst=BINARY_OP(arg=11, lineno=427)
2025-07-26 10:00:03,263 - DEBUG - stack ['$192unary_negative.1', '$a194.2']
2025-07-26 10:00:03,263 - DEBUG - dispatch pc=200, inst=RETURN_VALUE(arg=None, lineno=427)
2025-07-26 10:00:03,263 - DEBUG - stack ['$binop_truediv196.3']
2025-07-26 10:00:03,263 - DEBUG - end state. edges=[]
2025-07-26 10:00:03,263 - DEBUG - -------------------------Prune PHIs-------------------------
2025-07-26 10:00:03,263 - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=186 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-07-26 10:00:03,263 - DEBUG - defmap: {}
2025-07-26 10:00:03,263 - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-07-26 10:00:03,264 - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-07-26 10:00:03,264 - DEBUG - keep phismap: {}
2025-07-26 10:00:03,264 - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-07-26 10:00:03,264 - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-07-26 10:00:03,264 - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'op': '+', 'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$binop_add32.6'}), (34, {}), (36, {'res': '$const36.7.3'}), (38, {'res': '$x38.8'}), (40, {'res': '$const40.9.4'}), (42, {'index': '$const40.9.4', 'target': '$x38.8', 'res': '$42binary_subscr.10'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'op': '*', 'lhs': '$const36.7.3', 'rhs': '$42binary_subscr.10', 'res': '$binop_mul52.11'}), (54, {}), (56, {'op': '-', 'lhs': '$binop_add32.6', 'rhs': '$binop_mul52.11', 'res': '$binop_sub56.12'}), (58, {}), (60, {'value': '$binop_sub56.12'}), (62, {'res': '$x62.13'}), (64, {'res': '$const64.14.1'}), (66, {'index': '$const64.14.1', 'target': '$x62.13', 'res': '$66binary_subscr.15'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'res': '$x76.16'}), (78, {'res': '$const78.17.2'}), (80, {'index': '$const78.17.2', 'target': '$x76.16', 'res': '$80binary_subscr.18'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'op': '-', 'lhs': '$66binary_subscr.15', 'rhs': '$80binary_subscr.18', 'res': '$binop_sub90.19'}), (92, {}), (94, {'res': '$const94.20.3'}), (96, {'op': '/', 'lhs': '$binop_sub90.19', 'rhs': '$const94.20.3', 'res': '$binop_truediv96.21'}), (98, {}), (100, {'value': '$binop_truediv96.21'}), (102, {'idx': 0, 'res': '$102load_global.22'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'item': '$102load_global.22', 'res': '$114load_attr.24'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$b124.25'}), (126, {}), (128, {}), (130, {'func': '$114load_attr.24', 'args': ['$b124.25'], 'kw_names': None, 'res': '$130call.26'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'idx': 0, 'res': '$140load_global.27'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {'item': '$140load_global.27', 'res': '$152load_attr.29'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'res': '$a162.30'}), (164, {}), (166, {}), (168, {'func': '$152load_attr.29', 'args': ['$a162.30'], 'kw_names': None, 'res': '$168call.31'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {'lhs': '$130call.26', 'rhs': '$168call.31', 'res': '$178compare_op.32'}), (180, {}), (182, {}), (184, {'pred': '$178compare_op.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={186: (), 190: ()})
2025-07-26 10:00:03,264 - DEBUG - block_infos State(pc_initial=186 nstack_initial=0):
AdaptBlockInfo(insts=((186, {'res': '$const186.0.4'}), (188, {'retval': '$const186.0.4', 'castval': '$188return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-26 10:00:03,264 - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$b190.0'}), (192, {'value': '$b190.0', 'res': '$192unary_negative.1'}), (194, {'res': '$a194.2'}), (196, {'op': '/', 'lhs': '$192unary_negative.1', 'rhs': '$a194.2', 'res': '$binop_truediv196.3'}), (198, {}), (200, {'retval': '$binop_truediv196.3', 'castval': '$200return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-07-26 10:00:03,265 - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $binop_add32.6 = $8binary_subscr.2 + $22binary_subscr.5 ['$22binary_subscr.5', '$8binary_subscr.2', '$binop_add32.6']
    $const36.7.3 = const(int, 2)             ['$const36.7.3']
    $const40.9.4 = const(int, 0)             ['$const40.9.4']
    $42binary_subscr.10 = getitem(value=x, index=$const40.9.4, fn=<built-in function getitem>) ['$42binary_subscr.10', '$const40.9.4', 'x']
    $binop_mul52.11 = $const36.7.3 * $42binary_subscr.10 ['$42binary_subscr.10', '$binop_mul52.11', '$const36.7.3']
    a = $binop_add32.6 - $binop_mul52.11     ['$binop_add32.6', '$binop_mul52.11', 'a']
    $const64.14.1 = const(int, 1)            ['$const64.14.1']
    $66binary_subscr.15 = getitem(value=x, index=$const64.14.1, fn=<built-in function getitem>) ['$66binary_subscr.15', '$const64.14.1', 'x']
    $const78.17.2 = const(int, -1)           ['$const78.17.2']
    $80binary_subscr.18 = getitem(value=x, index=$const78.17.2, fn=<built-in function getitem>) ['$80binary_subscr.18', '$const78.17.2', 'x']
    $binop_sub90.19 = $66binary_subscr.15 - $80binary_subscr.18 ['$66binary_subscr.15', '$80binary_subscr.18', '$binop_sub90.19']
    $const94.20.3 = const(int, 2)            ['$const94.20.3']
    b = $binop_sub90.19 / $const94.20.3      ['$binop_sub90.19', '$const94.20.3', 'b']
    $102load_global.22 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$102load_global.22']
    $114load_attr.24 = getattr(value=$102load_global.22, attr=abs) ['$102load_global.22', '$114load_attr.24']
    $130call.26 = call $114load_attr.24(b, func=$114load_attr.24, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$114load_attr.24', '$130call.26', 'b']
    $140load_global.27 = global(np: <module 'numpy' from 'Z:\\AI\\software\\miniconda3\\envs\\ace-data_env\\Lib\\site-packages\\numpy\\__init__.py'>) ['$140load_global.27']
    $152load_attr.29 = getattr(value=$140load_global.27, attr=abs) ['$140load_global.27', '$152load_attr.29']
    $168call.31 = call $152load_attr.29(a, func=$152load_attr.29, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_attr.29', '$168call.31', 'a']
    $178compare_op.32 = $130call.26 >= $168call.31 ['$130call.26', '$168call.31', '$178compare_op.32']
    bool184 = global(bool: <class 'bool'>)   ['bool184']
    $184pred = call bool184($178compare_op.32, func=bool184, args=(Var($178compare_op.32, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$178compare_op.32', '$184pred', 'bool184']
    branch $184pred, 186, 190                ['$184pred']
label 186:
    $const186.0.4 = const(int, 0)            ['$const186.0.4']
    $188return_value.1 = cast(value=$const186.0.4) ['$188return_value.1', '$const186.0.4']
    return $188return_value.1                ['$188return_value.1']
label 190:
    $192unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$192unary_negative.1', 'b']
    $binop_truediv196.3 = $192unary_negative.1 / a ['$192unary_negative.1', '$binop_truediv196.3', 'a']
    $200return_value.4 = cast(value=$binop_truediv196.3) ['$200return_value.4', '$binop_truediv196.3']
    return $200return_value.4                ['$200return_value.4']

2025-07-26 10:00:04,322 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:06,199 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:06,201 - ERROR - Fehler bei der Verarbeitung von data\01. 4AM in Bangkok 130819.mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:06,202 - INFO - Verarbeite Datei: data\01. Ackan (Feat. Dillon Cooper).mp3
2025-07-26 10:00:06,202 - INFO - Beginne Verarbeitung der Datei: data\01. Ackan (Feat. Dillon Cooper).mp3
2025-07-26 10:00:07,424 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:07,516 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:07,518 - ERROR - Fehler bei der Verarbeitung von data\01. Ackan (Feat. Dillon Cooper).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:07,518 - INFO - Verarbeite Datei: data\01. Aggro Berlin Label Nr.1 - Arschgefickter Hurensohn (Skit).mp3
2025-07-26 10:00:07,519 - INFO - Beginne Verarbeitung der Datei: data\01. Aggro Berlin Label Nr.1 - Arschgefickter Hurensohn (Skit).mp3
2025-07-26 10:00:08,740 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:08,820 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:08,822 - ERROR - Fehler bei der Verarbeitung von data\01. Aggro Berlin Label Nr.1 - Arschgefickter Hurensohn (Skit).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:08,822 - INFO - Verarbeite Datei: data\01. Alles Verloren (Album Version).mp3
2025-07-26 10:00:08,822 - INFO - Beginne Verarbeitung der Datei: data\01. Alles Verloren (Album Version).mp3
2025-07-26 10:00:10,047 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:10,123 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:10,126 - ERROR - Fehler bei der Verarbeitung von data\01. Alles Verloren (Album Version).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:10,126 - INFO - Verarbeite Datei: data\01. Alles Wird Gut (Album Version).mp3
2025-07-26 10:00:10,127 - INFO - Beginne Verarbeitung der Datei: data\01. Alles Wird Gut (Album Version).mp3
2025-07-26 10:00:11,342 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:11,424 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:11,425 - ERROR - Fehler bei der Verarbeitung von data\01. Alles Wird Gut (Album Version).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:11,425 - INFO - Verarbeite Datei: data\01. Apres Ski.mp3
2025-07-26 10:00:11,425 - INFO - Beginne Verarbeitung der Datei: data\01. Apres Ski.mp3
2025-07-26 10:00:12,654 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:12,790 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:12,791 - ERROR - Fehler bei der Verarbeitung von data\01. Apres Ski.mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:12,791 - INFO - Verarbeite Datei: data\01. Arschficksong (Original).mp3
2025-07-26 10:00:12,791 - INFO - Beginne Verarbeitung der Datei: data\01. Arschficksong (Original).mp3
2025-07-26 10:00:14,024 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:14,286 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:14,287 - ERROR - Fehler bei der Verarbeitung von data\01. Arschficksong (Original).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:14,288 - INFO - Verarbeite Datei: data\01. Astronaut (Feat. Andreas Bourani).mp3
2025-07-26 10:00:14,288 - INFO - Beginne Verarbeitung der Datei: data\01. Astronaut (Feat. Andreas Bourani).mp3
2025-07-26 10:00:15,507 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:15,640 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:15,641 - ERROR - Fehler bei der Verarbeitung von data\01. Astronaut (Feat. Andreas Bourani).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:15,642 - INFO - Verarbeite Datei: data\01. Augen Auf (Original).mp3
2025-07-26 10:00:15,643 - INFO - Beginne Verarbeitung der Datei: data\01. Augen Auf (Original).mp3
2025-07-26 10:00:16,855 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:17,001 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:17,002 - ERROR - Fehler bei der Verarbeitung von data\01. Augen Auf (Original).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:17,002 - INFO - Verarbeite Datei: data\01. Augenblick (Album Version).mp3
2025-07-26 10:00:17,003 - INFO - Beginne Verarbeitung der Datei: data\01. Augenblick (Album Version).mp3
2025-07-26 10:00:18,224 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:18,373 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:18,374 - ERROR - Fehler bei der Verarbeitung von data\01. Augenblick (Album Version).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:18,374 - INFO - Verarbeite Datei: data\01. Aura.mp3
2025-07-26 10:00:18,374 - INFO - Beginne Verarbeitung der Datei: data\01. Aura.mp3
2025-07-26 10:00:19,592 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:19,724 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:19,725 - ERROR - Fehler bei der Verarbeitung von data\01. Aura.mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:19,725 - INFO - Verarbeite Datei: data\01. Bad Vibe.mp3
2025-07-26 10:00:19,725 - INFO - Beginne Verarbeitung der Datei: data\01. Bad Vibe.mp3
2025-07-26 10:00:20,942 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:21,066 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:21,067 - ERROR - Fehler bei der Verarbeitung von data\01. Bad Vibe.mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:21,068 - INFO - Verarbeite Datei: data\01. Bagger (Feat. Sizzlac, Caput & Moe Mitchell).mp3
2025-07-26 10:00:21,068 - INFO - Beginne Verarbeitung der Datei: data\01. Bagger (Feat. Sizzlac, Caput & Moe Mitchell).mp3
2025-07-26 10:00:22,294 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:22,447 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:22,449 - ERROR - Fehler bei der Verarbeitung von data\01. Bagger (Feat. Sizzlac, Caput & Moe Mitchell).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:22,449 - INFO - Verarbeite Datei: data\01. Baus Intro.mp3
2025-07-26 10:00:22,450 - INFO - Beginne Verarbeitung der Datei: data\01. Baus Intro.mp3
2025-07-26 10:00:23,672 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:23,900 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:23,901 - ERROR - Fehler bei der Verarbeitung von data\01. Baus Intro.mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:23,902 - INFO - Verarbeite Datei: data\01. Bei Nacht (Original).mp3
2025-07-26 10:00:23,902 - INFO - Beginne Verarbeitung der Datei: data\01. Bei Nacht (Original).mp3
2025-07-26 10:00:25,122 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:25,267 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:25,269 - ERROR - Fehler bei der Verarbeitung von data\01. Bei Nacht (Original).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:25,269 - INFO - Verarbeite Datei: data\01. Berlins Most Wanted.mp3
2025-07-26 10:00:25,269 - INFO - Beginne Verarbeitung der Datei: data\01. Berlins Most Wanted.mp3
2025-07-26 10:00:26,493 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:26,636 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:26,637 - ERROR - Fehler bei der Verarbeitung von data\01. Berlins Most Wanted.mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:26,638 - INFO - Verarbeite Datei: data\01. Best of Freestyles.mp3
2025-07-26 10:00:26,638 - INFO - Beginne Verarbeitung der Datei: data\01. Best of Freestyles.mp3
2025-07-26 10:00:27,886 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:28,011 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:28,012 - ERROR - Fehler bei der Verarbeitung von data\01. Best of Freestyles.mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:28,013 - INFO - Verarbeite Datei: data\01. Beweg Dein Arsch (Radio Edit) (Feat. Scooter, Kitty Kat & Tony D).mp3
2025-07-26 10:00:28,013 - INFO - Beginne Verarbeitung der Datei: data\01. Beweg Dein Arsch (Radio Edit) (Feat. Scooter, Kitty Kat & Tony D).mp3
2025-07-26 10:00:29,244 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:29,399 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:29,400 - ERROR - Fehler bei der Verarbeitung von data\01. Beweg Dein Arsch (Radio Edit) (Feat. Scooter, Kitty Kat & Tony D).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:29,401 - INFO - Verarbeite Datei: data\01. Bis Die Sonne Rauskommt.mp3
2025-07-26 10:00:29,402 - INFO - Beginne Verarbeitung der Datei: data\01. Bis Die Sonne Rauskommt.mp3
2025-07-26 10:00:30,618 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:30,766 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:30,767 - ERROR - Fehler bei der Verarbeitung von data\01. Bis Die Sonne Rauskommt.mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:30,767 - INFO - Verarbeite Datei: data\01. Bitch! (Wo ist mein Geld) (Dirty Version) (Feat. Kool Savas).mp3
2025-07-26 10:00:30,768 - INFO - Beginne Verarbeitung der Datei: data\01. Bitch! (Wo ist mein Geld) (Dirty Version) (Feat. Kool Savas).mp3
2025-07-26 10:00:31,988 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:32,147 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:32,149 - ERROR - Fehler bei der Verarbeitung von data\01. Bitch! (Wo ist mein Geld) (Dirty Version) (Feat. Kool Savas).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:32,149 - INFO - Verarbeite Datei: data\01. Blessed Und Gifted.mp3
2025-07-26 10:00:32,149 - INFO - Beginne Verarbeitung der Datei: data\01. Blessed Und Gifted.mp3
2025-07-26 10:00:33,374 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:33,513 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:33,514 - ERROR - Fehler bei der Verarbeitung von data\01. Blessed Und Gifted.mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:33,515 - INFO - Verarbeite Datei: data\01. Blubb (Feat. Morten & Morlockk Dilemma).mp3
2025-07-26 10:00:33,515 - INFO - Beginne Verarbeitung der Datei: data\01. Blubb (Feat. Morten & Morlockk Dilemma).mp3
2025-07-26 10:00:34,738 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:34,886 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:34,888 - ERROR - Fehler bei der Verarbeitung von data\01. Blubb (Feat. Morten & Morlockk Dilemma).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:34,888 - INFO - Verarbeite Datei: data\01. Carmen (Original).mp3
2025-07-26 10:00:34,888 - INFO - Beginne Verarbeitung der Datei: data\01. Carmen (Original).mp3
2025-07-26 10:00:36,105 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:36,241 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:36,242 - ERROR - Fehler bei der Verarbeitung von data\01. Carmen (Original).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:36,243 - INFO - Verarbeite Datei: data\01. Ching Ching (Album Version).mp3
2025-07-26 10:00:36,243 - INFO - Beginne Verarbeitung der Datei: data\01. Ching Ching (Album Version).mp3
2025-07-26 10:00:37,467 - DEBUG - Starting new HTTP connection (1): localhost:11434
2025-07-26 10:00:37,698 - DEBUG - http://localhost:11434 "POST /api/generate HTTP/1.1" 200 None
2025-07-26 10:00:37,699 - ERROR - Fehler bei der Verarbeitung von data\01. Ching Ching (Album Version).mp3: 2 validation errors for ProgressUnit
length.int
  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing
length.float
  Input should be a valid number, unable to parse string as a number [type=float_parsing, input_value="⚠️ ❌ Fehler bei 01...ev/2.11/v/float_parsing", input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/float_parsing
2025-07-26 10:00:37,700 - INFO - Verarbeitung abgeschlossen.
2025-07-26 10:00:37,700 - DEBUG - Loaded backend tkagg version 8.6.
